# Makefile.in generated by automake 1.14 from Makefile.am.
# tests/check/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/gstreamer
pkgincludedir = $(includedir)/gstreamer
pkglibdir = $(libdir)/gstreamer
pkglibexecdir = $(libexecdir)/gstreamer
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(top_srcdir)/common/check.mak $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/depcomp $(noinst_HEADERS) \
	$(top_srcdir)/test-driver
check_PROGRAMS = $(am__EXEEXT_1) gst/gstatomicqueue$(EXEEXT) \
	gst/gstbuffer$(EXEEXT) gst/gstbufferlist$(EXEEXT) \
	gst/gstmeta$(EXEEXT) gst/gstmemory$(EXEEXT) \
	gst/gstbus$(EXEEXT) gst/gstcaps$(EXEEXT) \
	gst/gstcapsfeatures$(EXEEXT) $(am__EXEEXT_2) \
	gst/gstdatetime$(EXEEXT) gst/gstinfo$(EXEEXT) \
	gst/gstiterator$(EXEEXT) gst/gstmessage$(EXEEXT) \
	gst/gstminiobject$(EXEEXT) gst/gstobject$(EXEEXT) \
	gst/gstpad$(EXEEXT) gst/gstparamspecs$(EXEEXT) \
	gst/gstpipeline$(EXEEXT) gst/gstpoll$(EXEEXT) \
	gst/gstsegment$(EXEEXT) gst/gstsystemclock$(EXEEXT) \
	gst/gstclock$(EXEEXT) gst/gststructure$(EXEEXT) \
	gst/gsttag$(EXEEXT) gst/gsttagsetter$(EXEEXT) \
	gst/gsttask$(EXEEXT) gst/gsttoc$(EXEEXT) \
	gst/gsttocsetter$(EXEEXT) gst/gstvalue$(EXEEXT) \
	generic/states$(EXEEXT) $(am__EXEEXT_3) $(am__EXEEXT_4) \
	$(am__EXEEXT_5) libs/adapter$(EXEEXT) libs/bitreader$(EXEEXT) \
	libs/bytereader$(EXEEXT) libs/bytewriter$(EXEEXT) \
	libs/collectpads$(EXEEXT) libs/gstnetclientclock$(EXEEXT) \
	libs/gstnettimeprovider$(EXEEXT) libs/gsttestclock$(EXEEXT) \
	libs/transform1$(EXEEXT) tools/gstinspect$(EXEEXT)
noinst_PROGRAMS =
subdir = tests/check
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/common/m4/as-ac-expand.m4 \
	$(top_srcdir)/common/m4/as-auto-alt.m4 \
	$(top_srcdir)/common/m4/as-compiler-flag.m4 \
	$(top_srcdir)/common/m4/as-docbook.m4 \
	$(top_srcdir)/common/m4/as-libtool.m4 \
	$(top_srcdir)/common/m4/as-scrub-include.m4 \
	$(top_srcdir)/common/m4/as-version.m4 \
	$(top_srcdir)/common/m4/ax_create_stdint_h.m4 \
	$(top_srcdir)/common/m4/gst-arch.m4 \
	$(top_srcdir)/common/m4/gst-args.m4 \
	$(top_srcdir)/common/m4/gst-check.m4 \
	$(top_srcdir)/common/m4/gst-doc.m4 \
	$(top_srcdir)/common/m4/gst-error.m4 \
	$(top_srcdir)/common/m4/gst-feature.m4 \
	$(top_srcdir)/common/m4/gst-function.m4 \
	$(top_srcdir)/common/m4/gst-gettext.m4 \
	$(top_srcdir)/common/m4/gst-glib2.m4 \
	$(top_srcdir)/common/m4/gst-package-release-datetime.m4 \
	$(top_srcdir)/common/m4/gst-parser.m4 \
	$(top_srcdir)/common/m4/gst-platform.m4 \
	$(top_srcdir)/common/m4/gst-plugin-docs.m4 \
	$(top_srcdir)/common/m4/gst-plugindir.m4 \
	$(top_srcdir)/common/m4/gst.m4 \
	$(top_srcdir)/common/m4/gtk-doc.m4 \
	$(top_srcdir)/common/m4/introspection.m4 \
	$(top_srcdir)/common/m4/pkg.m4 $(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/check-checks.m4 $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
	$(top_srcdir)/m4/inttypes_h.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/longlong.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/stdint_h.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = gst/gstabi$(EXEEXT)
am__EXEEXT_2 = gst/gstcpp$(EXEEXT) \
	libs/gstlibscpp$(EXEEXT)
am__EXEEXT_3 = pipelines/simple-launch-lines$(EXEEXT) \
	pipelines/cleanup$(EXEEXT) \
	pipelines/parse-launch$(EXEEXT)
#am__EXEEXT_3 =  \
#	pipelines/parse-disabled$(EXEEXT)
am__EXEEXT_4 = gst/gst$(EXEEXT) \
	gst/gstbin$(EXEEXT) \
	gst/gstchildproxy$(EXEEXT) \
	gst/gstcontext$(EXEEXT) \
	gst/gstcontroller$(EXEEXT) \
	gst/gstelement$(EXEEXT) \
	gst/gstelementfactory$(EXEEXT) \
	gst/gstevent$(EXEEXT) \
	gst/gstghostpad$(EXEEXT) \
	gst/gstplugin$(EXEEXT) \
	gst/gstpreset$(EXEEXT) \
	gst/gstquery$(EXEEXT) \
	gst/gstregistry$(EXEEXT) \
	gst/gsturi$(EXEEXT) \
	gst/gstutils$(EXEEXT) \
	generic/sinks$(EXEEXT) \
	elements/capsfilter$(EXEEXT) \
	elements/fakesink$(EXEEXT) \
	elements/fakesrc$(EXEEXT) \
	elements/fdsrc$(EXEEXT) \
	elements/filesink$(EXEEXT) \
	elements/filesrc$(EXEEXT) \
	elements/funnel$(EXEEXT) \
	elements/identity$(EXEEXT) \
	elements/multiqueue$(EXEEXT) \
	elements/selector$(EXEEXT) \
	elements/tee$(EXEEXT) \
	elements/queue$(EXEEXT) \
	elements/queue2$(EXEEXT) \
	elements/valve$(EXEEXT) \
	libs/basesrc$(EXEEXT) \
	libs/basesink$(EXEEXT) \
	libs/controller$(EXEEXT) \
	libs/queuearray$(EXEEXT) \
	libs/typefindhelper$(EXEEXT) \
	pipelines/seek$(EXEEXT) \
	pipelines/stress$(EXEEXT) \
	pipelines/queue-error$(EXEEXT)
am__EXEEXT_5 = libs/libsabi$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
elements_capsfilter_SOURCES = elements/capsfilter.c
am__dirstamp = $(am__leading_dot)dirstamp
elements_capsfilter_OBJECTS = elements/capsfilter.$(OBJEXT)
elements_capsfilter_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
elements_capsfilter_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
elements_fakesink_SOURCES = elements/fakesink.c
elements_fakesink_OBJECTS = elements/fakesink.$(OBJEXT)
elements_fakesink_LDADD = $(LDADD)
elements_fakesink_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
elements_fakesrc_SOURCES = elements/fakesrc.c
elements_fakesrc_OBJECTS = elements/fakesrc.$(OBJEXT)
elements_fakesrc_LDADD = $(LDADD)
elements_fakesrc_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
elements_fdsrc_SOURCES = elements/fdsrc.c
elements_fdsrc_OBJECTS = elements/elements_fdsrc-fdsrc.$(OBJEXT)
elements_fdsrc_LDADD = $(LDADD)
elements_fdsrc_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
elements_fdsrc_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(elements_fdsrc_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
elements_filesink_SOURCES = elements/filesink.c
elements_filesink_OBJECTS = elements/filesink.$(OBJEXT)
elements_filesink_LDADD = $(LDADD)
elements_filesink_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
elements_filesrc_SOURCES = elements/filesrc.c
elements_filesrc_OBJECTS =  \
	elements/elements_filesrc-filesrc.$(OBJEXT)
elements_filesrc_LDADD = $(LDADD)
elements_filesrc_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
elements_filesrc_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(elements_filesrc_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
elements_funnel_SOURCES = elements/funnel.c
elements_funnel_OBJECTS = elements/funnel.$(OBJEXT)
elements_funnel_LDADD = $(LDADD)
elements_funnel_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
elements_identity_SOURCES = elements/identity.c
elements_identity_OBJECTS = elements/identity.$(OBJEXT)
elements_identity_LDADD = $(LDADD)
elements_identity_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
elements_multiqueue_SOURCES = elements/multiqueue.c
elements_multiqueue_OBJECTS = elements/multiqueue.$(OBJEXT)
elements_multiqueue_LDADD = $(LDADD)
elements_multiqueue_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
elements_queue_SOURCES = elements/queue.c
elements_queue_OBJECTS = elements/queue.$(OBJEXT)
elements_queue_LDADD = $(LDADD)
elements_queue_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
elements_queue2_SOURCES = elements/queue2.c
elements_queue2_OBJECTS = elements/queue2.$(OBJEXT)
elements_queue2_LDADD = $(LDADD)
elements_queue2_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
elements_selector_SOURCES = elements/selector.c
elements_selector_OBJECTS = elements/selector.$(OBJEXT)
elements_selector_LDADD = $(LDADD)
elements_selector_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
elements_tee_SOURCES = elements/tee.c
elements_tee_OBJECTS = elements/tee.$(OBJEXT)
elements_tee_LDADD = $(LDADD)
elements_tee_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
elements_valve_SOURCES = elements/valve.c
elements_valve_OBJECTS = elements/valve.$(OBJEXT)
elements_valve_LDADD = $(LDADD)
elements_valve_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
generic_sinks_SOURCES = generic/sinks.c
generic_sinks_OBJECTS = generic/sinks.$(OBJEXT)
generic_sinks_LDADD = $(LDADD)
generic_sinks_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
generic_states_SOURCES = generic/states.c
generic_states_OBJECTS = generic/states.$(OBJEXT)
generic_states_LDADD = $(LDADD)
generic_states_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gst_SOURCES = gst/gst.c
gst_gst_OBJECTS = gst/gst.$(OBJEXT)
gst_gst_LDADD = $(LDADD)
gst_gst_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstabi_SOURCES = gst/gstabi.c
gst_gstabi_OBJECTS = gst/gstabi.$(OBJEXT)
gst_gstabi_LDADD = $(LDADD)
gst_gstabi_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstatomicqueue_SOURCES = gst/gstatomicqueue.c
gst_gstatomicqueue_OBJECTS = gst/gstatomicqueue.$(OBJEXT)
gst_gstatomicqueue_LDADD = $(LDADD)
gst_gstatomicqueue_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstbin_SOURCES = gst/gstbin.c
gst_gstbin_OBJECTS = gst/gstbin.$(OBJEXT)
gst_gstbin_LDADD = $(LDADD)
gst_gstbin_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstbuffer_SOURCES = gst/gstbuffer.c
gst_gstbuffer_OBJECTS = gst/gstbuffer.$(OBJEXT)
gst_gstbuffer_LDADD = $(LDADD)
gst_gstbuffer_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstbufferlist_SOURCES = gst/gstbufferlist.c
gst_gstbufferlist_OBJECTS = gst/gstbufferlist.$(OBJEXT)
gst_gstbufferlist_LDADD = $(LDADD)
gst_gstbufferlist_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstbus_SOURCES = gst/gstbus.c
gst_gstbus_OBJECTS = gst/gstbus.$(OBJEXT)
gst_gstbus_LDADD = $(LDADD)
gst_gstbus_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstcaps_SOURCES = gst/gstcaps.c
gst_gstcaps_OBJECTS = gst/gstcaps.$(OBJEXT)
gst_gstcaps_LDADD = $(LDADD)
gst_gstcaps_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstcapsfeatures_SOURCES = gst/gstcapsfeatures.c
gst_gstcapsfeatures_OBJECTS = gst/gstcapsfeatures.$(OBJEXT)
gst_gstcapsfeatures_LDADD = $(LDADD)
gst_gstcapsfeatures_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstchildproxy_SOURCES = gst/gstchildproxy.c
gst_gstchildproxy_OBJECTS = gst/gstchildproxy.$(OBJEXT)
gst_gstchildproxy_LDADD = $(LDADD)
gst_gstchildproxy_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstclock_SOURCES = gst/gstclock.c
gst_gstclock_OBJECTS = gst/gstclock.$(OBJEXT)
gst_gstclock_LDADD = $(LDADD)
gst_gstclock_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstcontext_SOURCES = gst/gstcontext.c
gst_gstcontext_OBJECTS = gst/gstcontext.$(OBJEXT)
gst_gstcontext_LDADD = $(LDADD)
gst_gstcontext_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstcontroller_SOURCES = gst/gstcontroller.c
gst_gstcontroller_OBJECTS = gst/gstcontroller.$(OBJEXT)
gst_gstcontroller_LDADD = $(LDADD)
gst_gstcontroller_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
am_gst_gstcpp_OBJECTS = gst/gstcpp.$(OBJEXT)
gst_gstcpp_OBJECTS = $(am_gst_gstcpp_OBJECTS)
gst_gstcpp_LDADD = $(LDADD)
gst_gstcpp_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstdatetime_SOURCES = gst/gstdatetime.c
gst_gstdatetime_OBJECTS = gst/gstdatetime.$(OBJEXT)
gst_gstdatetime_LDADD = $(LDADD)
gst_gstdatetime_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstelement_SOURCES = gst/gstelement.c
gst_gstelement_OBJECTS = gst/gstelement.$(OBJEXT)
gst_gstelement_LDADD = $(LDADD)
gst_gstelement_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstelementfactory_SOURCES = gst/gstelementfactory.c
gst_gstelementfactory_OBJECTS = gst/gstelementfactory.$(OBJEXT)
gst_gstelementfactory_LDADD = $(LDADD)
gst_gstelementfactory_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstevent_SOURCES = gst/gstevent.c
gst_gstevent_OBJECTS = gst/gstevent.$(OBJEXT)
gst_gstevent_LDADD = $(LDADD)
gst_gstevent_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstghostpad_SOURCES = gst/gstghostpad.c
gst_gstghostpad_OBJECTS = gst/gstghostpad.$(OBJEXT)
gst_gstghostpad_LDADD = $(LDADD)
gst_gstghostpad_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstinfo_SOURCES = gst/gstinfo.c
gst_gstinfo_OBJECTS = gst/gstinfo.$(OBJEXT)
gst_gstinfo_LDADD = $(LDADD)
gst_gstinfo_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstiterator_SOURCES = gst/gstiterator.c
gst_gstiterator_OBJECTS = gst/gstiterator.$(OBJEXT)
gst_gstiterator_LDADD = $(LDADD)
gst_gstiterator_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstmemory_SOURCES = gst/gstmemory.c
gst_gstmemory_OBJECTS = gst/gstmemory.$(OBJEXT)
gst_gstmemory_LDADD = $(LDADD)
gst_gstmemory_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstmessage_SOURCES = gst/gstmessage.c
gst_gstmessage_OBJECTS = gst/gstmessage.$(OBJEXT)
gst_gstmessage_LDADD = $(LDADD)
gst_gstmessage_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstmeta_SOURCES = gst/gstmeta.c
gst_gstmeta_OBJECTS = gst/gstmeta.$(OBJEXT)
gst_gstmeta_LDADD = $(LDADD)
gst_gstmeta_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstminiobject_SOURCES = gst/gstminiobject.c
gst_gstminiobject_OBJECTS = gst/gstminiobject.$(OBJEXT)
gst_gstminiobject_LDADD = $(LDADD)
gst_gstminiobject_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstobject_SOURCES = gst/gstobject.c
gst_gstobject_OBJECTS = gst/gstobject.$(OBJEXT)
gst_gstobject_LDADD = $(LDADD)
gst_gstobject_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstpad_SOURCES = gst/gstpad.c
gst_gstpad_OBJECTS = gst/gstpad.$(OBJEXT)
gst_gstpad_LDADD = $(LDADD)
gst_gstpad_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstparamspecs_SOURCES = gst/gstparamspecs.c
gst_gstparamspecs_OBJECTS = gst/gstparamspecs.$(OBJEXT)
gst_gstparamspecs_LDADD = $(LDADD)
gst_gstparamspecs_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstpipeline_SOURCES = gst/gstpipeline.c
gst_gstpipeline_OBJECTS = gst/gstpipeline.$(OBJEXT)
gst_gstpipeline_LDADD = $(LDADD)
gst_gstpipeline_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstplugin_SOURCES = gst/gstplugin.c
gst_gstplugin_OBJECTS = gst/gstplugin.$(OBJEXT)
gst_gstplugin_LDADD = $(LDADD)
gst_gstplugin_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstpoll_SOURCES = gst/gstpoll.c
gst_gstpoll_OBJECTS = gst/gstpoll.$(OBJEXT)
gst_gstpoll_LDADD = $(LDADD)
gst_gstpoll_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstpreset_SOURCES = gst/gstpreset.c
gst_gstpreset_OBJECTS = gst/gstpreset.$(OBJEXT)
gst_gstpreset_LDADD = $(LDADD)
gst_gstpreset_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstquery_SOURCES = gst/gstquery.c
gst_gstquery_OBJECTS = gst/gstquery.$(OBJEXT)
gst_gstquery_LDADD = $(LDADD)
gst_gstquery_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstregistry_SOURCES = gst/gstregistry.c
gst_gstregistry_OBJECTS = gst/gstregistry.$(OBJEXT)
gst_gstregistry_LDADD = $(LDADD)
gst_gstregistry_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstsegment_SOURCES = gst/gstsegment.c
gst_gstsegment_OBJECTS = gst/gstsegment.$(OBJEXT)
gst_gstsegment_LDADD = $(LDADD)
gst_gstsegment_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gststructure_SOURCES = gst/gststructure.c
gst_gststructure_OBJECTS = gst/gststructure.$(OBJEXT)
gst_gststructure_LDADD = $(LDADD)
gst_gststructure_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstsystemclock_SOURCES = gst/gstsystemclock.c
gst_gstsystemclock_OBJECTS = gst/gstsystemclock.$(OBJEXT)
gst_gstsystemclock_LDADD = $(LDADD)
gst_gstsystemclock_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gsttag_SOURCES = gst/gsttag.c
gst_gsttag_OBJECTS = gst/gsttag.$(OBJEXT)
gst_gsttag_LDADD = $(LDADD)
gst_gsttag_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gsttagsetter_SOURCES = gst/gsttagsetter.c
gst_gsttagsetter_OBJECTS = gst/gsttagsetter.$(OBJEXT)
gst_gsttagsetter_LDADD = $(LDADD)
gst_gsttagsetter_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gsttask_SOURCES = gst/gsttask.c
gst_gsttask_OBJECTS = gst/gsttask.$(OBJEXT)
gst_gsttask_LDADD = $(LDADD)
gst_gsttask_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gsttoc_SOURCES = gst/gsttoc.c
gst_gsttoc_OBJECTS = gst/gsttoc.$(OBJEXT)
gst_gsttoc_LDADD = $(LDADD)
gst_gsttoc_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gsttocsetter_SOURCES = gst/gsttocsetter.c
gst_gsttocsetter_OBJECTS = gst/gsttocsetter.$(OBJEXT)
gst_gsttocsetter_LDADD = $(LDADD)
gst_gsttocsetter_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gsturi_SOURCES = gst/gsturi.c
gst_gsturi_OBJECTS = gst/gsturi.$(OBJEXT)
gst_gsturi_LDADD = $(LDADD)
gst_gsturi_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstutils_SOURCES = gst/gstutils.c
gst_gstutils_OBJECTS = gst/gstutils.$(OBJEXT)
am__DEPENDENCIES_2 = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
gst_gstutils_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
gst_gstvalue_SOURCES = gst/gstvalue.c
gst_gstvalue_OBJECTS = gst/gstvalue.$(OBJEXT)
gst_gstvalue_LDADD = $(LDADD)
gst_gstvalue_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
libs_adapter_SOURCES = libs/adapter.c
libs_adapter_OBJECTS = libs/adapter.$(OBJEXT)
libs_adapter_LDADD = $(LDADD)
libs_adapter_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
libs_basesink_SOURCES = libs/basesink.c
libs_basesink_OBJECTS = libs/basesink.$(OBJEXT)
libs_basesink_LDADD = $(LDADD)
libs_basesink_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
libs_basesrc_SOURCES = libs/basesrc.c
libs_basesrc_OBJECTS = libs/basesrc.$(OBJEXT)
libs_basesrc_LDADD = $(LDADD)
libs_basesrc_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
libs_bitreader_SOURCES = libs/bitreader.c
libs_bitreader_OBJECTS = libs/bitreader.$(OBJEXT)
libs_bitreader_LDADD = $(LDADD)
libs_bitreader_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
libs_bytereader_SOURCES = libs/bytereader.c
libs_bytereader_OBJECTS = libs/bytereader.$(OBJEXT)
libs_bytereader_LDADD = $(LDADD)
libs_bytereader_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
libs_bytewriter_SOURCES = libs/bytewriter.c
libs_bytewriter_OBJECTS = libs/bytewriter.$(OBJEXT)
libs_bytewriter_LDADD = $(LDADD)
libs_bytewriter_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
libs_collectpads_SOURCES = libs/collectpads.c
libs_collectpads_OBJECTS = libs/collectpads.$(OBJEXT)
libs_collectpads_LDADD = $(LDADD)
libs_collectpads_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
libs_controller_SOURCES = libs/controller.c
libs_controller_OBJECTS = libs/controller.$(OBJEXT)
libs_controller_DEPENDENCIES = $(top_builddir)/libs/gst/controller/libgstcontroller-1.0.la \
	$(am__DEPENDENCIES_2)
am_libs_gstlibscpp_OBJECTS = libs/gstlibscpp.$(OBJEXT)
libs_gstlibscpp_OBJECTS = $(am_libs_gstlibscpp_OBJECTS)
libs_gstlibscpp_LDADD = $(LDADD)
libs_gstlibscpp_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
libs_gstnetclientclock_SOURCES = libs/gstnetclientclock.c
libs_gstnetclientclock_OBJECTS = libs/gstnetclientclock.$(OBJEXT)
libs_gstnetclientclock_DEPENDENCIES =  \
	$(top_builddir)/libs/gst/net/libgstnet-1.0.la \
	$(am__DEPENDENCIES_2)
libs_gstnettimeprovider_SOURCES = libs/gstnettimeprovider.c
libs_gstnettimeprovider_OBJECTS = libs/gstnettimeprovider.$(OBJEXT)
libs_gstnettimeprovider_DEPENDENCIES =  \
	$(top_builddir)/libs/gst/net/libgstnet-1.0.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
libs_gsttestclock_SOURCES = libs/gsttestclock.c
libs_gsttestclock_OBJECTS = libs/gsttestclock.$(OBJEXT)
libs_gsttestclock_LDADD = $(LDADD)
libs_gsttestclock_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
libs_libsabi_SOURCES = libs/libsabi.c
libs_libsabi_OBJECTS = libs/libsabi.$(OBJEXT)
libs_libsabi_LDADD = $(LDADD)
libs_libsabi_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
libs_queuearray_SOURCES = libs/queuearray.c
libs_queuearray_OBJECTS = libs/queuearray.$(OBJEXT)
libs_queuearray_LDADD = $(LDADD)
libs_queuearray_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
libs_transform1_SOURCES = libs/transform1.c
libs_transform1_OBJECTS = libs/transform1.$(OBJEXT)
libs_transform1_LDADD = $(LDADD)
libs_transform1_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
libs_typefindhelper_SOURCES = libs/typefindhelper.c
libs_typefindhelper_OBJECTS = libs/typefindhelper.$(OBJEXT)
libs_typefindhelper_LDADD = $(LDADD)
libs_typefindhelper_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
pipelines_cleanup_SOURCES = pipelines/cleanup.c
pipelines_cleanup_OBJECTS = pipelines/cleanup.$(OBJEXT)
pipelines_cleanup_LDADD = $(LDADD)
pipelines_cleanup_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
pipelines_parse_disabled_SOURCES = pipelines/parse-disabled.c
pipelines_parse_disabled_OBJECTS = pipelines/parse-disabled.$(OBJEXT)
pipelines_parse_disabled_LDADD = $(LDADD)
pipelines_parse_disabled_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
pipelines_parse_launch_SOURCES = pipelines/parse-launch.c
pipelines_parse_launch_OBJECTS = pipelines/parse-launch.$(OBJEXT)
pipelines_parse_launch_LDADD = $(LDADD)
pipelines_parse_launch_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
pipelines_queue_error_SOURCES = pipelines/queue-error.c
pipelines_queue_error_OBJECTS = pipelines/queue-error.$(OBJEXT)
pipelines_queue_error_LDADD = $(LDADD)
pipelines_queue_error_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
pipelines_seek_SOURCES = pipelines/seek.c
pipelines_seek_OBJECTS = pipelines/seek.$(OBJEXT)
pipelines_seek_LDADD = $(LDADD)
pipelines_seek_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
pipelines_simple_launch_lines_SOURCES =  \
	pipelines/simple-launch-lines.c
pipelines_simple_launch_lines_OBJECTS =  \
	pipelines/simple-launch-lines.$(OBJEXT)
pipelines_simple_launch_lines_LDADD = $(LDADD)
pipelines_simple_launch_lines_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
pipelines_stress_SOURCES = pipelines/stress.c
pipelines_stress_OBJECTS = pipelines/stress.$(OBJEXT)
pipelines_stress_LDADD = $(LDADD)
pipelines_stress_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
tools_gstinspect_SOURCES = tools/gstinspect.c
tools_gstinspect_OBJECTS = tools/gstinspect.$(OBJEXT)
tools_gstinspect_LDADD = $(LDADD)
tools_gstinspect_DEPENDENCIES = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = elements/capsfilter.c elements/fakesink.c elements/fakesrc.c \
	elements/fdsrc.c elements/filesink.c elements/filesrc.c \
	elements/funnel.c elements/identity.c elements/multiqueue.c \
	elements/queue.c elements/queue2.c elements/selector.c \
	elements/tee.c elements/valve.c generic/sinks.c \
	generic/states.c gst/gst.c gst/gstabi.c gst/gstatomicqueue.c \
	gst/gstbin.c gst/gstbuffer.c gst/gstbufferlist.c gst/gstbus.c \
	gst/gstcaps.c gst/gstcapsfeatures.c gst/gstchildproxy.c \
	gst/gstclock.c gst/gstcontext.c gst/gstcontroller.c \
	$(gst_gstcpp_SOURCES) gst/gstdatetime.c gst/gstelement.c \
	gst/gstelementfactory.c gst/gstevent.c gst/gstghostpad.c \
	gst/gstinfo.c gst/gstiterator.c gst/gstmemory.c \
	gst/gstmessage.c gst/gstmeta.c gst/gstminiobject.c \
	gst/gstobject.c gst/gstpad.c gst/gstparamspecs.c \
	gst/gstpipeline.c gst/gstplugin.c gst/gstpoll.c \
	gst/gstpreset.c gst/gstquery.c gst/gstregistry.c \
	gst/gstsegment.c gst/gststructure.c gst/gstsystemclock.c \
	gst/gsttag.c gst/gsttagsetter.c gst/gsttask.c gst/gsttoc.c \
	gst/gsttocsetter.c gst/gsturi.c gst/gstutils.c gst/gstvalue.c \
	libs/adapter.c libs/basesink.c libs/basesrc.c libs/bitreader.c \
	libs/bytereader.c libs/bytewriter.c libs/collectpads.c \
	libs/controller.c $(libs_gstlibscpp_SOURCES) \
	libs/gstnetclientclock.c libs/gstnettimeprovider.c \
	libs/gsttestclock.c libs/libsabi.c libs/queuearray.c \
	libs/transform1.c libs/typefindhelper.c pipelines/cleanup.c \
	pipelines/parse-disabled.c pipelines/parse-launch.c \
	pipelines/queue-error.c pipelines/seek.c \
	pipelines/simple-launch-lines.c pipelines/stress.c \
	tools/gstinspect.c
DIST_SOURCES = elements/capsfilter.c elements/fakesink.c \
	elements/fakesrc.c elements/fdsrc.c elements/filesink.c \
	elements/filesrc.c elements/funnel.c elements/identity.c \
	elements/multiqueue.c elements/queue.c elements/queue2.c \
	elements/selector.c elements/tee.c elements/valve.c \
	generic/sinks.c generic/states.c gst/gst.c gst/gstabi.c \
	gst/gstatomicqueue.c gst/gstbin.c gst/gstbuffer.c \
	gst/gstbufferlist.c gst/gstbus.c gst/gstcaps.c \
	gst/gstcapsfeatures.c gst/gstchildproxy.c gst/gstclock.c \
	gst/gstcontext.c gst/gstcontroller.c $(gst_gstcpp_SOURCES) \
	gst/gstdatetime.c gst/gstelement.c gst/gstelementfactory.c \
	gst/gstevent.c gst/gstghostpad.c gst/gstinfo.c \
	gst/gstiterator.c gst/gstmemory.c gst/gstmessage.c \
	gst/gstmeta.c gst/gstminiobject.c gst/gstobject.c gst/gstpad.c \
	gst/gstparamspecs.c gst/gstpipeline.c gst/gstplugin.c \
	gst/gstpoll.c gst/gstpreset.c gst/gstquery.c gst/gstregistry.c \
	gst/gstsegment.c gst/gststructure.c gst/gstsystemclock.c \
	gst/gsttag.c gst/gsttagsetter.c gst/gsttask.c gst/gsttoc.c \
	gst/gsttocsetter.c gst/gsturi.c gst/gstutils.c gst/gstvalue.c \
	libs/adapter.c libs/basesink.c libs/basesrc.c libs/bitreader.c \
	libs/bytereader.c libs/bytewriter.c libs/collectpads.c \
	libs/controller.c $(libs_gstlibscpp_SOURCES) \
	libs/gstnetclientclock.c libs/gstnettimeprovider.c \
	libs/gsttestclock.c libs/libsabi.c libs/queuearray.c \
	libs/transform1.c libs/typefindhelper.c pipelines/cleanup.c \
	pipelines/parse-disabled.c pipelines/parse-launch.c \
	pipelines/queue-error.c pipelines/seek.c \
	pipelines/simple-launch-lines.c pipelines/stress.c \
	tools/gstinspect.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/sergio/Desktop/gstreamer-java-2/gstreamer/missing aclocal-1.14
ACLOCAL_AMFLAGS = -I m4 -I common/m4
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/sergio/Desktop/gstreamer-java-2/gstreamer/missing autoconf
AUTOHEADER = ${SHELL} /home/sergio/Desktop/gstreamer-java-2/gstreamer/missing autoheader
AUTOMAKE = ${SHELL} /home/sergio/Desktop/gstreamer-java-2/gstreamer/missing automake-1.14
AWK = mawk
BISON_PATH = /usr/bin/bison
CAT_ENTRY_END = 
CAT_ENTRY_START = 
CC = gcc -std=gnu99
CCAS = gcc -std=gnu99
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CHECK_MAJOR_VERSION = 0
CHECK_MICRO_VERSION = 8
CHECK_MINOR_VERSION = 9
CHECK_VERSION = 0.9.8
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIR = /usr/local/share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEPRECATED_CFLAGS = 
DLLTOOL = false
DOCBOOK_ROOT = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_SUBUNIT = 0
ERROR_CFLAGS = 
EXEEXT = 
FFLAGS = 
FGREP = /bin/grep -F
FLEX_PATH = /usr/bin/flex
GCOV = 
GCOV_CFLAGS = 
GCOV_LIBS = 
GETTEXT_MACRO_VERSION = 0.17
GETTEXT_PACKAGE = gstreamer-1.0
GIO_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include  
GIO_LDFLAGS = 
GIO_LIBS = -lgio-2.0 -lgobject-2.0 -lglib-2.0  
GLIB_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GLIB_EXTRA_CFLAGS =  -DG_THREADS_MANDATORY -DG_DISABLE_CAST_CHECKS -DG_DISABLE_ASSERT
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -pthread -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
GLIB_MKENUMS = glib-mkenums
GLIB_PREFIX = /usr
GLIB_REQ = 2.32.0
GMP_LIBS = 
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GREP = /bin/grep
GSL_LIBS = 
GST_AGE = 202
GST_ALL_CFLAGS = -I$(top_srcdir)/libs -I$(top_srcdir) -I$(top_builddir)/libs -I$(top_builddir) -pthread -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include $(GLIB_EXTRA_CFLAGS)  $(GST_OPTION_CFLAGS) $(ERROR_CFLAGS)
GST_ALL_CXXFLAGS = -I$(top_srcdir)/libs -I$(top_srcdir) -I$(top_builddir)/libs -I$(top_builddir) -pthread -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include $(GLIB_EXTRA_CFLAGS)  $(GST_OPTION_CXXFLAGS) $(ERROR_CXXFLAGS)
GST_ALL_LDFLAGS = -no-undefined -Wl,-Bsymbolic-functions
GST_ALL_LIBS = -pthread -lgobject-2.0 -lgmodule-2.0 -lglib-2.0    $(GCOV_LIBS)
GST_API_VERSION = 1.0
GST_CURRENT = 202
GST_DISABLE_ALLOC_TRACE_DEFINE = /* #undef GST_DISABLE_ALLOC_TRACE */
GST_DISABLE_GST_DEBUG_DEFINE = /* #undef GST_DISABLE_GST_DEBUG */
GST_DISABLE_OPTION_PARSING_DEFINE = /* #undef GST_DISABLE_OPTION_PARSING */
GST_DISABLE_PARSE_DEFINE = /* #undef GST_DISABLE_PARSE */
GST_DISABLE_PLUGIN_DEFINE = /* #undef GST_DISABLE_PLUGIN */
GST_DISABLE_REGISTRY_DEFINE = /* #undef GST_DISABLE_REGISTRY */
GST_DISABLE_TRACE_DEFINE = /* #undef GST_DISABLE_TRACE */
GST_HAVE_MONOTONIC_CLOCK_DEFINE = #define GST_HAVE_MONOTONIC_CLOCK 1
GST_HAVE_POSIX_TIMERS_DEFINE = #define GST_HAVE_POSIX_TIMERS 1
GST_HAVE_UNALIGNED_ACCESS_DEFINE = #define GST_HAVE_UNALIGNED_ACCESS 1
GST_LEVEL_DEFAULT = GST_LEVEL_NONE
GST_LIBVERSION = 202:0:202
GST_LIB_LDFLAGS = -export-symbols-regex \^_?\(gst_\|Gst\|GST_\).*
GST_LICENSE = LGPL
GST_LT_LDFLAGS =  -version-info 202:0:202
GST_OBJ_CFLAGS = $(GST_ALL_CFLAGS)
GST_OBJ_CXXFLAGS = $(GST_ALL_CXXFLAGS)
GST_OBJ_LIBS = $(top_builddir)/gst/libgstreamer-1.0.la $(GST_ALL_LIBS)
GST_OPTION_CFLAGS = $(WARNING_CFLAGS) $(DEBUG_CFLAGS) $(PROFILE_CFLAGS) $(GCOV_CFLAGS) $(OPT_CFLAGS) $(DEPRECATED_CFLAGS)
GST_OPTION_CXXFLAGS = $(WARNING_CXXFLAGS) $(ERROR_CXXFLAGS) $(DEBUG_CFLAGS) $(PROFILE_CFLAGS) $(GCOV_CFLAGS) $(OPT_CFLAGS) $(DEPRECATED_CFLAGS)
GST_PACKAGE_NAME = GStreamer source release
GST_PACKAGE_ORIGIN = Unknown package origin
GST_PKG_CONFIG_PATH = $(top_builddir)/pkgconfig
GST_PLUGIN_LDFLAGS = -module -avoid-version -export-symbols-regex '^_*gst_plugin_.*' -no-undefined -Wl,-Bsymbolic-functions
GST_PLUGIN_LIBTOOLFLAGS = --tag=disable-static
GST_PLUGIN_SCANNER_INSTALLED = /usr/local/libexec/gstreamer-1.0/gst-plugin-scanner
GST_REGISTRY_DOC_TYPES = 
GST_REVISION = 0
GST_VERSION_MAJOR = 1
GST_VERSION_MICRO = 2
GST_VERSION_MINOR = 2
GST_VERSION_NANO = 0
GTKDOC_CHECK = 
GTKDOC_DEPS_CFLAGS = 
GTKDOC_DEPS_LIBS = 
GTKDOC_MKPDF = 
GTKDOC_REBASE = true
HAVE_DOCBOOK2PS = 
HAVE_DVIPS = 
HAVE_EPSTOPDF = 
HAVE_GMP = no
HAVE_GSL = no
HAVE_JADETEX = 
HAVE_PNGTOPNM = 
HAVE_PNMTOPS = 
HAVE_PS2PDF = 
HAVE_XMLLINT = 
HAVE_XSLTPROC = 
HOST_CPU = x86_64
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
INTROSPECTION_CFLAGS = 
INTROSPECTION_COMPILER = 
INTROSPECTION_GENERATE = 
INTROSPECTION_GIRDIR = 
INTROSPECTION_LIBS = 
INTROSPECTION_MAKEFILE = 
INTROSPECTION_SCANNER = 
INTROSPECTION_TYPELIBDIR = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBDIR = /usr/local/lib
LIBICONV = -liconv
LIBINTL = 
LIBM = -lm
LIBOBJS = 
LIBS =  -ldl
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LOCALEDIR = /usr/local/share/locale
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} /home/sergio/Desktop/gstreamer-java-2/gstreamer/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = gstreamer
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=GStreamer
PACKAGE_NAME = GStreamer
PACKAGE_STRING = GStreamer 1.2.2
PACKAGE_TARNAME = gstreamer
PACKAGE_URL = 
PACKAGE_VERSION = 1.2.2
PACKAGE_VERSION_MAJOR = 1
PACKAGE_VERSION_MICRO = 2
PACKAGE_VERSION_MINOR = 2
PACKAGE_VERSION_NANO = 0
PACKAGE_VERSION_RELEASE = 1
PATH_SEPARATOR = :
PERL_PATH = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PLUGINDIR = /usr/local/lib/gstreamer-1.0
POSUB = po
PRINTF_CFLAGS = -Wno-format-nonliteral
PROFILE_CFLAGS = -g
PTHREAD_CC = gcc -std=gnu99
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
USE_NLS = yes
VALGRIND_CFLAGS = 
VALGRIND_LIBS = 
VALGRIND_PATH = no
VERSION = 1.2.2
WARNING_CFLAGS =  -Wall -Wdeclaration-after-statement -Wvla -Wpointer-arith -Wmissing-declarations -Wmissing-prototypes -Wredundant-decls -Wundef -Wwrite-strings -Wformat-nonliteral -Wformat-security -Wold-style-definition -Winit-self -Wmissing-include-dirs -Waddress -Waggregate-return -Wno-multichar -Wnested-externs
WIN32_LIBS = 
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
XML_CATALOG = 
XSLTPROC = 
XSLTPROC_FLAGS = 
abs_builddir = /home/sergio/Desktop/gstreamer-java-2/gstreamer/tests/check
abs_srcdir = /home/sergio/Desktop/gstreamer-java-2/gstreamer/tests/check
abs_top_builddir = /home/sergio/Desktop/gstreamer-java-2/gstreamer
abs_top_srcdir = /home/sergio/Desktop/gstreamer-java-2/gstreamer
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = $(datadir)/doc/gstreamer-1.0
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/sergio/Desktop/gstreamer-java-2/gstreamer/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/gstreamer
pkgpythondir = ${pythondir}/gstreamer
plugindir = $(libdir)/gstreamer-1.0
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/dist-packages
pythondir = ${prefix}/lib/python2.7/dist-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..

# inspect every plugin feature
GST_INSPECT = $(GST_TOOLS_DIR)/gst-inspect-$(GST_API_VERSION)
CHECK_REGISTRY = $(top_builddir)/tests/check/test-registry.reg
GST_TOOLS_DIR = $(top_builddir)/tools
REGISTRY_ENVIRONMENT = \
	GST_REGISTRY=$(CHECK_REGISTRY)

TESTS_ENVIRONMENT = \
        GST_STATE_IGNORE_ELEMENTS="$(STATE_IGNORE_ELEMENTS)"	\
        $(REGISTRY_ENVIRONMENT)					\
        GST_PLUGIN_SCANNER_1_0=$(top_builddir)/libs/gst/helpers/gst-plugin-scanner \
        GST_PLUGIN_SYSTEM_PATH_1_0=					\
        GST_PLUGIN_PATH_1_0=$(top_builddir)/plugins


# the core dumps of some machines have PIDs appended, test registry and
# profiling data
CLEANFILES = core core.* test-registry.* *.gcno *.gcda
SUPPRESSIONS = $(top_srcdir)/common/gst.supp
PARSE_CHECKS = pipelines/simple-launch-lines pipelines/cleanup pipelines/parse-launch

# These tests don't even build any longer:
#   gst/gstindex.c
#PARSE_CHECKS = pipelines/parse-disabled

# Do not run the abi test in case any option which causes the API to change has
# been used
ABI_CHECKS = gst/gstabi
LIBSABI_CHECKS = libs/libsabi
#CXX_CHECKS = 
CXX_CHECKS = gst/gstcpp libs/gstlibscpp
REGISTRY_CHECKS = \
	gst/gst					\
	gst/gstbin				\
	gst/gstchildproxy			\
	gst/gstcontext				\
	gst/gstcontroller			\
	gst/gstelement				\
	gst/gstelementfactory			\
	gst/gstevent				\
	gst/gstghostpad				\
	gst/gstplugin				\
	gst/gstpreset				\
	gst/gstquery				\
	gst/gstregistry				\
	gst/gsturi  				\
	gst/gstutils				\
	generic/sinks				\
	elements/capsfilter			\
	elements/fakesink			\
	elements/fakesrc			\
	elements/fdsrc			  	\
	elements/filesink			\
	elements/filesrc			\
	elements/funnel				\
	elements/identity			\
	elements/multiqueue			\
	elements/selector			\
	elements/tee			  	\
	elements/queue                          \
	elements/queue2                         \
	elements/valve                          \
	libs/basesrc				\
	libs/basesink				\
	libs/controller				\
	libs/queuearray				\
	libs/typefindhelper			\
	pipelines/seek				\
	pipelines/stress			\
	pipelines/queue-error


# if it's calling gst_element_factory_make(), it will probably not work without
# a registry
#REGISTRY_CHECKS = 

# elements to ignore for the state tests
# STATE_IGNORE_ELEMENTS =
TESTS = $(check_PROGRAMS)
noinst_HEADERS = \
	gst/capslist.h \
	gst/struct_arm.h \
	gst/struct_i386.h \
	gst/struct_hppa.h \
	gst/struct_ppc32.h \
	gst/struct_ppc64.h \
	gst/struct_sparc.h \
	gst/struct_x86_64.h \
	libs/struct_arm.h \
	libs/struct_i386.h \
	libs/struct_hppa.h \
	libs/struct_ppc32.h \
	libs/struct_ppc64.h \
	libs/struct_sparc.h \
	libs/struct_x86_64.h

EXTRA_DIST = \
	libs/test_transform.c

AM_CFLAGS = $(GST_OBJ_CFLAGS) -UG_DISABLE_ASSERT -UG_DISABLE_CAST_CHECKS
AM_CXXFLAGS = $(GST_OBJ_CXXFLAGS) -UG_DISABLE_ASSERT -UG_DISABLE_CAST_CHECKS
LDADD = $(top_builddir)/libs/gst/check/libgstcheck-1.0.la \
	$(top_builddir)/libs/gst/base/libgstbase-1.0.la \
	$(GST_OBJ_LIBS)

gst_gstcpp_SOURCES = gst/gstcpp.cc
libs_gstlibscpp_SOURCES = libs/gstlibscpp.cc
gst_gstutils_LDADD = $(LDADD) $(GSL_LIBS) $(GMP_LIBS)
elements_fdsrc_CFLAGS = $(GST_OBJ_CFLAGS) $(AM_CFLAGS) \
	-DTESTFILE=\"$(top_srcdir)/configure.ac\"

elements_filesrc_CFLAGS = $(GST_OBJ_CFLAGS) $(AM_CFLAGS) \
	-DTESTFILE=\"$(top_srcdir)/configure.ac\"

libs_controller_LDADD = \
	$(top_builddir)/libs/gst/controller/libgstcontroller-1.0.la \
	$(LDADD)

libs_gstnetclientclock_LDADD = \
	$(top_builddir)/libs/gst/net/libgstnet-1.0.la \
	$(LDADD)

libs_gstnettimeprovider_LDADD = \
	$(top_builddir)/libs/gst/net/libgstnet-1.0.la \
	$(GIO_LIBS) $(LDADD)


# valgrind testing
# these just need valgrind fixing, period
VALGRIND_TO_FIX = \
	gst/gstinfo \
	pipelines/parse-launch \
	tools/gstinspect

VALGRIND_IGNORE = \
	pipelines/stress


# these need fixing because the threads cause segfaults under valgrind
TESTS_THREADED = \
	gst/gstminiobject 			\
	gst/gstobject

VALGRIND_TESTS_DISABLE = \
	$(TESTS_THREADED)					\
	$(VALGRIND_IGNORE)					\
	$(VALGRIND_TO_FIX)


# indexers does not get tested yet
COVERAGE_DIRS = \
	gst \
	libs/gst/base \
	libs/gst/controller \
	libs/gst/check \
	libs/gst/net \
	plugins/elements

COVERAGE_FILES = $(foreach dir,$(COVERAGE_DIRS),$(wildcard $(top_builddir)/$(dir)/*.gcov))
COVERAGE_FILES_REL = $(subst $(top_builddir)/,,$(COVERAGE_FILES))
COVERAGE_OUT_FILES = $(foreach dir,$(COVERAGE_DIRS),$(wildcard $(top_builddir)/$(dir)/*.gcov.out))
COVERAGE_OUT_FILES_REL = $(subst $(top_builddir)/,,$(COVERAGE_OUT_FILES))
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/common/check.mak $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/check/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/check/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/common/check.mak:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
elements/$(am__dirstamp):
	@$(MKDIR_P) elements
	@: > elements/$(am__dirstamp)
elements/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) elements/$(DEPDIR)
	@: > elements/$(DEPDIR)/$(am__dirstamp)
elements/capsfilter.$(OBJEXT): elements/$(am__dirstamp) \
	elements/$(DEPDIR)/$(am__dirstamp)

elements/capsfilter$(EXEEXT): $(elements_capsfilter_OBJECTS) $(elements_capsfilter_DEPENDENCIES) $(EXTRA_elements_capsfilter_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/capsfilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elements_capsfilter_OBJECTS) $(elements_capsfilter_LDADD) $(LIBS)
elements/fakesink.$(OBJEXT): elements/$(am__dirstamp) \
	elements/$(DEPDIR)/$(am__dirstamp)

elements/fakesink$(EXEEXT): $(elements_fakesink_OBJECTS) $(elements_fakesink_DEPENDENCIES) $(EXTRA_elements_fakesink_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/fakesink$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elements_fakesink_OBJECTS) $(elements_fakesink_LDADD) $(LIBS)
elements/fakesrc.$(OBJEXT): elements/$(am__dirstamp) \
	elements/$(DEPDIR)/$(am__dirstamp)

elements/fakesrc$(EXEEXT): $(elements_fakesrc_OBJECTS) $(elements_fakesrc_DEPENDENCIES) $(EXTRA_elements_fakesrc_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/fakesrc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elements_fakesrc_OBJECTS) $(elements_fakesrc_LDADD) $(LIBS)
elements/elements_fdsrc-fdsrc.$(OBJEXT): elements/$(am__dirstamp) \
	elements/$(DEPDIR)/$(am__dirstamp)

elements/fdsrc$(EXEEXT): $(elements_fdsrc_OBJECTS) $(elements_fdsrc_DEPENDENCIES) $(EXTRA_elements_fdsrc_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/fdsrc$(EXEEXT)
	$(AM_V_CCLD)$(elements_fdsrc_LINK) $(elements_fdsrc_OBJECTS) $(elements_fdsrc_LDADD) $(LIBS)
elements/filesink.$(OBJEXT): elements/$(am__dirstamp) \
	elements/$(DEPDIR)/$(am__dirstamp)

elements/filesink$(EXEEXT): $(elements_filesink_OBJECTS) $(elements_filesink_DEPENDENCIES) $(EXTRA_elements_filesink_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/filesink$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elements_filesink_OBJECTS) $(elements_filesink_LDADD) $(LIBS)
elements/elements_filesrc-filesrc.$(OBJEXT): elements/$(am__dirstamp) \
	elements/$(DEPDIR)/$(am__dirstamp)

elements/filesrc$(EXEEXT): $(elements_filesrc_OBJECTS) $(elements_filesrc_DEPENDENCIES) $(EXTRA_elements_filesrc_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/filesrc$(EXEEXT)
	$(AM_V_CCLD)$(elements_filesrc_LINK) $(elements_filesrc_OBJECTS) $(elements_filesrc_LDADD) $(LIBS)
elements/funnel.$(OBJEXT): elements/$(am__dirstamp) \
	elements/$(DEPDIR)/$(am__dirstamp)

elements/funnel$(EXEEXT): $(elements_funnel_OBJECTS) $(elements_funnel_DEPENDENCIES) $(EXTRA_elements_funnel_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/funnel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elements_funnel_OBJECTS) $(elements_funnel_LDADD) $(LIBS)
elements/identity.$(OBJEXT): elements/$(am__dirstamp) \
	elements/$(DEPDIR)/$(am__dirstamp)

elements/identity$(EXEEXT): $(elements_identity_OBJECTS) $(elements_identity_DEPENDENCIES) $(EXTRA_elements_identity_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/identity$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elements_identity_OBJECTS) $(elements_identity_LDADD) $(LIBS)
elements/multiqueue.$(OBJEXT): elements/$(am__dirstamp) \
	elements/$(DEPDIR)/$(am__dirstamp)

elements/multiqueue$(EXEEXT): $(elements_multiqueue_OBJECTS) $(elements_multiqueue_DEPENDENCIES) $(EXTRA_elements_multiqueue_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/multiqueue$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elements_multiqueue_OBJECTS) $(elements_multiqueue_LDADD) $(LIBS)
elements/queue.$(OBJEXT): elements/$(am__dirstamp) \
	elements/$(DEPDIR)/$(am__dirstamp)

elements/queue$(EXEEXT): $(elements_queue_OBJECTS) $(elements_queue_DEPENDENCIES) $(EXTRA_elements_queue_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/queue$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elements_queue_OBJECTS) $(elements_queue_LDADD) $(LIBS)
elements/queue2.$(OBJEXT): elements/$(am__dirstamp) \
	elements/$(DEPDIR)/$(am__dirstamp)

elements/queue2$(EXEEXT): $(elements_queue2_OBJECTS) $(elements_queue2_DEPENDENCIES) $(EXTRA_elements_queue2_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/queue2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elements_queue2_OBJECTS) $(elements_queue2_LDADD) $(LIBS)
elements/selector.$(OBJEXT): elements/$(am__dirstamp) \
	elements/$(DEPDIR)/$(am__dirstamp)

elements/selector$(EXEEXT): $(elements_selector_OBJECTS) $(elements_selector_DEPENDENCIES) $(EXTRA_elements_selector_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/selector$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elements_selector_OBJECTS) $(elements_selector_LDADD) $(LIBS)
elements/tee.$(OBJEXT): elements/$(am__dirstamp) \
	elements/$(DEPDIR)/$(am__dirstamp)

elements/tee$(EXEEXT): $(elements_tee_OBJECTS) $(elements_tee_DEPENDENCIES) $(EXTRA_elements_tee_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/tee$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elements_tee_OBJECTS) $(elements_tee_LDADD) $(LIBS)
elements/valve.$(OBJEXT): elements/$(am__dirstamp) \
	elements/$(DEPDIR)/$(am__dirstamp)

elements/valve$(EXEEXT): $(elements_valve_OBJECTS) $(elements_valve_DEPENDENCIES) $(EXTRA_elements_valve_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/valve$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elements_valve_OBJECTS) $(elements_valve_LDADD) $(LIBS)
generic/$(am__dirstamp):
	@$(MKDIR_P) generic
	@: > generic/$(am__dirstamp)
generic/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) generic/$(DEPDIR)
	@: > generic/$(DEPDIR)/$(am__dirstamp)
generic/sinks.$(OBJEXT): generic/$(am__dirstamp) \
	generic/$(DEPDIR)/$(am__dirstamp)

generic/sinks$(EXEEXT): $(generic_sinks_OBJECTS) $(generic_sinks_DEPENDENCIES) $(EXTRA_generic_sinks_DEPENDENCIES) generic/$(am__dirstamp)
	@rm -f generic/sinks$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(generic_sinks_OBJECTS) $(generic_sinks_LDADD) $(LIBS)
generic/states.$(OBJEXT): generic/$(am__dirstamp) \
	generic/$(DEPDIR)/$(am__dirstamp)

generic/states$(EXEEXT): $(generic_states_OBJECTS) $(generic_states_DEPENDENCIES) $(EXTRA_generic_states_DEPENDENCIES) generic/$(am__dirstamp)
	@rm -f generic/states$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(generic_states_OBJECTS) $(generic_states_LDADD) $(LIBS)
gst/$(am__dirstamp):
	@$(MKDIR_P) gst
	@: > gst/$(am__dirstamp)
gst/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gst/$(DEPDIR)
	@: > gst/$(DEPDIR)/$(am__dirstamp)
gst/gst.$(OBJEXT): gst/$(am__dirstamp) gst/$(DEPDIR)/$(am__dirstamp)

gst/gst$(EXEEXT): $(gst_gst_OBJECTS) $(gst_gst_DEPENDENCIES) $(EXTRA_gst_gst_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gst$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gst_OBJECTS) $(gst_gst_LDADD) $(LIBS)
gst/gstabi.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstabi$(EXEEXT): $(gst_gstabi_OBJECTS) $(gst_gstabi_DEPENDENCIES) $(EXTRA_gst_gstabi_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstabi$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstabi_OBJECTS) $(gst_gstabi_LDADD) $(LIBS)
gst/gstatomicqueue.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstatomicqueue$(EXEEXT): $(gst_gstatomicqueue_OBJECTS) $(gst_gstatomicqueue_DEPENDENCIES) $(EXTRA_gst_gstatomicqueue_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstatomicqueue$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstatomicqueue_OBJECTS) $(gst_gstatomicqueue_LDADD) $(LIBS)
gst/gstbin.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstbin$(EXEEXT): $(gst_gstbin_OBJECTS) $(gst_gstbin_DEPENDENCIES) $(EXTRA_gst_gstbin_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstbin$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstbin_OBJECTS) $(gst_gstbin_LDADD) $(LIBS)
gst/gstbuffer.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstbuffer$(EXEEXT): $(gst_gstbuffer_OBJECTS) $(gst_gstbuffer_DEPENDENCIES) $(EXTRA_gst_gstbuffer_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstbuffer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstbuffer_OBJECTS) $(gst_gstbuffer_LDADD) $(LIBS)
gst/gstbufferlist.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstbufferlist$(EXEEXT): $(gst_gstbufferlist_OBJECTS) $(gst_gstbufferlist_DEPENDENCIES) $(EXTRA_gst_gstbufferlist_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstbufferlist$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstbufferlist_OBJECTS) $(gst_gstbufferlist_LDADD) $(LIBS)
gst/gstbus.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstbus$(EXEEXT): $(gst_gstbus_OBJECTS) $(gst_gstbus_DEPENDENCIES) $(EXTRA_gst_gstbus_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstbus$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstbus_OBJECTS) $(gst_gstbus_LDADD) $(LIBS)
gst/gstcaps.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstcaps$(EXEEXT): $(gst_gstcaps_OBJECTS) $(gst_gstcaps_DEPENDENCIES) $(EXTRA_gst_gstcaps_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstcaps$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstcaps_OBJECTS) $(gst_gstcaps_LDADD) $(LIBS)
gst/gstcapsfeatures.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstcapsfeatures$(EXEEXT): $(gst_gstcapsfeatures_OBJECTS) $(gst_gstcapsfeatures_DEPENDENCIES) $(EXTRA_gst_gstcapsfeatures_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstcapsfeatures$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstcapsfeatures_OBJECTS) $(gst_gstcapsfeatures_LDADD) $(LIBS)
gst/gstchildproxy.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstchildproxy$(EXEEXT): $(gst_gstchildproxy_OBJECTS) $(gst_gstchildproxy_DEPENDENCIES) $(EXTRA_gst_gstchildproxy_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstchildproxy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstchildproxy_OBJECTS) $(gst_gstchildproxy_LDADD) $(LIBS)
gst/gstclock.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstclock$(EXEEXT): $(gst_gstclock_OBJECTS) $(gst_gstclock_DEPENDENCIES) $(EXTRA_gst_gstclock_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstclock$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstclock_OBJECTS) $(gst_gstclock_LDADD) $(LIBS)
gst/gstcontext.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstcontext$(EXEEXT): $(gst_gstcontext_OBJECTS) $(gst_gstcontext_DEPENDENCIES) $(EXTRA_gst_gstcontext_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstcontext$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstcontext_OBJECTS) $(gst_gstcontext_LDADD) $(LIBS)
gst/gstcontroller.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstcontroller$(EXEEXT): $(gst_gstcontroller_OBJECTS) $(gst_gstcontroller_DEPENDENCIES) $(EXTRA_gst_gstcontroller_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstcontroller$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstcontroller_OBJECTS) $(gst_gstcontroller_LDADD) $(LIBS)
gst/gstcpp.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstcpp$(EXEEXT): $(gst_gstcpp_OBJECTS) $(gst_gstcpp_DEPENDENCIES) $(EXTRA_gst_gstcpp_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstcpp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(gst_gstcpp_OBJECTS) $(gst_gstcpp_LDADD) $(LIBS)
gst/gstdatetime.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstdatetime$(EXEEXT): $(gst_gstdatetime_OBJECTS) $(gst_gstdatetime_DEPENDENCIES) $(EXTRA_gst_gstdatetime_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstdatetime$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstdatetime_OBJECTS) $(gst_gstdatetime_LDADD) $(LIBS)
gst/gstelement.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstelement$(EXEEXT): $(gst_gstelement_OBJECTS) $(gst_gstelement_DEPENDENCIES) $(EXTRA_gst_gstelement_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstelement$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstelement_OBJECTS) $(gst_gstelement_LDADD) $(LIBS)
gst/gstelementfactory.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstelementfactory$(EXEEXT): $(gst_gstelementfactory_OBJECTS) $(gst_gstelementfactory_DEPENDENCIES) $(EXTRA_gst_gstelementfactory_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstelementfactory$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstelementfactory_OBJECTS) $(gst_gstelementfactory_LDADD) $(LIBS)
gst/gstevent.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstevent$(EXEEXT): $(gst_gstevent_OBJECTS) $(gst_gstevent_DEPENDENCIES) $(EXTRA_gst_gstevent_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstevent$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstevent_OBJECTS) $(gst_gstevent_LDADD) $(LIBS)
gst/gstghostpad.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstghostpad$(EXEEXT): $(gst_gstghostpad_OBJECTS) $(gst_gstghostpad_DEPENDENCIES) $(EXTRA_gst_gstghostpad_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstghostpad$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstghostpad_OBJECTS) $(gst_gstghostpad_LDADD) $(LIBS)
gst/gstinfo.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstinfo$(EXEEXT): $(gst_gstinfo_OBJECTS) $(gst_gstinfo_DEPENDENCIES) $(EXTRA_gst_gstinfo_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstinfo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstinfo_OBJECTS) $(gst_gstinfo_LDADD) $(LIBS)
gst/gstiterator.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstiterator$(EXEEXT): $(gst_gstiterator_OBJECTS) $(gst_gstiterator_DEPENDENCIES) $(EXTRA_gst_gstiterator_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstiterator$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstiterator_OBJECTS) $(gst_gstiterator_LDADD) $(LIBS)
gst/gstmemory.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstmemory$(EXEEXT): $(gst_gstmemory_OBJECTS) $(gst_gstmemory_DEPENDENCIES) $(EXTRA_gst_gstmemory_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstmemory$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstmemory_OBJECTS) $(gst_gstmemory_LDADD) $(LIBS)
gst/gstmessage.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstmessage$(EXEEXT): $(gst_gstmessage_OBJECTS) $(gst_gstmessage_DEPENDENCIES) $(EXTRA_gst_gstmessage_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstmessage$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstmessage_OBJECTS) $(gst_gstmessage_LDADD) $(LIBS)
gst/gstmeta.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstmeta$(EXEEXT): $(gst_gstmeta_OBJECTS) $(gst_gstmeta_DEPENDENCIES) $(EXTRA_gst_gstmeta_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstmeta$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstmeta_OBJECTS) $(gst_gstmeta_LDADD) $(LIBS)
gst/gstminiobject.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstminiobject$(EXEEXT): $(gst_gstminiobject_OBJECTS) $(gst_gstminiobject_DEPENDENCIES) $(EXTRA_gst_gstminiobject_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstminiobject$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstminiobject_OBJECTS) $(gst_gstminiobject_LDADD) $(LIBS)
gst/gstobject.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstobject$(EXEEXT): $(gst_gstobject_OBJECTS) $(gst_gstobject_DEPENDENCIES) $(EXTRA_gst_gstobject_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstobject$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstobject_OBJECTS) $(gst_gstobject_LDADD) $(LIBS)
gst/gstpad.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstpad$(EXEEXT): $(gst_gstpad_OBJECTS) $(gst_gstpad_DEPENDENCIES) $(EXTRA_gst_gstpad_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstpad$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstpad_OBJECTS) $(gst_gstpad_LDADD) $(LIBS)
gst/gstparamspecs.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstparamspecs$(EXEEXT): $(gst_gstparamspecs_OBJECTS) $(gst_gstparamspecs_DEPENDENCIES) $(EXTRA_gst_gstparamspecs_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstparamspecs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstparamspecs_OBJECTS) $(gst_gstparamspecs_LDADD) $(LIBS)
gst/gstpipeline.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstpipeline$(EXEEXT): $(gst_gstpipeline_OBJECTS) $(gst_gstpipeline_DEPENDENCIES) $(EXTRA_gst_gstpipeline_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstpipeline$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstpipeline_OBJECTS) $(gst_gstpipeline_LDADD) $(LIBS)
gst/gstplugin.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstplugin$(EXEEXT): $(gst_gstplugin_OBJECTS) $(gst_gstplugin_DEPENDENCIES) $(EXTRA_gst_gstplugin_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstplugin$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstplugin_OBJECTS) $(gst_gstplugin_LDADD) $(LIBS)
gst/gstpoll.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstpoll$(EXEEXT): $(gst_gstpoll_OBJECTS) $(gst_gstpoll_DEPENDENCIES) $(EXTRA_gst_gstpoll_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstpoll$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstpoll_OBJECTS) $(gst_gstpoll_LDADD) $(LIBS)
gst/gstpreset.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstpreset$(EXEEXT): $(gst_gstpreset_OBJECTS) $(gst_gstpreset_DEPENDENCIES) $(EXTRA_gst_gstpreset_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstpreset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstpreset_OBJECTS) $(gst_gstpreset_LDADD) $(LIBS)
gst/gstquery.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstquery$(EXEEXT): $(gst_gstquery_OBJECTS) $(gst_gstquery_DEPENDENCIES) $(EXTRA_gst_gstquery_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstquery$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstquery_OBJECTS) $(gst_gstquery_LDADD) $(LIBS)
gst/gstregistry.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstregistry$(EXEEXT): $(gst_gstregistry_OBJECTS) $(gst_gstregistry_DEPENDENCIES) $(EXTRA_gst_gstregistry_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstregistry$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstregistry_OBJECTS) $(gst_gstregistry_LDADD) $(LIBS)
gst/gstsegment.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstsegment$(EXEEXT): $(gst_gstsegment_OBJECTS) $(gst_gstsegment_DEPENDENCIES) $(EXTRA_gst_gstsegment_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstsegment$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstsegment_OBJECTS) $(gst_gstsegment_LDADD) $(LIBS)
gst/gststructure.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gststructure$(EXEEXT): $(gst_gststructure_OBJECTS) $(gst_gststructure_DEPENDENCIES) $(EXTRA_gst_gststructure_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gststructure$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gststructure_OBJECTS) $(gst_gststructure_LDADD) $(LIBS)
gst/gstsystemclock.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstsystemclock$(EXEEXT): $(gst_gstsystemclock_OBJECTS) $(gst_gstsystemclock_DEPENDENCIES) $(EXTRA_gst_gstsystemclock_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstsystemclock$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstsystemclock_OBJECTS) $(gst_gstsystemclock_LDADD) $(LIBS)
gst/gsttag.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gsttag$(EXEEXT): $(gst_gsttag_OBJECTS) $(gst_gsttag_DEPENDENCIES) $(EXTRA_gst_gsttag_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gsttag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gsttag_OBJECTS) $(gst_gsttag_LDADD) $(LIBS)
gst/gsttagsetter.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gsttagsetter$(EXEEXT): $(gst_gsttagsetter_OBJECTS) $(gst_gsttagsetter_DEPENDENCIES) $(EXTRA_gst_gsttagsetter_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gsttagsetter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gsttagsetter_OBJECTS) $(gst_gsttagsetter_LDADD) $(LIBS)
gst/gsttask.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gsttask$(EXEEXT): $(gst_gsttask_OBJECTS) $(gst_gsttask_DEPENDENCIES) $(EXTRA_gst_gsttask_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gsttask$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gsttask_OBJECTS) $(gst_gsttask_LDADD) $(LIBS)
gst/gsttoc.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gsttoc$(EXEEXT): $(gst_gsttoc_OBJECTS) $(gst_gsttoc_DEPENDENCIES) $(EXTRA_gst_gsttoc_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gsttoc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gsttoc_OBJECTS) $(gst_gsttoc_LDADD) $(LIBS)
gst/gsttocsetter.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gsttocsetter$(EXEEXT): $(gst_gsttocsetter_OBJECTS) $(gst_gsttocsetter_DEPENDENCIES) $(EXTRA_gst_gsttocsetter_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gsttocsetter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gsttocsetter_OBJECTS) $(gst_gsttocsetter_LDADD) $(LIBS)
gst/gsturi.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gsturi$(EXEEXT): $(gst_gsturi_OBJECTS) $(gst_gsturi_DEPENDENCIES) $(EXTRA_gst_gsturi_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gsturi$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gsturi_OBJECTS) $(gst_gsturi_LDADD) $(LIBS)
gst/gstutils.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstutils$(EXEEXT): $(gst_gstutils_OBJECTS) $(gst_gstutils_DEPENDENCIES) $(EXTRA_gst_gstutils_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstutils$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstutils_OBJECTS) $(gst_gstutils_LDADD) $(LIBS)
gst/gstvalue.$(OBJEXT): gst/$(am__dirstamp) \
	gst/$(DEPDIR)/$(am__dirstamp)

gst/gstvalue$(EXEEXT): $(gst_gstvalue_OBJECTS) $(gst_gstvalue_DEPENDENCIES) $(EXTRA_gst_gstvalue_DEPENDENCIES) gst/$(am__dirstamp)
	@rm -f gst/gstvalue$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gst_gstvalue_OBJECTS) $(gst_gstvalue_LDADD) $(LIBS)
libs/$(am__dirstamp):
	@$(MKDIR_P) libs
	@: > libs/$(am__dirstamp)
libs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libs/$(DEPDIR)
	@: > libs/$(DEPDIR)/$(am__dirstamp)
libs/adapter.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/adapter$(EXEEXT): $(libs_adapter_OBJECTS) $(libs_adapter_DEPENDENCIES) $(EXTRA_libs_adapter_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/adapter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libs_adapter_OBJECTS) $(libs_adapter_LDADD) $(LIBS)
libs/basesink.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/basesink$(EXEEXT): $(libs_basesink_OBJECTS) $(libs_basesink_DEPENDENCIES) $(EXTRA_libs_basesink_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/basesink$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libs_basesink_OBJECTS) $(libs_basesink_LDADD) $(LIBS)
libs/basesrc.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/basesrc$(EXEEXT): $(libs_basesrc_OBJECTS) $(libs_basesrc_DEPENDENCIES) $(EXTRA_libs_basesrc_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/basesrc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libs_basesrc_OBJECTS) $(libs_basesrc_LDADD) $(LIBS)
libs/bitreader.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/bitreader$(EXEEXT): $(libs_bitreader_OBJECTS) $(libs_bitreader_DEPENDENCIES) $(EXTRA_libs_bitreader_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/bitreader$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libs_bitreader_OBJECTS) $(libs_bitreader_LDADD) $(LIBS)
libs/bytereader.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/bytereader$(EXEEXT): $(libs_bytereader_OBJECTS) $(libs_bytereader_DEPENDENCIES) $(EXTRA_libs_bytereader_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/bytereader$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libs_bytereader_OBJECTS) $(libs_bytereader_LDADD) $(LIBS)
libs/bytewriter.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/bytewriter$(EXEEXT): $(libs_bytewriter_OBJECTS) $(libs_bytewriter_DEPENDENCIES) $(EXTRA_libs_bytewriter_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/bytewriter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libs_bytewriter_OBJECTS) $(libs_bytewriter_LDADD) $(LIBS)
libs/collectpads.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/collectpads$(EXEEXT): $(libs_collectpads_OBJECTS) $(libs_collectpads_DEPENDENCIES) $(EXTRA_libs_collectpads_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/collectpads$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libs_collectpads_OBJECTS) $(libs_collectpads_LDADD) $(LIBS)
libs/controller.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/controller$(EXEEXT): $(libs_controller_OBJECTS) $(libs_controller_DEPENDENCIES) $(EXTRA_libs_controller_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/controller$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libs_controller_OBJECTS) $(libs_controller_LDADD) $(LIBS)
libs/gstlibscpp.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/gstlibscpp$(EXEEXT): $(libs_gstlibscpp_OBJECTS) $(libs_gstlibscpp_DEPENDENCIES) $(EXTRA_libs_gstlibscpp_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/gstlibscpp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(libs_gstlibscpp_OBJECTS) $(libs_gstlibscpp_LDADD) $(LIBS)
libs/gstnetclientclock.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/gstnetclientclock$(EXEEXT): $(libs_gstnetclientclock_OBJECTS) $(libs_gstnetclientclock_DEPENDENCIES) $(EXTRA_libs_gstnetclientclock_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/gstnetclientclock$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libs_gstnetclientclock_OBJECTS) $(libs_gstnetclientclock_LDADD) $(LIBS)
libs/gstnettimeprovider.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/gstnettimeprovider$(EXEEXT): $(libs_gstnettimeprovider_OBJECTS) $(libs_gstnettimeprovider_DEPENDENCIES) $(EXTRA_libs_gstnettimeprovider_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/gstnettimeprovider$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libs_gstnettimeprovider_OBJECTS) $(libs_gstnettimeprovider_LDADD) $(LIBS)
libs/gsttestclock.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/gsttestclock$(EXEEXT): $(libs_gsttestclock_OBJECTS) $(libs_gsttestclock_DEPENDENCIES) $(EXTRA_libs_gsttestclock_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/gsttestclock$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libs_gsttestclock_OBJECTS) $(libs_gsttestclock_LDADD) $(LIBS)
libs/libsabi.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/libsabi$(EXEEXT): $(libs_libsabi_OBJECTS) $(libs_libsabi_DEPENDENCIES) $(EXTRA_libs_libsabi_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/libsabi$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libs_libsabi_OBJECTS) $(libs_libsabi_LDADD) $(LIBS)
libs/queuearray.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/queuearray$(EXEEXT): $(libs_queuearray_OBJECTS) $(libs_queuearray_DEPENDENCIES) $(EXTRA_libs_queuearray_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/queuearray$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libs_queuearray_OBJECTS) $(libs_queuearray_LDADD) $(LIBS)
libs/transform1.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/transform1$(EXEEXT): $(libs_transform1_OBJECTS) $(libs_transform1_DEPENDENCIES) $(EXTRA_libs_transform1_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/transform1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libs_transform1_OBJECTS) $(libs_transform1_LDADD) $(LIBS)
libs/typefindhelper.$(OBJEXT): libs/$(am__dirstamp) \
	libs/$(DEPDIR)/$(am__dirstamp)

libs/typefindhelper$(EXEEXT): $(libs_typefindhelper_OBJECTS) $(libs_typefindhelper_DEPENDENCIES) $(EXTRA_libs_typefindhelper_DEPENDENCIES) libs/$(am__dirstamp)
	@rm -f libs/typefindhelper$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libs_typefindhelper_OBJECTS) $(libs_typefindhelper_LDADD) $(LIBS)
pipelines/$(am__dirstamp):
	@$(MKDIR_P) pipelines
	@: > pipelines/$(am__dirstamp)
pipelines/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) pipelines/$(DEPDIR)
	@: > pipelines/$(DEPDIR)/$(am__dirstamp)
pipelines/cleanup.$(OBJEXT): pipelines/$(am__dirstamp) \
	pipelines/$(DEPDIR)/$(am__dirstamp)

pipelines/cleanup$(EXEEXT): $(pipelines_cleanup_OBJECTS) $(pipelines_cleanup_DEPENDENCIES) $(EXTRA_pipelines_cleanup_DEPENDENCIES) pipelines/$(am__dirstamp)
	@rm -f pipelines/cleanup$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pipelines_cleanup_OBJECTS) $(pipelines_cleanup_LDADD) $(LIBS)
pipelines/parse-disabled.$(OBJEXT): pipelines/$(am__dirstamp) \
	pipelines/$(DEPDIR)/$(am__dirstamp)

pipelines/parse-disabled$(EXEEXT): $(pipelines_parse_disabled_OBJECTS) $(pipelines_parse_disabled_DEPENDENCIES) $(EXTRA_pipelines_parse_disabled_DEPENDENCIES) pipelines/$(am__dirstamp)
	@rm -f pipelines/parse-disabled$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pipelines_parse_disabled_OBJECTS) $(pipelines_parse_disabled_LDADD) $(LIBS)
pipelines/parse-launch.$(OBJEXT): pipelines/$(am__dirstamp) \
	pipelines/$(DEPDIR)/$(am__dirstamp)

pipelines/parse-launch$(EXEEXT): $(pipelines_parse_launch_OBJECTS) $(pipelines_parse_launch_DEPENDENCIES) $(EXTRA_pipelines_parse_launch_DEPENDENCIES) pipelines/$(am__dirstamp)
	@rm -f pipelines/parse-launch$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pipelines_parse_launch_OBJECTS) $(pipelines_parse_launch_LDADD) $(LIBS)
pipelines/queue-error.$(OBJEXT): pipelines/$(am__dirstamp) \
	pipelines/$(DEPDIR)/$(am__dirstamp)

pipelines/queue-error$(EXEEXT): $(pipelines_queue_error_OBJECTS) $(pipelines_queue_error_DEPENDENCIES) $(EXTRA_pipelines_queue_error_DEPENDENCIES) pipelines/$(am__dirstamp)
	@rm -f pipelines/queue-error$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pipelines_queue_error_OBJECTS) $(pipelines_queue_error_LDADD) $(LIBS)
pipelines/seek.$(OBJEXT): pipelines/$(am__dirstamp) \
	pipelines/$(DEPDIR)/$(am__dirstamp)

pipelines/seek$(EXEEXT): $(pipelines_seek_OBJECTS) $(pipelines_seek_DEPENDENCIES) $(EXTRA_pipelines_seek_DEPENDENCIES) pipelines/$(am__dirstamp)
	@rm -f pipelines/seek$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pipelines_seek_OBJECTS) $(pipelines_seek_LDADD) $(LIBS)
pipelines/simple-launch-lines.$(OBJEXT): pipelines/$(am__dirstamp) \
	pipelines/$(DEPDIR)/$(am__dirstamp)

pipelines/simple-launch-lines$(EXEEXT): $(pipelines_simple_launch_lines_OBJECTS) $(pipelines_simple_launch_lines_DEPENDENCIES) $(EXTRA_pipelines_simple_launch_lines_DEPENDENCIES) pipelines/$(am__dirstamp)
	@rm -f pipelines/simple-launch-lines$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pipelines_simple_launch_lines_OBJECTS) $(pipelines_simple_launch_lines_LDADD) $(LIBS)
pipelines/stress.$(OBJEXT): pipelines/$(am__dirstamp) \
	pipelines/$(DEPDIR)/$(am__dirstamp)

pipelines/stress$(EXEEXT): $(pipelines_stress_OBJECTS) $(pipelines_stress_DEPENDENCIES) $(EXTRA_pipelines_stress_DEPENDENCIES) pipelines/$(am__dirstamp)
	@rm -f pipelines/stress$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pipelines_stress_OBJECTS) $(pipelines_stress_LDADD) $(LIBS)
tools/$(am__dirstamp):
	@$(MKDIR_P) tools
	@: > tools/$(am__dirstamp)
tools/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tools/$(DEPDIR)
	@: > tools/$(DEPDIR)/$(am__dirstamp)
tools/gstinspect.$(OBJEXT): tools/$(am__dirstamp) \
	tools/$(DEPDIR)/$(am__dirstamp)

tools/gstinspect$(EXEEXT): $(tools_gstinspect_OBJECTS) $(tools_gstinspect_DEPENDENCIES) $(EXTRA_tools_gstinspect_DEPENDENCIES) tools/$(am__dirstamp)
	@rm -f tools/gstinspect$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tools_gstinspect_OBJECTS) $(tools_gstinspect_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f elements/*.$(OBJEXT)
	-rm -f generic/*.$(OBJEXT)
	-rm -f gst/*.$(OBJEXT)
	-rm -f libs/*.$(OBJEXT)
	-rm -f pipelines/*.$(OBJEXT)
	-rm -f tools/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include elements/$(DEPDIR)/capsfilter.Po
include elements/$(DEPDIR)/elements_fdsrc-fdsrc.Po
include elements/$(DEPDIR)/elements_filesrc-filesrc.Po
include elements/$(DEPDIR)/fakesink.Po
include elements/$(DEPDIR)/fakesrc.Po
include elements/$(DEPDIR)/filesink.Po
include elements/$(DEPDIR)/funnel.Po
include elements/$(DEPDIR)/identity.Po
include elements/$(DEPDIR)/multiqueue.Po
include elements/$(DEPDIR)/queue.Po
include elements/$(DEPDIR)/queue2.Po
include elements/$(DEPDIR)/selector.Po
include elements/$(DEPDIR)/tee.Po
include elements/$(DEPDIR)/valve.Po
include generic/$(DEPDIR)/sinks.Po
include generic/$(DEPDIR)/states.Po
include gst/$(DEPDIR)/gst.Po
include gst/$(DEPDIR)/gstabi.Po
include gst/$(DEPDIR)/gstatomicqueue.Po
include gst/$(DEPDIR)/gstbin.Po
include gst/$(DEPDIR)/gstbuffer.Po
include gst/$(DEPDIR)/gstbufferlist.Po
include gst/$(DEPDIR)/gstbus.Po
include gst/$(DEPDIR)/gstcaps.Po
include gst/$(DEPDIR)/gstcapsfeatures.Po
include gst/$(DEPDIR)/gstchildproxy.Po
include gst/$(DEPDIR)/gstclock.Po
include gst/$(DEPDIR)/gstcontext.Po
include gst/$(DEPDIR)/gstcontroller.Po
include gst/$(DEPDIR)/gstcpp.Po
include gst/$(DEPDIR)/gstdatetime.Po
include gst/$(DEPDIR)/gstelement.Po
include gst/$(DEPDIR)/gstelementfactory.Po
include gst/$(DEPDIR)/gstevent.Po
include gst/$(DEPDIR)/gstghostpad.Po
include gst/$(DEPDIR)/gstinfo.Po
include gst/$(DEPDIR)/gstiterator.Po
include gst/$(DEPDIR)/gstmemory.Po
include gst/$(DEPDIR)/gstmessage.Po
include gst/$(DEPDIR)/gstmeta.Po
include gst/$(DEPDIR)/gstminiobject.Po
include gst/$(DEPDIR)/gstobject.Po
include gst/$(DEPDIR)/gstpad.Po
include gst/$(DEPDIR)/gstparamspecs.Po
include gst/$(DEPDIR)/gstpipeline.Po
include gst/$(DEPDIR)/gstplugin.Po
include gst/$(DEPDIR)/gstpoll.Po
include gst/$(DEPDIR)/gstpreset.Po
include gst/$(DEPDIR)/gstquery.Po
include gst/$(DEPDIR)/gstregistry.Po
include gst/$(DEPDIR)/gstsegment.Po
include gst/$(DEPDIR)/gststructure.Po
include gst/$(DEPDIR)/gstsystemclock.Po
include gst/$(DEPDIR)/gsttag.Po
include gst/$(DEPDIR)/gsttagsetter.Po
include gst/$(DEPDIR)/gsttask.Po
include gst/$(DEPDIR)/gsttoc.Po
include gst/$(DEPDIR)/gsttocsetter.Po
include gst/$(DEPDIR)/gsturi.Po
include gst/$(DEPDIR)/gstutils.Po
include gst/$(DEPDIR)/gstvalue.Po
include libs/$(DEPDIR)/adapter.Po
include libs/$(DEPDIR)/basesink.Po
include libs/$(DEPDIR)/basesrc.Po
include libs/$(DEPDIR)/bitreader.Po
include libs/$(DEPDIR)/bytereader.Po
include libs/$(DEPDIR)/bytewriter.Po
include libs/$(DEPDIR)/collectpads.Po
include libs/$(DEPDIR)/controller.Po
include libs/$(DEPDIR)/gstlibscpp.Po
include libs/$(DEPDIR)/gstnetclientclock.Po
include libs/$(DEPDIR)/gstnettimeprovider.Po
include libs/$(DEPDIR)/gsttestclock.Po
include libs/$(DEPDIR)/libsabi.Po
include libs/$(DEPDIR)/queuearray.Po
include libs/$(DEPDIR)/transform1.Po
include libs/$(DEPDIR)/typefindhelper.Po
include pipelines/$(DEPDIR)/cleanup.Po
include pipelines/$(DEPDIR)/parse-disabled.Po
include pipelines/$(DEPDIR)/parse-launch.Po
include pipelines/$(DEPDIR)/queue-error.Po
include pipelines/$(DEPDIR)/seek.Po
include pipelines/$(DEPDIR)/simple-launch-lines.Po
include pipelines/$(DEPDIR)/stress.Po
include tools/$(DEPDIR)/gstinspect.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

elements/elements_fdsrc-fdsrc.o: elements/fdsrc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_fdsrc_CFLAGS) $(CFLAGS) -MT elements/elements_fdsrc-fdsrc.o -MD -MP -MF elements/$(DEPDIR)/elements_fdsrc-fdsrc.Tpo -c -o elements/elements_fdsrc-fdsrc.o `test -f 'elements/fdsrc.c' || echo '$(srcdir)/'`elements/fdsrc.c
	$(AM_V_at)$(am__mv) elements/$(DEPDIR)/elements_fdsrc-fdsrc.Tpo elements/$(DEPDIR)/elements_fdsrc-fdsrc.Po
#	$(AM_V_CC)source='elements/fdsrc.c' object='elements/elements_fdsrc-fdsrc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_fdsrc_CFLAGS) $(CFLAGS) -c -o elements/elements_fdsrc-fdsrc.o `test -f 'elements/fdsrc.c' || echo '$(srcdir)/'`elements/fdsrc.c

elements/elements_fdsrc-fdsrc.obj: elements/fdsrc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_fdsrc_CFLAGS) $(CFLAGS) -MT elements/elements_fdsrc-fdsrc.obj -MD -MP -MF elements/$(DEPDIR)/elements_fdsrc-fdsrc.Tpo -c -o elements/elements_fdsrc-fdsrc.obj `if test -f 'elements/fdsrc.c'; then $(CYGPATH_W) 'elements/fdsrc.c'; else $(CYGPATH_W) '$(srcdir)/elements/fdsrc.c'; fi`
	$(AM_V_at)$(am__mv) elements/$(DEPDIR)/elements_fdsrc-fdsrc.Tpo elements/$(DEPDIR)/elements_fdsrc-fdsrc.Po
#	$(AM_V_CC)source='elements/fdsrc.c' object='elements/elements_fdsrc-fdsrc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_fdsrc_CFLAGS) $(CFLAGS) -c -o elements/elements_fdsrc-fdsrc.obj `if test -f 'elements/fdsrc.c'; then $(CYGPATH_W) 'elements/fdsrc.c'; else $(CYGPATH_W) '$(srcdir)/elements/fdsrc.c'; fi`

elements/elements_filesrc-filesrc.o: elements/filesrc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_filesrc_CFLAGS) $(CFLAGS) -MT elements/elements_filesrc-filesrc.o -MD -MP -MF elements/$(DEPDIR)/elements_filesrc-filesrc.Tpo -c -o elements/elements_filesrc-filesrc.o `test -f 'elements/filesrc.c' || echo '$(srcdir)/'`elements/filesrc.c
	$(AM_V_at)$(am__mv) elements/$(DEPDIR)/elements_filesrc-filesrc.Tpo elements/$(DEPDIR)/elements_filesrc-filesrc.Po
#	$(AM_V_CC)source='elements/filesrc.c' object='elements/elements_filesrc-filesrc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_filesrc_CFLAGS) $(CFLAGS) -c -o elements/elements_filesrc-filesrc.o `test -f 'elements/filesrc.c' || echo '$(srcdir)/'`elements/filesrc.c

elements/elements_filesrc-filesrc.obj: elements/filesrc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_filesrc_CFLAGS) $(CFLAGS) -MT elements/elements_filesrc-filesrc.obj -MD -MP -MF elements/$(DEPDIR)/elements_filesrc-filesrc.Tpo -c -o elements/elements_filesrc-filesrc.obj `if test -f 'elements/filesrc.c'; then $(CYGPATH_W) 'elements/filesrc.c'; else $(CYGPATH_W) '$(srcdir)/elements/filesrc.c'; fi`
	$(AM_V_at)$(am__mv) elements/$(DEPDIR)/elements_filesrc-filesrc.Tpo elements/$(DEPDIR)/elements_filesrc-filesrc.Po
#	$(AM_V_CC)source='elements/filesrc.c' object='elements/elements_filesrc-filesrc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_filesrc_CFLAGS) $(CFLAGS) -c -o elements/elements_filesrc-filesrc.obj `if test -f 'elements/filesrc.c'; then $(CYGPATH_W) 'elements/filesrc.c'; else $(CYGPATH_W) '$(srcdir)/elements/filesrc.c'; fi`

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf elements/.libs elements/_libs
	-rm -rf generic/.libs generic/_libs
	-rm -rf gst/.libs gst/_libs
	-rm -rf libs/.libs libs/_libs
	-rm -rf pipelines/.libs pipelines/_libs
	-rm -rf tools/.libs tools/_libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
gst/gstabi.log: gst/gstabi$(EXEEXT)
	@p='gst/gstabi$(EXEEXT)'; \
	b='gst/gstabi'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstatomicqueue.log: gst/gstatomicqueue$(EXEEXT)
	@p='gst/gstatomicqueue$(EXEEXT)'; \
	b='gst/gstatomicqueue'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstbuffer.log: gst/gstbuffer$(EXEEXT)
	@p='gst/gstbuffer$(EXEEXT)'; \
	b='gst/gstbuffer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstbufferlist.log: gst/gstbufferlist$(EXEEXT)
	@p='gst/gstbufferlist$(EXEEXT)'; \
	b='gst/gstbufferlist'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstmeta.log: gst/gstmeta$(EXEEXT)
	@p='gst/gstmeta$(EXEEXT)'; \
	b='gst/gstmeta'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstmemory.log: gst/gstmemory$(EXEEXT)
	@p='gst/gstmemory$(EXEEXT)'; \
	b='gst/gstmemory'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstbus.log: gst/gstbus$(EXEEXT)
	@p='gst/gstbus$(EXEEXT)'; \
	b='gst/gstbus'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstcaps.log: gst/gstcaps$(EXEEXT)
	@p='gst/gstcaps$(EXEEXT)'; \
	b='gst/gstcaps'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstcapsfeatures.log: gst/gstcapsfeatures$(EXEEXT)
	@p='gst/gstcapsfeatures$(EXEEXT)'; \
	b='gst/gstcapsfeatures'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstcpp.log: gst/gstcpp$(EXEEXT)
	@p='gst/gstcpp$(EXEEXT)'; \
	b='gst/gstcpp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/gstlibscpp.log: libs/gstlibscpp$(EXEEXT)
	@p='libs/gstlibscpp$(EXEEXT)'; \
	b='libs/gstlibscpp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstdatetime.log: gst/gstdatetime$(EXEEXT)
	@p='gst/gstdatetime$(EXEEXT)'; \
	b='gst/gstdatetime'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstinfo.log: gst/gstinfo$(EXEEXT)
	@p='gst/gstinfo$(EXEEXT)'; \
	b='gst/gstinfo'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstiterator.log: gst/gstiterator$(EXEEXT)
	@p='gst/gstiterator$(EXEEXT)'; \
	b='gst/gstiterator'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstmessage.log: gst/gstmessage$(EXEEXT)
	@p='gst/gstmessage$(EXEEXT)'; \
	b='gst/gstmessage'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstminiobject.log: gst/gstminiobject$(EXEEXT)
	@p='gst/gstminiobject$(EXEEXT)'; \
	b='gst/gstminiobject'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstobject.log: gst/gstobject$(EXEEXT)
	@p='gst/gstobject$(EXEEXT)'; \
	b='gst/gstobject'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstpad.log: gst/gstpad$(EXEEXT)
	@p='gst/gstpad$(EXEEXT)'; \
	b='gst/gstpad'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstparamspecs.log: gst/gstparamspecs$(EXEEXT)
	@p='gst/gstparamspecs$(EXEEXT)'; \
	b='gst/gstparamspecs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstpipeline.log: gst/gstpipeline$(EXEEXT)
	@p='gst/gstpipeline$(EXEEXT)'; \
	b='gst/gstpipeline'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstpoll.log: gst/gstpoll$(EXEEXT)
	@p='gst/gstpoll$(EXEEXT)'; \
	b='gst/gstpoll'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstsegment.log: gst/gstsegment$(EXEEXT)
	@p='gst/gstsegment$(EXEEXT)'; \
	b='gst/gstsegment'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstsystemclock.log: gst/gstsystemclock$(EXEEXT)
	@p='gst/gstsystemclock$(EXEEXT)'; \
	b='gst/gstsystemclock'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstclock.log: gst/gstclock$(EXEEXT)
	@p='gst/gstclock$(EXEEXT)'; \
	b='gst/gstclock'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gststructure.log: gst/gststructure$(EXEEXT)
	@p='gst/gststructure$(EXEEXT)'; \
	b='gst/gststructure'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gsttag.log: gst/gsttag$(EXEEXT)
	@p='gst/gsttag$(EXEEXT)'; \
	b='gst/gsttag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gsttagsetter.log: gst/gsttagsetter$(EXEEXT)
	@p='gst/gsttagsetter$(EXEEXT)'; \
	b='gst/gsttagsetter'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gsttask.log: gst/gsttask$(EXEEXT)
	@p='gst/gsttask$(EXEEXT)'; \
	b='gst/gsttask'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gsttoc.log: gst/gsttoc$(EXEEXT)
	@p='gst/gsttoc$(EXEEXT)'; \
	b='gst/gsttoc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gsttocsetter.log: gst/gsttocsetter$(EXEEXT)
	@p='gst/gsttocsetter$(EXEEXT)'; \
	b='gst/gsttocsetter'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstvalue.log: gst/gstvalue$(EXEEXT)
	@p='gst/gstvalue$(EXEEXT)'; \
	b='gst/gstvalue'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
generic/states.log: generic/states$(EXEEXT)
	@p='generic/states$(EXEEXT)'; \
	b='generic/states'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pipelines/simple-launch-lines.log: pipelines/simple-launch-lines$(EXEEXT)
	@p='pipelines/simple-launch-lines$(EXEEXT)'; \
	b='pipelines/simple-launch-lines'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pipelines/cleanup.log: pipelines/cleanup$(EXEEXT)
	@p='pipelines/cleanup$(EXEEXT)'; \
	b='pipelines/cleanup'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pipelines/parse-launch.log: pipelines/parse-launch$(EXEEXT)
	@p='pipelines/parse-launch$(EXEEXT)'; \
	b='pipelines/parse-launch'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pipelines/parse-disabled.log: pipelines/parse-disabled$(EXEEXT)
	@p='pipelines/parse-disabled$(EXEEXT)'; \
	b='pipelines/parse-disabled'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gst.log: gst/gst$(EXEEXT)
	@p='gst/gst$(EXEEXT)'; \
	b='gst/gst'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstbin.log: gst/gstbin$(EXEEXT)
	@p='gst/gstbin$(EXEEXT)'; \
	b='gst/gstbin'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstchildproxy.log: gst/gstchildproxy$(EXEEXT)
	@p='gst/gstchildproxy$(EXEEXT)'; \
	b='gst/gstchildproxy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstcontext.log: gst/gstcontext$(EXEEXT)
	@p='gst/gstcontext$(EXEEXT)'; \
	b='gst/gstcontext'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstcontroller.log: gst/gstcontroller$(EXEEXT)
	@p='gst/gstcontroller$(EXEEXT)'; \
	b='gst/gstcontroller'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstelement.log: gst/gstelement$(EXEEXT)
	@p='gst/gstelement$(EXEEXT)'; \
	b='gst/gstelement'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstelementfactory.log: gst/gstelementfactory$(EXEEXT)
	@p='gst/gstelementfactory$(EXEEXT)'; \
	b='gst/gstelementfactory'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstevent.log: gst/gstevent$(EXEEXT)
	@p='gst/gstevent$(EXEEXT)'; \
	b='gst/gstevent'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstghostpad.log: gst/gstghostpad$(EXEEXT)
	@p='gst/gstghostpad$(EXEEXT)'; \
	b='gst/gstghostpad'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstplugin.log: gst/gstplugin$(EXEEXT)
	@p='gst/gstplugin$(EXEEXT)'; \
	b='gst/gstplugin'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstpreset.log: gst/gstpreset$(EXEEXT)
	@p='gst/gstpreset$(EXEEXT)'; \
	b='gst/gstpreset'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstquery.log: gst/gstquery$(EXEEXT)
	@p='gst/gstquery$(EXEEXT)'; \
	b='gst/gstquery'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstregistry.log: gst/gstregistry$(EXEEXT)
	@p='gst/gstregistry$(EXEEXT)'; \
	b='gst/gstregistry'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gsturi.log: gst/gsturi$(EXEEXT)
	@p='gst/gsturi$(EXEEXT)'; \
	b='gst/gsturi'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gst/gstutils.log: gst/gstutils$(EXEEXT)
	@p='gst/gstutils$(EXEEXT)'; \
	b='gst/gstutils'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
generic/sinks.log: generic/sinks$(EXEEXT)
	@p='generic/sinks$(EXEEXT)'; \
	b='generic/sinks'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
elements/capsfilter.log: elements/capsfilter$(EXEEXT)
	@p='elements/capsfilter$(EXEEXT)'; \
	b='elements/capsfilter'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
elements/fakesink.log: elements/fakesink$(EXEEXT)
	@p='elements/fakesink$(EXEEXT)'; \
	b='elements/fakesink'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
elements/fakesrc.log: elements/fakesrc$(EXEEXT)
	@p='elements/fakesrc$(EXEEXT)'; \
	b='elements/fakesrc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
elements/fdsrc.log: elements/fdsrc$(EXEEXT)
	@p='elements/fdsrc$(EXEEXT)'; \
	b='elements/fdsrc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
elements/filesink.log: elements/filesink$(EXEEXT)
	@p='elements/filesink$(EXEEXT)'; \
	b='elements/filesink'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
elements/filesrc.log: elements/filesrc$(EXEEXT)
	@p='elements/filesrc$(EXEEXT)'; \
	b='elements/filesrc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
elements/funnel.log: elements/funnel$(EXEEXT)
	@p='elements/funnel$(EXEEXT)'; \
	b='elements/funnel'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
elements/identity.log: elements/identity$(EXEEXT)
	@p='elements/identity$(EXEEXT)'; \
	b='elements/identity'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
elements/multiqueue.log: elements/multiqueue$(EXEEXT)
	@p='elements/multiqueue$(EXEEXT)'; \
	b='elements/multiqueue'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
elements/selector.log: elements/selector$(EXEEXT)
	@p='elements/selector$(EXEEXT)'; \
	b='elements/selector'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
elements/tee.log: elements/tee$(EXEEXT)
	@p='elements/tee$(EXEEXT)'; \
	b='elements/tee'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
elements/queue.log: elements/queue$(EXEEXT)
	@p='elements/queue$(EXEEXT)'; \
	b='elements/queue'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
elements/queue2.log: elements/queue2$(EXEEXT)
	@p='elements/queue2$(EXEEXT)'; \
	b='elements/queue2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
elements/valve.log: elements/valve$(EXEEXT)
	@p='elements/valve$(EXEEXT)'; \
	b='elements/valve'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/basesrc.log: libs/basesrc$(EXEEXT)
	@p='libs/basesrc$(EXEEXT)'; \
	b='libs/basesrc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/basesink.log: libs/basesink$(EXEEXT)
	@p='libs/basesink$(EXEEXT)'; \
	b='libs/basesink'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/controller.log: libs/controller$(EXEEXT)
	@p='libs/controller$(EXEEXT)'; \
	b='libs/controller'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/queuearray.log: libs/queuearray$(EXEEXT)
	@p='libs/queuearray$(EXEEXT)'; \
	b='libs/queuearray'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/typefindhelper.log: libs/typefindhelper$(EXEEXT)
	@p='libs/typefindhelper$(EXEEXT)'; \
	b='libs/typefindhelper'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pipelines/seek.log: pipelines/seek$(EXEEXT)
	@p='pipelines/seek$(EXEEXT)'; \
	b='pipelines/seek'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pipelines/stress.log: pipelines/stress$(EXEEXT)
	@p='pipelines/stress$(EXEEXT)'; \
	b='pipelines/stress'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pipelines/queue-error.log: pipelines/queue-error$(EXEEXT)
	@p='pipelines/queue-error$(EXEEXT)'; \
	b='pipelines/queue-error'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/libsabi.log: libs/libsabi$(EXEEXT)
	@p='libs/libsabi$(EXEEXT)'; \
	b='libs/libsabi'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/adapter.log: libs/adapter$(EXEEXT)
	@p='libs/adapter$(EXEEXT)'; \
	b='libs/adapter'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/bitreader.log: libs/bitreader$(EXEEXT)
	@p='libs/bitreader$(EXEEXT)'; \
	b='libs/bitreader'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/bytereader.log: libs/bytereader$(EXEEXT)
	@p='libs/bytereader$(EXEEXT)'; \
	b='libs/bytereader'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/bytewriter.log: libs/bytewriter$(EXEEXT)
	@p='libs/bytewriter$(EXEEXT)'; \
	b='libs/bytewriter'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/collectpads.log: libs/collectpads$(EXEEXT)
	@p='libs/collectpads$(EXEEXT)'; \
	b='libs/collectpads'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/gstnetclientclock.log: libs/gstnetclientclock$(EXEEXT)
	@p='libs/gstnetclientclock$(EXEEXT)'; \
	b='libs/gstnetclientclock'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/gstnettimeprovider.log: libs/gstnettimeprovider$(EXEEXT)
	@p='libs/gstnettimeprovider$(EXEEXT)'; \
	b='libs/gstnettimeprovider'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/gsttestclock.log: libs/gsttestclock$(EXEEXT)
	@p='libs/gsttestclock$(EXEEXT)'; \
	b='libs/gsttestclock'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libs/transform1.log: libs/transform1$(EXEEXT)
	@p='libs/transform1$(EXEEXT)'; \
	b='libs/transform1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tools/gstinspect.log: tools/gstinspect$(EXEEXT)
	@p='tools/gstinspect$(EXEEXT)'; \
	b='tools/gstinspect'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f elements/$(DEPDIR)/$(am__dirstamp)
	-rm -f elements/$(am__dirstamp)
	-rm -f generic/$(DEPDIR)/$(am__dirstamp)
	-rm -f generic/$(am__dirstamp)
	-rm -f gst/$(DEPDIR)/$(am__dirstamp)
	-rm -f gst/$(am__dirstamp)
	-rm -f libs/$(DEPDIR)/$(am__dirstamp)
	-rm -f libs/$(am__dirstamp)
	-rm -f pipelines/$(DEPDIR)/$(am__dirstamp)
	-rm -f pipelines/$(am__dirstamp)
	-rm -f tools/$(DEPDIR)/$(am__dirstamp)
	-rm -f tools/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf elements/$(DEPDIR) generic/$(DEPDIR) gst/$(DEPDIR) libs/$(DEPDIR) pipelines/$(DEPDIR) tools/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf elements/$(DEPDIR) generic/$(DEPDIR) gst/$(DEPDIR) libs/$(DEPDIR) pipelines/$(DEPDIR) tools/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am


# keep target around, since it's referenced in the modules' Makefiles
clean-local-check:
	@echo

# hangs spectacularly on some machines, so let's not do this by default yet
#check-valgrind:
#	$(MAKE) valgrind
check-valgrind:
	@true

LOOPS ?= 10

# run any given test by running make test.check
# if the test fails, run it again at at least debug level 2
%.check: %
	@$(TESTS_ENVIRONMENT)					\
	CK_DEFAULT_TIMEOUT=20					\
	$* ||							\
	$(TESTS_ENVIRONMENT)					\
	GST_DEBUG=$$GST_DEBUG,*:2				\
	CK_DEFAULT_TIMEOUT=20					\
	$*

# just like 'check', but don't run it again if it fails (useful for debugging)
%.check-norepeat: %
	@$(TESTS_ENVIRONMENT)					\
	CK_DEFAULT_TIMEOUT=20					\
	$*

# run any given test in a loop
%.torture: %
	@for i in `seq 1 $(LOOPS)`; do				\
	$(TESTS_ENVIRONMENT)					\
	CK_DEFAULT_TIMEOUT=20					\
	$*; done

# run any given test in an infinite loop
%.forever: %
	@while true; do						\
	$(TESTS_ENVIRONMENT)					\
	CK_DEFAULT_TIMEOUT=20					\
	$* || break; done

# valgrind any given test by running make test.valgrind
%.valgrind: %
	@$(TESTS_ENVIRONMENT)					\
	CK_DEFAULT_TIMEOUT=360					\
	G_SLICE=always-malloc					\
	$(LIBTOOL) --mode=execute				\
	$(VALGRIND_PATH) -q					\
	$(foreach s,$(SUPPRESSIONS),--suppressions=$(s))	\
	--tool=memcheck --leak-check=full --trace-children=yes	\
	--show-possibly-lost=no                                 \
	--leak-resolution=high --num-callers=20			\
	./$* 2>&1 | tee valgrind.log
	@if grep "==" valgrind.log > /dev/null 2>&1; then	\
	    rm valgrind.log;					\
	    exit 1;						\
	fi
	@rm valgrind.log

# valgrind any given test and generate suppressions for it
%.valgrind.gen-suppressions: %
	@$(TESTS_ENVIRONMENT)					\
	CK_DEFAULT_TIMEOUT=360					\
	G_SLICE=always-malloc					\
	$(LIBTOOL) --mode=execute				\
	$(VALGRIND_PATH) -q 					\
	$(foreach s,$(SUPPRESSIONS),--suppressions=$(s))	\
	--tool=memcheck --leak-check=full --trace-children=yes	\
	--show-possibly-lost=no                                 \
	--leak-resolution=high --num-callers=20			\
	--gen-suppressions=all					\
	./$* 2>&1 | tee suppressions.log

# valgrind torture any given test
%.valgrind-torture: %
	@for i in `seq 1 $(LOOPS)`; do				\
		$(MAKE) $*.valgrind ||				\
		(echo "Failure after $$i runs"; exit 1) ||	\
		exit 1;						\
	done
	@banner="All $(LOOPS) loops passed";			\
	dashes=`echo "$$banner" | sed s/./=/g`;			\
	echo $$dashes; echo $$banner; echo $$dashes

# valgrind any given test until failure by running make test.valgrind-forever
%.valgrind-forever: %
	@while $(MAKE) $*.valgrind; do				\
	  true; done

# gdb any given test by running make test.gdb
%.gdb: %
	@$(TESTS_ENVIRONMENT)					\
	CK_FORK=no						\
	$(LIBTOOL) --mode=execute				\
	gdb $*

%.lcov-reset:
	$(MAKE) $*.lcov-run
	$(MAKE) $*.lcov-report

%.lcov: %
	$(MAKE) $*.lcov-reset

#%.lcov-clean:
#	$(MAKE) -C $(top_builddir) lcov-clean

#%.lcov-run:
#	$(MAKE) $*.lcov-clean
#	$(MAKE) $*.check

#%.lcov-report:
#	$(MAKE) -C $(top_builddir) lcov-report
%.lcov-run:
	echo "Need to reconfigure with --enable-gcov"

%.lcov-report:
	echo "Need to reconfigure with --enable-gcov"

# torture tests
torture: $(TESTS)
	-rm test-registry.*
	@echo "Torturing tests ..."
	@for i in `seq 1 $(LOOPS)`; do				\
		$(MAKE) check ||				\
		(echo "Failure after $$i runs"; exit 1) ||	\
		exit 1;						\
	done
	@banner="All $(LOOPS) loops passed";			\
	dashes=`echo "$$banner" | sed s/./=/g`;			\
	echo $$dashes; echo $$banner; echo $$dashes

# forever tests
forever: $(TESTS)
	-rm test-registry.*
	@echo "Forever tests ..."
	@while true; do						\
		$(MAKE) check ||				\
		(echo "Failure"; exit 1) ||			\
		exit 1;						\
	done

# valgrind all tests
valgrind: $(TESTS)
	@echo "Valgrinding tests ..."
	@failed=0;							\
	for t in $(filter-out $(VALGRIND_TESTS_DISABLE),$(TESTS)); do	\
		$(MAKE) $$t.valgrind;					\
		if test "$$?" -ne 0; then                               \
			echo "Valgrind error for test $$t";		\
			failed=`expr $$failed + 1`;			\
			whicht="$$whicht $$t";				\
		fi;							\
	done;								\
	if test "$$failed" -ne 0; then					\
		echo "$$failed tests had leaks or errors under valgrind:";	\
		echo "$$whicht";					\
		false;							\
	fi

# valgrind all tests until failure
valgrind-forever: $(TESTS)
	-rm test-registry.*
	@echo "Forever valgrinding tests ..."
	@while true; do						\
		$(MAKE) valgrind ||				\
		(echo "Failure"; exit 1) ||			\
		exit 1;						\
	done

# valgrind torture all tests
valgrind-torture: $(TESTS)
	-rm test-registry.*
	@echo "Torturing and valgrinding tests ..."
	@for i in `seq 1 $(LOOPS)`; do				\
		$(MAKE) valgrind ||				\
		(echo "Failure after $$i runs"; exit 1) ||	\
		exit 1;						\
	done
	@banner="All $(LOOPS) loops passed";			\
	dashes=`echo "$$banner" | sed s/./=/g`;			\
	echo $$dashes; echo $$banner; echo $$dashes

# valgrind all tests and generate suppressions
valgrind.gen-suppressions: $(TESTS)
	@echo "Valgrinding tests ..."
	@failed=0;							\
	for t in $(filter-out $(VALGRIND_TESTS_DISABLE),$(TESTS)); do	\
		$(MAKE) $$t.valgrind.gen-suppressions;			\
		if test "$$?" -ne 0; then                               \
			echo "Valgrind error for test $$t";		\
			failed=`expr $$failed + 1`;			\
			whicht="$$whicht $$t";				\
		fi;							\
	done;								\
	if test "$$failed" -ne 0; then					\
		echo "$$failed tests had leaks or errors under valgrind:";	\
		echo "$$whicht";					\
		false;							\
	fi
inspect:
	@echo "Inspecting features ..."
	@for e in `$(TESTS_ENVIRONMENT) $(GST_INSPECT) | head -n -2 	\
	  | cut -d: -f2`;						\
	  do echo Inspecting $$e;					\
	     $(GST_INSPECT) $$e > /dev/null 2>&1; done

help:
	@echo
	@echo "make check                         -- run all checks"
	@echo "make torture                       -- run all checks $(LOOPS) times"
	@echo "make (dir)/(test).check            -- run the given check once, repeat with GST_DEBUG=*:2 if it fails"
	@echo "make (dir)/(test).check-norepeat   -- run the given check once, but don't run it again if it fails"
	@echo "make (dir)/(test).forever          -- run the given check forever"
	@echo "make (dir)/(test).torture          -- run the given check $(LOOPS) times"
	@echo
	@echo "make (dir)/(test).gdb              -- start up gdb for the given test"
	@echo
	@echo "make valgrind                      -- valgrind all tests"
	@echo "make valgrind-forever              -- valgrind all tests forever"
	@echo "make valgrind-torture              -- valgrind all tests $(LOOPS) times"
	@echo "make valgrind.gen-suppressions     -- generate suppressions for all tests"
	@echo "                                      and save to suppressions.log"
	@echo "make (dir)/(test).valgrind         -- valgrind the given test"
	@echo "make (dir)/(test).valgrind-forever -- valgrind the given test forever"
	@echo "make (dir)/(test).valgrind-torture -- valgrind the given test $(LOOPS) times"
	@echo "make (dir)/(test).valgrind.gen-suppressions -- generate suppressions"
	@echo "                                               and save to suppressions.log"
	@echo "make inspect                       -- inspect all plugin features"
	@echo
	@echo
	@echo "Additionally, you can use the GST_CHECKS environment variable to"
	@echo "specify which test(s) should be run. This is useful if you are"
	@echo "debugging a failure in one particular test, or want to reproduce"
	@echo "a race condition in a single test."
	@echo
	@echo "Examples:"
	@echo
	@echo "  GST_CHECKS=test_this,test_that  make element/foobar.check"
	@echo "  GST_CHECKS=test_many_threads    make element/foobar.forever"
	@echo

# override to _not_ install the test plugins
install-pluginLTLIBRARIES:

clean-local: clean-local-check

debug:
	echo $(COVERAGE_FILES)
	echo $(COVERAGE_FILES_REL)

.PHONY: coverage
# we rebuild a registry and do gst-inspect so that all the get/set codepaths
# are also covered
#coverage:
#	for file in `find $(top_builddir) -name '*.gcda'`; do rm $$file; done
#	-rm $(CHECK_REGISTRY)
#	echo "Inspecting all elements"
#	for e in `$(GST_INSPECT) | head -n -2 | cut -d: -f2`; do $(GST_INSPECT) $$e > /dev/null 2>&1; done
#	make check
#	make coverage-report
coverage:
	echo "You need to configure with --enable-gcov to get coverage data"
	exit 1

coverage-report:
	rm -r coverage
	for dir in $(COVERAGE_DIRS); do 				\
	  mkdir -p coverage/$$dir; 					\
	  make -C $(top_builddir)/$$dir gcov;				\
        done
	for dir in $(COVERAGE_DIRS); do					\
	    files="`ls $(top_builddir)/$$dir/*.gcov.out 2> /dev/null`"; \
          if test ! -z "$$files"; then					\
	    perl $(top_srcdir)/common/coverage/coverage-report.pl 	\
	      $(top_builddir)/$$dir/*.gcov.out >			\
	      coverage/$$dir/index.xml;					\
	    xsltproc $(top_srcdir)/common/coverage/coverage-report.xsl	\
	      coverage/$$dir/index.xml > coverage/$$dir/index.html;	\
	  fi; \
        done
	for file in $(COVERAGE_FILES_REL); do				\
	  echo Generating coverage/$$file.html; 			\
	  perl $(top_srcdir)/common/coverage/coverage-report-entry.pl   \
	    $(top_builddir)/$$file > coverage/$$file.html; 		\
	done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
