package gio;
import gio.GIOLibrary.GAppInfo;
import gio.GIOLibrary.GVariant;
import org.bridj.BridJ;
import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
/**
 * <i>native declaration : glib-2.0/gio/gappinfo.h:195</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GIO") 
public abstract class GAppLaunchContextClass extends StructObject {
	static {
		BridJ.register();
	}
	/** Conversion Error : GObjectClass (Unsupported type) */
	/** C type : get_display_callback* */
	@Field(1) 
	public Pointer<GAppLaunchContextClass.get_display_callback > get_display() {
		return this.io.getPointerField(this, 1);
	}
	/** C type : get_display_callback* */
	@Field(1) 
	public GAppLaunchContextClass get_display(Pointer<GAppLaunchContextClass.get_display_callback > get_display) {
		this.io.setPointerField(this, 1, get_display);
		return this;
	}
	/** C type : get_startup_notify_id_callback* */
	@Field(2) 
	public Pointer<GAppLaunchContextClass.get_startup_notify_id_callback > get_startup_notify_id() {
		return this.io.getPointerField(this, 2);
	}
	/** C type : get_startup_notify_id_callback* */
	@Field(2) 
	public GAppLaunchContextClass get_startup_notify_id(Pointer<GAppLaunchContextClass.get_startup_notify_id_callback > get_startup_notify_id) {
		this.io.setPointerField(this, 2, get_startup_notify_id);
		return this;
	}
	/** C type : launch_failed_callback* */
	@Field(3) 
	public Pointer<GAppLaunchContextClass.launch_failed_callback > launch_failed() {
		return this.io.getPointerField(this, 3);
	}
	/** C type : launch_failed_callback* */
	@Field(3) 
	public GAppLaunchContextClass launch_failed(Pointer<GAppLaunchContextClass.launch_failed_callback > launch_failed) {
		this.io.setPointerField(this, 3, launch_failed);
		return this;
	}
	/** C type : launched_callback* */
	@Field(4) 
	public Pointer<GAppLaunchContextClass.launched_callback > launched() {
		return this.io.getPointerField(this, 4);
	}
	/** C type : launched_callback* */
	@Field(4) 
	public GAppLaunchContextClass launched(Pointer<GAppLaunchContextClass.launched_callback > launched) {
		this.io.setPointerField(this, 4, launched);
		return this;
	}
	/**
	 * Padding for future expansion<br>
	 * C type : _g_reserved1_callback*
	 */
	@Field(5) 
	public Pointer<gio.GVfsClass._g_reserved1_callback > _g_reserved1() {
		return this.io.getPointerField(this, 5);
	}
	/**
	 * Padding for future expansion<br>
	 * C type : _g_reserved1_callback*
	 */
	@Field(5) 
	public GAppLaunchContextClass _g_reserved1(Pointer<gio.GVfsClass._g_reserved1_callback > _g_reserved1) {
		this.io.setPointerField(this, 5, _g_reserved1);
		return this;
	}
	/** C type : _g_reserved2_callback* */
	@Field(6) 
	public Pointer<gio.GVfsClass._g_reserved2_callback > _g_reserved2() {
		return this.io.getPointerField(this, 6);
	}
	/** C type : _g_reserved2_callback* */
	@Field(6) 
	public GAppLaunchContextClass _g_reserved2(Pointer<gio.GVfsClass._g_reserved2_callback > _g_reserved2) {
		this.io.setPointerField(this, 6, _g_reserved2);
		return this;
	}
	/** C type : _g_reserved3_callback* */
	@Field(7) 
	public Pointer<gio.GVfsClass._g_reserved3_callback > _g_reserved3() {
		return this.io.getPointerField(this, 7);
	}
	/** C type : _g_reserved3_callback* */
	@Field(7) 
	public GAppLaunchContextClass _g_reserved3(Pointer<gio.GVfsClass._g_reserved3_callback > _g_reserved3) {
		this.io.setPointerField(this, 7, _g_reserved3);
		return this;
	}
	/** C type : _g_reserved4_callback* */
	@Field(8) 
	public Pointer<gio.GVfsClass._g_reserved4_callback > _g_reserved4() {
		return this.io.getPointerField(this, 8);
	}
	/** C type : _g_reserved4_callback* */
	@Field(8) 
	public GAppLaunchContextClass _g_reserved4(Pointer<gio.GVfsClass._g_reserved4_callback > _g_reserved4) {
		this.io.setPointerField(this, 8, _g_reserved4);
		return this;
	}
	/** <i>native declaration : glib-2.0/gio/gappinfo.h:187</i> */
	public static abstract class get_display_callback extends Callback<get_display_callback > {
		public final Pointer<Byte > apply(Pointer<GAppLaunchContext > context, Pointer<GAppInfo > info, Pointer files) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(context), Pointer.getPeer(info), Pointer.getPeer(files)), Byte.class);
		}
		@Ptr 
		public abstract long apply(@Ptr long context, @Ptr long info, @Ptr long files);
	};
	/** <i>native declaration : glib-2.0/gio/gappinfo.h:188</i> */
	public static abstract class get_startup_notify_id_callback extends Callback<get_startup_notify_id_callback > {
		public final Pointer<Byte > apply(Pointer<GAppLaunchContext > context, Pointer<GAppInfo > info, Pointer files) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(context), Pointer.getPeer(info), Pointer.getPeer(files)), Byte.class);
		}
		@Ptr 
		public abstract long apply(@Ptr long context, @Ptr long info, @Ptr long files);
	};
	/** <i>native declaration : glib-2.0/gio/gappinfo.h:189</i> */
	public static abstract class launch_failed_callback extends Callback<launch_failed_callback > {
		public final void apply(Pointer<GAppLaunchContext > context, Pointer<Byte > startup_notify_id) {
			apply(Pointer.getPeer(context), Pointer.getPeer(startup_notify_id));
		}
		public abstract void apply(@Ptr long context, @Ptr long startup_notify_id);
	};
	/** <i>native declaration : glib-2.0/gio/gappinfo.h:190</i> */
	public static abstract class launched_callback extends Callback<launched_callback > {
		public final void apply(Pointer<GAppLaunchContext > context, Pointer<GAppInfo > info, Pointer<GVariant > platform_data) {
			apply(Pointer.getPeer(context), Pointer.getPeer(info), Pointer.getPeer(platform_data));
		}
		public abstract void apply(@Ptr long context, @Ptr long info, @Ptr long platform_data);
	};
	/** <i>native declaration : glib-2.0/gio/gappinfo.h:191</i> */
	public static abstract class _g_reserved1_callback extends Callback<_g_reserved1_callback > {
		public abstract void apply();
	};
	/** <i>native declaration : glib-2.0/gio/gappinfo.h:192</i> */
	public static abstract class _g_reserved2_callback extends Callback<_g_reserved2_callback > {
		public abstract void apply();
	};
	/** <i>native declaration : glib-2.0/gio/gappinfo.h:193</i> */
	public static abstract class _g_reserved3_callback extends Callback<_g_reserved3_callback > {
		public abstract void apply();
	};
	/** <i>native declaration : glib-2.0/gio/gappinfo.h:194</i> */
	public static abstract class _g_reserved4_callback extends Callback<_g_reserved4_callback > {
		public abstract void apply();
	};
}
