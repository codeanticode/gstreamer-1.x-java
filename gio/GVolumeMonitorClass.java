package gio;
import gio.GIOLibrary.GDrive;
import gio.GIOLibrary.GMount;
import gio.GIOLibrary.GVolume;
import org.bridj.BridJ;
import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
import org.bridj.cpp.CPPObject;
/**
 * <i>native declaration : glib-2.0/gio/gvolumemonitor.h:69</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GIO") 
public abstract class GVolumeMonitorClass extends CPPObject {
	static {
		BridJ.register();
	}
	/** Conversion Error : GObjectClass (Unsupported type) */
	/**
	 * signals<br>
	 * C type : volume_added_callback*
	 */
	@Field(1) 
	public Pointer<GVolumeMonitorClass.volume_added_callback > volume_added() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * signals<br>
	 * C type : volume_added_callback*
	 */
	@Field(1) 
	public GVolumeMonitorClass volume_added(Pointer<GVolumeMonitorClass.volume_added_callback > volume_added) {
		this.io.setPointerField(this, 1, volume_added);
		return this;
	}
	/** C type : volume_removed_callback* */
	@Field(2) 
	public Pointer<GVolumeMonitorClass.volume_removed_callback > volume_removed() {
		return this.io.getPointerField(this, 2);
	}
	/** C type : volume_removed_callback* */
	@Field(2) 
	public GVolumeMonitorClass volume_removed(Pointer<GVolumeMonitorClass.volume_removed_callback > volume_removed) {
		this.io.setPointerField(this, 2, volume_removed);
		return this;
	}
	/** C type : volume_changed_callback* */
	@Field(3) 
	public Pointer<GVolumeMonitorClass.volume_changed_callback > volume_changed() {
		return this.io.getPointerField(this, 3);
	}
	/** C type : volume_changed_callback* */
	@Field(3) 
	public GVolumeMonitorClass volume_changed(Pointer<GVolumeMonitorClass.volume_changed_callback > volume_changed) {
		this.io.setPointerField(this, 3, volume_changed);
		return this;
	}
	/** C type : mount_added_callback* */
	@Field(4) 
	public Pointer<GVolumeMonitorClass.mount_added_callback > mount_added() {
		return this.io.getPointerField(this, 4);
	}
	/** C type : mount_added_callback* */
	@Field(4) 
	public GVolumeMonitorClass mount_added(Pointer<GVolumeMonitorClass.mount_added_callback > mount_added) {
		this.io.setPointerField(this, 4, mount_added);
		return this;
	}
	/** C type : mount_removed_callback* */
	@Field(5) 
	public Pointer<GVolumeMonitorClass.mount_removed_callback > mount_removed() {
		return this.io.getPointerField(this, 5);
	}
	/** C type : mount_removed_callback* */
	@Field(5) 
	public GVolumeMonitorClass mount_removed(Pointer<GVolumeMonitorClass.mount_removed_callback > mount_removed) {
		this.io.setPointerField(this, 5, mount_removed);
		return this;
	}
	/** C type : mount_pre_unmount_callback* */
	@Field(6) 
	public Pointer<GVolumeMonitorClass.mount_pre_unmount_callback > mount_pre_unmount() {
		return this.io.getPointerField(this, 6);
	}
	/** C type : mount_pre_unmount_callback* */
	@Field(6) 
	public GVolumeMonitorClass mount_pre_unmount(Pointer<GVolumeMonitorClass.mount_pre_unmount_callback > mount_pre_unmount) {
		this.io.setPointerField(this, 6, mount_pre_unmount);
		return this;
	}
	/** C type : mount_changed_callback* */
	@Field(7) 
	public Pointer<GVolumeMonitorClass.mount_changed_callback > mount_changed() {
		return this.io.getPointerField(this, 7);
	}
	/** C type : mount_changed_callback* */
	@Field(7) 
	public GVolumeMonitorClass mount_changed(Pointer<GVolumeMonitorClass.mount_changed_callback > mount_changed) {
		this.io.setPointerField(this, 7, mount_changed);
		return this;
	}
	/** C type : drive_connected_callback* */
	@Field(8) 
	public Pointer<GVolumeMonitorClass.drive_connected_callback > drive_connected() {
		return this.io.getPointerField(this, 8);
	}
	/** C type : drive_connected_callback* */
	@Field(8) 
	public GVolumeMonitorClass drive_connected(Pointer<GVolumeMonitorClass.drive_connected_callback > drive_connected) {
		this.io.setPointerField(this, 8, drive_connected);
		return this;
	}
	/** C type : drive_disconnected_callback* */
	@Field(9) 
	public Pointer<GVolumeMonitorClass.drive_disconnected_callback > drive_disconnected() {
		return this.io.getPointerField(this, 9);
	}
	/** C type : drive_disconnected_callback* */
	@Field(9) 
	public GVolumeMonitorClass drive_disconnected(Pointer<GVolumeMonitorClass.drive_disconnected_callback > drive_disconnected) {
		this.io.setPointerField(this, 9, drive_disconnected);
		return this;
	}
	/** C type : drive_changed_callback* */
	@Field(10) 
	public Pointer<GVolumeMonitorClass.drive_changed_callback > drive_changed() {
		return this.io.getPointerField(this, 10);
	}
	/** C type : drive_changed_callback* */
	@Field(10) 
	public GVolumeMonitorClass drive_changed(Pointer<GVolumeMonitorClass.drive_changed_callback > drive_changed) {
		this.io.setPointerField(this, 10, drive_changed);
		return this;
	}
	/** C type : get_connected_drives_callback* */
	@Field(11) 
	public Pointer<GVolumeMonitorClass.get_connected_drives_callback > get_connected_drives() {
		return this.io.getPointerField(this, 11);
	}
	/** C type : get_connected_drives_callback* */
	@Field(11) 
	public GVolumeMonitorClass get_connected_drives(Pointer<GVolumeMonitorClass.get_connected_drives_callback > get_connected_drives) {
		this.io.setPointerField(this, 11, get_connected_drives);
		return this;
	}
	/** C type : get_volumes_callback* */
	@Field(12) 
	public Pointer<GVolumeMonitorClass.get_volumes_callback > get_volumes() {
		return this.io.getPointerField(this, 12);
	}
	/** C type : get_volumes_callback* */
	@Field(12) 
	public GVolumeMonitorClass get_volumes(Pointer<GVolumeMonitorClass.get_volumes_callback > get_volumes) {
		this.io.setPointerField(this, 12, get_volumes);
		return this;
	}
	/** C type : get_mounts_callback* */
	@Field(13) 
	public Pointer<GVolumeMonitorClass.get_mounts_callback > get_mounts() {
		return this.io.getPointerField(this, 13);
	}
	/** C type : get_mounts_callback* */
	@Field(13) 
	public GVolumeMonitorClass get_mounts(Pointer<GVolumeMonitorClass.get_mounts_callback > get_mounts) {
		this.io.setPointerField(this, 13, get_mounts);
		return this;
	}
	/** C type : get_volume_for_uuid_callback* */
	@Field(14) 
	public Pointer<GVolumeMonitorClass.get_volume_for_uuid_callback > get_volume_for_uuid() {
		return this.io.getPointerField(this, 14);
	}
	/** C type : get_volume_for_uuid_callback* */
	@Field(14) 
	public GVolumeMonitorClass get_volume_for_uuid(Pointer<GVolumeMonitorClass.get_volume_for_uuid_callback > get_volume_for_uuid) {
		this.io.setPointerField(this, 14, get_volume_for_uuid);
		return this;
	}
	/** C type : get_mount_for_uuid_callback* */
	@Field(15) 
	public Pointer<GVolumeMonitorClass.get_mount_for_uuid_callback > get_mount_for_uuid() {
		return this.io.getPointerField(this, 15);
	}
	/** C type : get_mount_for_uuid_callback* */
	@Field(15) 
	public GVolumeMonitorClass get_mount_for_uuid(Pointer<GVolumeMonitorClass.get_mount_for_uuid_callback > get_mount_for_uuid) {
		this.io.setPointerField(this, 15, get_mount_for_uuid);
		return this;
	}
	/**
	 * These arguments are unfortunately backwards by mistake (bug #520169). Deprecated in 2.20.<br>
	 * C type : adopt_orphan_mount_callback*
	 */
	@Field(16) 
	public Pointer<GVolumeMonitorClass.adopt_orphan_mount_callback > adopt_orphan_mount() {
		return this.io.getPointerField(this, 16);
	}
	/**
	 * These arguments are unfortunately backwards by mistake (bug #520169). Deprecated in 2.20.<br>
	 * C type : adopt_orphan_mount_callback*
	 */
	@Field(16) 
	public GVolumeMonitorClass adopt_orphan_mount(Pointer<GVolumeMonitorClass.adopt_orphan_mount_callback > adopt_orphan_mount) {
		this.io.setPointerField(this, 16, adopt_orphan_mount);
		return this;
	}
	/**
	 * signal added in 2.17<br>
	 * C type : drive_eject_button_callback*
	 */
	@Field(17) 
	public Pointer<GVolumeMonitorClass.drive_eject_button_callback > drive_eject_button() {
		return this.io.getPointerField(this, 17);
	}
	/**
	 * signal added in 2.17<br>
	 * C type : drive_eject_button_callback*
	 */
	@Field(17) 
	public GVolumeMonitorClass drive_eject_button(Pointer<GVolumeMonitorClass.drive_eject_button_callback > drive_eject_button) {
		this.io.setPointerField(this, 17, drive_eject_button);
		return this;
	}
	/**
	 * signal added in 2.21<br>
	 * C type : drive_stop_button_callback*
	 */
	@Field(18) 
	public Pointer<GVolumeMonitorClass.drive_stop_button_callback > drive_stop_button() {
		return this.io.getPointerField(this, 18);
	}
	/**
	 * signal added in 2.21<br>
	 * C type : drive_stop_button_callback*
	 */
	@Field(18) 
	public GVolumeMonitorClass drive_stop_button(Pointer<GVolumeMonitorClass.drive_stop_button_callback > drive_stop_button) {
		this.io.setPointerField(this, 18, drive_stop_button);
		return this;
	}
	/**
	 * Padding for future expansion<br>
	 * C type : _g_reserved1_callback*
	 */
	@Field(19) 
	public Pointer<gio.GVfsClass._g_reserved1_callback > _g_reserved1() {
		return this.io.getPointerField(this, 19);
	}
	/**
	 * Padding for future expansion<br>
	 * C type : _g_reserved1_callback*
	 */
	@Field(19) 
	public GVolumeMonitorClass _g_reserved1(Pointer<gio.GVfsClass._g_reserved1_callback > _g_reserved1) {
		this.io.setPointerField(this, 19, _g_reserved1);
		return this;
	}
	/** C type : _g_reserved2_callback* */
	@Field(20) 
	public Pointer<gio.GVfsClass._g_reserved2_callback > _g_reserved2() {
		return this.io.getPointerField(this, 20);
	}
	/** C type : _g_reserved2_callback* */
	@Field(20) 
	public GVolumeMonitorClass _g_reserved2(Pointer<gio.GVfsClass._g_reserved2_callback > _g_reserved2) {
		this.io.setPointerField(this, 20, _g_reserved2);
		return this;
	}
	/** C type : _g_reserved3_callback* */
	@Field(21) 
	public Pointer<gio.GVfsClass._g_reserved3_callback > _g_reserved3() {
		return this.io.getPointerField(this, 21);
	}
	/** C type : _g_reserved3_callback* */
	@Field(21) 
	public GVolumeMonitorClass _g_reserved3(Pointer<gio.GVfsClass._g_reserved3_callback > _g_reserved3) {
		this.io.setPointerField(this, 21, _g_reserved3);
		return this;
	}
	/** C type : _g_reserved4_callback* */
	@Field(22) 
	public Pointer<gio.GVfsClass._g_reserved4_callback > _g_reserved4() {
		return this.io.getPointerField(this, 22);
	}
	/** C type : _g_reserved4_callback* */
	@Field(22) 
	public GVolumeMonitorClass _g_reserved4(Pointer<gio.GVfsClass._g_reserved4_callback > _g_reserved4) {
		this.io.setPointerField(this, 22, _g_reserved4);
		return this;
	}
	/** C type : _g_reserved5_callback* */
	@Field(23) 
	public Pointer<gio.GVfsClass._g_reserved5_callback > _g_reserved5() {
		return this.io.getPointerField(this, 23);
	}
	/** C type : _g_reserved5_callback* */
	@Field(23) 
	public GVolumeMonitorClass _g_reserved5(Pointer<gio.GVfsClass._g_reserved5_callback > _g_reserved5) {
		this.io.setPointerField(this, 23, _g_reserved5);
		return this;
	}
	/** C type : _g_reserved6_callback* */
	@Field(24) 
	public Pointer<gio.GVfsClass._g_reserved6_callback > _g_reserved6() {
		return this.io.getPointerField(this, 24);
	}
	/** C type : _g_reserved6_callback* */
	@Field(24) 
	public GVolumeMonitorClass _g_reserved6(Pointer<gio.GVfsClass._g_reserved6_callback > _g_reserved6) {
		this.io.setPointerField(this, 24, _g_reserved6);
		return this;
	}
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:44</i> */
	public static abstract class volume_added_callback extends Callback<volume_added_callback > {
		public final void apply(Pointer<GVolumeMonitor > volume_monitor, Pointer<GVolume > volume) {
			apply(Pointer.getPeer(volume_monitor), Pointer.getPeer(volume));
		}
		public abstract void apply(@Ptr long volume_monitor, @Ptr long volume);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:45</i> */
	public static abstract class volume_removed_callback extends Callback<volume_removed_callback > {
		public final void apply(Pointer<GVolumeMonitor > volume_monitor, Pointer<GVolume > volume) {
			apply(Pointer.getPeer(volume_monitor), Pointer.getPeer(volume));
		}
		public abstract void apply(@Ptr long volume_monitor, @Ptr long volume);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:46</i> */
	public static abstract class volume_changed_callback extends Callback<volume_changed_callback > {
		public final void apply(Pointer<GVolumeMonitor > volume_monitor, Pointer<GVolume > volume) {
			apply(Pointer.getPeer(volume_monitor), Pointer.getPeer(volume));
		}
		public abstract void apply(@Ptr long volume_monitor, @Ptr long volume);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:47</i> */
	public static abstract class mount_added_callback extends Callback<mount_added_callback > {
		public final void apply(Pointer<GVolumeMonitor > volume_monitor, Pointer<GMount > mount) {
			apply(Pointer.getPeer(volume_monitor), Pointer.getPeer(mount));
		}
		public abstract void apply(@Ptr long volume_monitor, @Ptr long mount);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:48</i> */
	public static abstract class mount_removed_callback extends Callback<mount_removed_callback > {
		public final void apply(Pointer<GVolumeMonitor > volume_monitor, Pointer<GMount > mount) {
			apply(Pointer.getPeer(volume_monitor), Pointer.getPeer(mount));
		}
		public abstract void apply(@Ptr long volume_monitor, @Ptr long mount);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:49</i> */
	public static abstract class mount_pre_unmount_callback extends Callback<mount_pre_unmount_callback > {
		public final void apply(Pointer<GVolumeMonitor > volume_monitor, Pointer<GMount > mount) {
			apply(Pointer.getPeer(volume_monitor), Pointer.getPeer(mount));
		}
		public abstract void apply(@Ptr long volume_monitor, @Ptr long mount);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:50</i> */
	public static abstract class mount_changed_callback extends Callback<mount_changed_callback > {
		public final void apply(Pointer<GVolumeMonitor > volume_monitor, Pointer<GMount > mount) {
			apply(Pointer.getPeer(volume_monitor), Pointer.getPeer(mount));
		}
		public abstract void apply(@Ptr long volume_monitor, @Ptr long mount);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:51</i> */
	public static abstract class drive_connected_callback extends Callback<drive_connected_callback > {
		public final void apply(Pointer<GVolumeMonitor > volume_monitor, Pointer<GDrive > drive) {
			apply(Pointer.getPeer(volume_monitor), Pointer.getPeer(drive));
		}
		public abstract void apply(@Ptr long volume_monitor, @Ptr long drive);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:52</i> */
	public static abstract class drive_disconnected_callback extends Callback<drive_disconnected_callback > {
		public final void apply(Pointer<GVolumeMonitor > volume_monitor, Pointer<GDrive > drive) {
			apply(Pointer.getPeer(volume_monitor), Pointer.getPeer(drive));
		}
		public abstract void apply(@Ptr long volume_monitor, @Ptr long drive);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:53</i> */
	public static abstract class drive_changed_callback extends Callback<drive_changed_callback > {
		public final void apply(Pointer<GVolumeMonitor > volume_monitor, Pointer<GDrive > drive) {
			apply(Pointer.getPeer(volume_monitor), Pointer.getPeer(drive));
		}
		public abstract void apply(@Ptr long volume_monitor, @Ptr long drive);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:54</i> */
	public static abstract class gboolean_callback extends Callback<gboolean_callback > {
		public abstract void apply();
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:55</i> */
	public static abstract class get_connected_drives_callback extends Callback<get_connected_drives_callback > {
		public final Pointer apply(Pointer<GVolumeMonitor > volume_monitor) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(volume_monitor)));
		}
		@Ptr 
		public abstract long apply(@Ptr long volume_monitor);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:56</i> */
	public static abstract class get_volumes_callback extends Callback<get_volumes_callback > {
		public final Pointer apply(Pointer<GVolumeMonitor > volume_monitor) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(volume_monitor)));
		}
		@Ptr 
		public abstract long apply(@Ptr long volume_monitor);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:57</i> */
	public static abstract class get_mounts_callback extends Callback<get_mounts_callback > {
		public final Pointer apply(Pointer<GVolumeMonitor > volume_monitor) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(volume_monitor)));
		}
		@Ptr 
		public abstract long apply(@Ptr long volume_monitor);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:58</i> */
	public static abstract class get_volume_for_uuid_callback extends Callback<get_volume_for_uuid_callback > {
		public final Pointer<GVolume > apply(Pointer<GVolumeMonitor > volume_monitor, Pointer<Byte > charPtr1) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(volume_monitor), Pointer.getPeer(charPtr1)), GVolume.class);
		}
		@Ptr 
		public abstract long apply(@Ptr long volume_monitor, @Ptr long charPtr1);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:59</i> */
	public static abstract class get_mount_for_uuid_callback extends Callback<get_mount_for_uuid_callback > {
		public final Pointer<GMount > apply(Pointer<GVolumeMonitor > volume_monitor, Pointer<Byte > charPtr1) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(volume_monitor), Pointer.getPeer(charPtr1)), GMount.class);
		}
		@Ptr 
		public abstract long apply(@Ptr long volume_monitor, @Ptr long charPtr1);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:60</i> */
	public static abstract class adopt_orphan_mount_callback extends Callback<adopt_orphan_mount_callback > {
		public final Pointer<GVolume > apply(Pointer<GMount > mount, Pointer<GVolumeMonitor > volume_monitor) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(mount), Pointer.getPeer(volume_monitor)), GVolume.class);
		}
		@Ptr 
		public abstract long apply(@Ptr long mount, @Ptr long volume_monitor);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:61</i> */
	public static abstract class drive_eject_button_callback extends Callback<drive_eject_button_callback > {
		public final void apply(Pointer<GVolumeMonitor > volume_monitor, Pointer<GDrive > drive) {
			apply(Pointer.getPeer(volume_monitor), Pointer.getPeer(drive));
		}
		public abstract void apply(@Ptr long volume_monitor, @Ptr long drive);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:62</i> */
	public static abstract class drive_stop_button_callback extends Callback<drive_stop_button_callback > {
		public final void apply(Pointer<GVolumeMonitor > volume_monitor, Pointer<GDrive > drive) {
			apply(Pointer.getPeer(volume_monitor), Pointer.getPeer(drive));
		}
		public abstract void apply(@Ptr long volume_monitor, @Ptr long drive);
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:63</i> */
	public static abstract class _g_reserved1_callback extends Callback<_g_reserved1_callback > {
		public abstract void apply();
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:64</i> */
	public static abstract class _g_reserved2_callback extends Callback<_g_reserved2_callback > {
		public abstract void apply();
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:65</i> */
	public static abstract class _g_reserved3_callback extends Callback<_g_reserved3_callback > {
		public abstract void apply();
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:66</i> */
	public static abstract class _g_reserved4_callback extends Callback<_g_reserved4_callback > {
		public abstract void apply();
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:67</i> */
	public static abstract class _g_reserved5_callback extends Callback<_g_reserved5_callback > {
		public abstract void apply();
	};
	/** <i>native declaration : glib-2.0/gio/gvolumemonitor.h:68</i> */
	public static abstract class _g_reserved6_callback extends Callback<_g_reserved6_callback > {
		public abstract void apply();
	};
}
