package gio;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * GFileAttributeInfoList:<br>
 * @infos: an array of #GFileAttributeInfo<!-- -->s.<br>
 * @n_infos: the number of values in the array.<br>
 * * Acts as a lightweight registry for possible valid file attributes.<br>
 * The registry stores Key-Value pair formats as #GFileAttributeInfo<!-- -->s.<br>
 * <i>native declaration : glib-2.0/gio/gfileattribute.h:23</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GIO") 
public class GFileAttributeInfoList extends StructObject {
	static {
		BridJ.register();
	}
	/** C type : GFileAttributeInfo* */
	@Field(0) 
	public Pointer<GFileAttributeInfo > infos() {
		return this.io.getPointerField(this, 0);
	}
	/** C type : GFileAttributeInfo* */
	@Field(0) 
	public GFileAttributeInfoList infos(Pointer<GFileAttributeInfo > infos) {
		this.io.setPointerField(this, 0, infos);
		return this;
	}
	@Field(1) 
	public int n_infos() {
		return this.io.getIntField(this, 1);
	}
	@Field(1) 
	public GFileAttributeInfoList n_infos(int n_infos) {
		this.io.setIntField(this, 1, n_infos);
		return this;
	}
	public GFileAttributeInfoList() {
		super();
	}
	public GFileAttributeInfoList(Pointer pointer) {
		super(pointer);
	}
}
