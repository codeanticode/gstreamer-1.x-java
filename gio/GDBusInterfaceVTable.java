package gio;
import gio.GIOLibrary.GDBusInterfaceGetPropertyFunc;
import gio.GIOLibrary.GDBusInterfaceMethodCallFunc;
import gio.GIOLibrary.gpointer;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * GDBusInterfaceVTable:<br>
 * @method_call: Function for handling incoming method calls.<br>
 * @get_property: Function for getting a property.<br>
 * @set_property: Function for setting a property.<br>
 * * Virtual table for handling properties and method calls for a D-Bus<br>
 * interface.<br>
 * * Since 2.38, if you want to handle getting/setting D-Bus properties<br>
 * asynchronously, give %NULL as your get_property() or set_property()<br>
 * function.  The D-Bus call will be directed to your @method_call<br>
 * function, with the provided @interface_name set to<br>
 * <literal>"org.freedesktop.DBus.Properties"</literal>.<br>
 * * The usual checks on the validity of the calls is performed.  For<br>
 * <literal>'Get'</literal> calls, an error is automatically returned if<br>
 * the property does not exist or the permissions do not allow access.<br>
 * The same checks are performed for <literal>'Set'</literal> calls, and<br>
 * the provided value is also checked for being the correct type.<br>
 * * For both <literal>'Get'</literal> and <literal>'Set'</literal> calls,<br>
 * the #GDBusMethodInvocation passed to the method_call handler can be<br>
 * queried with g_dbus_method_invocation_get_property_info() to get a<br>
 * pointer to the #GDBusPropertyInfo of the property.<br>
 * * If you have readable properties specified in your interface info, you<br>
 * must ensure that you either provide a non-%NULL @get_property()<br>
 * function or provide implementations of both the<br>
 * <literal>'Get'</literal> and <literal>'GetAll'</literal> methods on<br>
 * the <literal>'org.freedesktop.DBus.Properties'</literal> interface in<br>
 * your @method_call function.  Note that the required return type of<br>
 * the <literal>'Get'</literal> call is <literal>(v)</literal>, not the<br>
 * type of the property.  <literal>'GetAll'</literal> expects a return<br>
 * value of type <literal>a{sv}</literal>.<br>
 * * If you have writable properties specified in your interface info, you<br>
 * must ensure that you either provide a non-%NULL @set_property()<br>
 * function or provide an implementation of the <literal>'Set'</literal><br>
 * call.  If implementing the call, you must return the value of type<br>
 * %G_VARIANT_TYPE_UNIT.<br>
 * * Since: 2.26<br>
 * <i>native declaration : glib-2.0/gio/gdbusconnection.h:167</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GIO") 
public abstract class GDBusInterfaceVTable extends StructObject {
	static {
		BridJ.register();
	}
	/** C type : GDBusInterfaceMethodCallFunc */
	@Field(0) 
	public Pointer<GDBusInterfaceMethodCallFunc > method_call() {
		return this.io.getPointerField(this, 0);
	}
	/** C type : GDBusInterfaceMethodCallFunc */
	@Field(0) 
	public GDBusInterfaceVTable method_call(Pointer<GDBusInterfaceMethodCallFunc > method_call) {
		this.io.setPointerField(this, 0, method_call);
		return this;
	}
	/** C type : GDBusInterfaceGetPropertyFunc */
	@Field(1) 
	public Pointer<GDBusInterfaceGetPropertyFunc > get_property() {
		return this.io.getPointerField(this, 1);
	}
	/** C type : GDBusInterfaceGetPropertyFunc */
	@Field(1) 
	public GDBusInterfaceVTable get_property(Pointer<GDBusInterfaceGetPropertyFunc > get_property) {
		this.io.setPointerField(this, 1, get_property);
		return this;
	}
	/** Conversion Error : GDBusInterfaceSetPropertyFunc (failed to convert type to Java (undefined type)) */
	/**
	 * Padding for future expansion - also remember to update<br>
	 * gdbusconnection.c:_g_dbus_interface_vtable_copy() when<br>
	 * changing this.<br>
	 * C type : gpointer[8]
	 */
	@Array({8}) 
	@Field(3) 
	public Pointer<gpointer > padding() {
		return this.io.getPointerField(this, 3);
	}
}
