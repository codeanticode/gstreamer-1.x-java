package gio;
import gio.GIOLibrary.GAsyncReadyCallback;
import gio.GIOLibrary.GAsyncResult;
import gio.GIOLibrary.gpointer;
import org.bridj.BridJ;
import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
/**
 * <i>native declaration : glib-2.0/gio/gsocketaddressenumerator.h:18</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GIO") 
public abstract class GSocketAddressEnumeratorClass extends StructObject {
	static {
		BridJ.register();
	}
	/** Conversion Error : GObjectClass (Unsupported type) */
	/** C type : next_callback* */
	@Field(1) 
	public Pointer<GSocketAddressEnumeratorClass.next_callback > next() {
		return this.io.getPointerField(this, 1);
	}
	/** C type : next_callback* */
	@Field(1) 
	public GSocketAddressEnumeratorClass next(Pointer<GSocketAddressEnumeratorClass.next_callback > next) {
		this.io.setPointerField(this, 1, next);
		return this;
	}
	/** C type : next_async_callback* */
	@Field(2) 
	public Pointer<GSocketAddressEnumeratorClass.next_async_callback > next_async() {
		return this.io.getPointerField(this, 2);
	}
	/** C type : next_async_callback* */
	@Field(2) 
	public GSocketAddressEnumeratorClass next_async(Pointer<GSocketAddressEnumeratorClass.next_async_callback > next_async) {
		this.io.setPointerField(this, 2, next_async);
		return this;
	}
	/** C type : next_finish_callback* */
	@Field(3) 
	public Pointer<GSocketAddressEnumeratorClass.next_finish_callback > next_finish() {
		return this.io.getPointerField(this, 3);
	}
	/** C type : next_finish_callback* */
	@Field(3) 
	public GSocketAddressEnumeratorClass next_finish(Pointer<GSocketAddressEnumeratorClass.next_finish_callback > next_finish) {
		this.io.setPointerField(this, 3, next_finish);
		return this;
	}
	/** <i>native declaration : glib-2.0/gio/gsocketaddressenumerator.h:15</i> */
	public static abstract class next_callback extends Callback<next_callback > {
		public final Pointer<GSocketAddress > apply(Pointer<GSocketAddressEnumerator > enumerator, Pointer<GCancellable > cancellable, Pointer<Pointer > error) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(enumerator), Pointer.getPeer(cancellable), Pointer.getPeer(error)), GSocketAddress.class);
		}
		@Ptr 
		public abstract long apply(@Ptr long enumerator, @Ptr long cancellable, @Ptr long error);
	};
	/** <i>native declaration : glib-2.0/gio/gsocketaddressenumerator.h:16</i> */
	public static abstract class next_async_callback extends Callback<next_async_callback > {
		public final void apply(Pointer<GSocketAddressEnumerator > enumerator, Pointer<GCancellable > cancellable, Pointer<GAsyncReadyCallback > callback, gpointer user_data) {
			apply(Pointer.getPeer(enumerator), Pointer.getPeer(cancellable), Pointer.getPeer(callback), user_data);
		}
		public abstract void apply(@Ptr long enumerator, @Ptr long cancellable, @Ptr long callback, gpointer user_data);
	};
	/** <i>native declaration : glib-2.0/gio/gsocketaddressenumerator.h:17</i> */
	public static abstract class next_finish_callback extends Callback<next_finish_callback > {
		public final Pointer<GSocketAddress > apply(Pointer<GSocketAddressEnumerator > enumerator, Pointer<GAsyncResult > result, Pointer<Pointer > error) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(enumerator), Pointer.getPeer(result), Pointer.getPeer(error)), GSocketAddress.class);
		}
		@Ptr 
		public abstract long apply(@Ptr long enumerator, @Ptr long result, @Ptr long error);
	};
}
