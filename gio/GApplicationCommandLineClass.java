package gio;
import gio.GIOLibrary.gpointer;
import org.bridj.BridJ;
import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
/**
 * <i>native declaration : glib-2.0/gio/gapplicationcommandline.h:18</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GIO") 
public abstract class GApplicationCommandLineClass extends StructObject {
	static {
		BridJ.register();
	}
	/** Conversion Error : GObjectClass (Unsupported type) */
	/** C type : print_literal_callback* */
	@Field(1) 
	public Pointer<GApplicationCommandLineClass.print_literal_callback > print_literal() {
		return this.io.getPointerField(this, 1);
	}
	/** C type : print_literal_callback* */
	@Field(1) 
	public GApplicationCommandLineClass print_literal(Pointer<GApplicationCommandLineClass.print_literal_callback > print_literal) {
		this.io.setPointerField(this, 1, print_literal);
		return this;
	}
	/** C type : printerr_literal_callback* */
	@Field(2) 
	public Pointer<GApplicationCommandLineClass.printerr_literal_callback > printerr_literal() {
		return this.io.getPointerField(this, 2);
	}
	/** C type : printerr_literal_callback* */
	@Field(2) 
	public GApplicationCommandLineClass printerr_literal(Pointer<GApplicationCommandLineClass.printerr_literal_callback > printerr_literal) {
		this.io.setPointerField(this, 2, printerr_literal);
		return this;
	}
	/** C type : get_stdin_callback* */
	@Field(3) 
	public Pointer<GApplicationCommandLineClass.get_stdin_callback > get_stdin() {
		return this.io.getPointerField(this, 3);
	}
	/** C type : get_stdin_callback* */
	@Field(3) 
	public GApplicationCommandLineClass get_stdin(Pointer<GApplicationCommandLineClass.get_stdin_callback > get_stdin) {
		this.io.setPointerField(this, 3, get_stdin);
		return this;
	}
	/** C type : gpointer[11] */
	@Array({11}) 
	@Field(4) 
	public Pointer<gpointer > padding() {
		return this.io.getPointerField(this, 4);
	}
	/** <i>native declaration : glib-2.0/gio/gapplicationcommandline.h:15</i> */
	public static abstract class print_literal_callback extends Callback<print_literal_callback > {
		public final void apply(Pointer<GApplicationCommandLine > cmdline, Pointer<Byte > message) {
			apply(Pointer.getPeer(cmdline), Pointer.getPeer(message));
		}
		public abstract void apply(@Ptr long cmdline, @Ptr long message);
	};
	/** <i>native declaration : glib-2.0/gio/gapplicationcommandline.h:16</i> */
	public static abstract class printerr_literal_callback extends Callback<printerr_literal_callback > {
		public final void apply(Pointer<GApplicationCommandLine > cmdline, Pointer<Byte > message) {
			apply(Pointer.getPeer(cmdline), Pointer.getPeer(message));
		}
		public abstract void apply(@Ptr long cmdline, @Ptr long message);
	};
	/** <i>native declaration : glib-2.0/gio/gapplicationcommandline.h:17</i> */
	public static abstract class get_stdin_callback extends Callback<get_stdin_callback > {
		public final Pointer<GInputStream > apply(Pointer<GApplicationCommandLine > cmdline) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(cmdline)), GInputStream.class);
		}
		@Ptr 
		public abstract long apply(@Ptr long cmdline);
	};
}
