package gio;
import gio.GIOLibrary.gpointer;
import org.bridj.BridJ;
import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.ann.CLong;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
import org.bridj.cpp.CPPObject;
/**
 * <i>native declaration : glib-2.0/gio/gsocketaddress.h:16</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GIO") 
public abstract class GSocketAddressClass extends CPPObject {
	static {
		BridJ.register();
	}
	/** Conversion Error : GObjectClass (Unsupported type) */
	/** <i>native declaration : glib-2.0/gio/gsocketaddress.h:13</i> */
	public static abstract class GSocketFamily_callback extends Callback<GSocketFamily_callback > {
		public final void apply(Pointer<GSocketAddress > address) {
			apply(Pointer.getPeer(address));
		}
		public abstract void apply(@Ptr long address);
	};
	/** <i>native declaration : glib-2.0/gio/gsocketaddress.h:14</i> */
	public static abstract class gssize_callback extends Callback<gssize_callback > {
		public final void apply(Pointer<GSocketAddress > address) {
			apply(Pointer.getPeer(address));
		}
		public abstract void apply(@Ptr long address);
	};
	/** <i>native declaration : glib-2.0/gio/gsocketaddress.h:15</i> */
	public static abstract class gboolean_callback extends Callback<gboolean_callback > {
		public final void apply(Pointer<GSocketAddress > address, gpointer dest, @CLong long destlen, Pointer<Pointer > error) {
			apply(Pointer.getPeer(address), dest, destlen, Pointer.getPeer(error));
		}
		public abstract void apply(@Ptr long address, gpointer dest, @CLong long destlen, @Ptr long error);
	};
}
