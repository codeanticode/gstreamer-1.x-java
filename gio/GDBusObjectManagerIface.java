package gio;
import gio.GIOLibrary.GDBusInterface;
import gio.GIOLibrary.GDBusObject;
import gio.GIOLibrary.GDBusObjectManager;
import org.bridj.BridJ;
import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
/**
 * GDBusObjectManagerIface:<br>
 * @parent_iface: The parent interface.<br>
 * @get_object_path: Virtual function for g_dbus_object_manager_get_object_path().<br>
 * @get_objects: Virtual function for g_dbus_object_manager_get_objects().<br>
 * @get_object: Virtual function for g_dbus_object_manager_get_object().<br>
 * @get_interface: Virtual function for g_dbus_object_manager_get_interface().<br>
 * @object_added: Signal handler for the #GDBusObjectManager::object-added signal.<br>
 * @object_removed: Signal handler for the #GDBusObjectManager::object-removed signal.<br>
 * @interface_added: Signal handler for the #GDBusObjectManager::interface-added signal.<br>
 * @interface_removed: Signal handler for the #GDBusObjectManager::interface-removed signal.<br>
 * * Base type for D-Bus object managers.<br>
 * * Since: 2.30<br>
 * <i>native declaration : glib-2.0/gio/gdbusobjectmanager.h:36</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GIO") 
public abstract class GDBusObjectManagerIface extends StructObject {
	static {
		BridJ.register();
	}
	/** Conversion Error : GTypeInterface (Unsupported type) */
	/**
	 * Virtual Functions<br>
	 * C type : get_object_path_callback*
	 */
	@Field(1) 
	public Pointer<GDBusObjectManagerIface.get_object_path_callback > get_object_path() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * Virtual Functions<br>
	 * C type : get_object_path_callback*
	 */
	@Field(1) 
	public GDBusObjectManagerIface get_object_path(Pointer<GDBusObjectManagerIface.get_object_path_callback > get_object_path) {
		this.io.setPointerField(this, 1, get_object_path);
		return this;
	}
	/** C type : get_objects_callback* */
	@Field(2) 
	public Pointer<GDBusObjectManagerIface.get_objects_callback > get_objects() {
		return this.io.getPointerField(this, 2);
	}
	/** C type : get_objects_callback* */
	@Field(2) 
	public GDBusObjectManagerIface get_objects(Pointer<GDBusObjectManagerIface.get_objects_callback > get_objects) {
		this.io.setPointerField(this, 2, get_objects);
		return this;
	}
	/** C type : get_object_callback* */
	@Field(3) 
	public Pointer<GDBusObjectManagerIface.get_object_callback > get_object() {
		return this.io.getPointerField(this, 3);
	}
	/** C type : get_object_callback* */
	@Field(3) 
	public GDBusObjectManagerIface get_object(Pointer<GDBusObjectManagerIface.get_object_callback > get_object) {
		this.io.setPointerField(this, 3, get_object);
		return this;
	}
	/** C type : get_interface_callback* */
	@Field(4) 
	public Pointer<GDBusObjectManagerIface.get_interface_callback > get_interface() {
		return this.io.getPointerField(this, 4);
	}
	/** C type : get_interface_callback* */
	@Field(4) 
	public GDBusObjectManagerIface get_interface(Pointer<GDBusObjectManagerIface.get_interface_callback > get_interface) {
		this.io.setPointerField(this, 4, get_interface);
		return this;
	}
	/**
	 * Signals<br>
	 * C type : object_added_callback*
	 */
	@Field(5) 
	public Pointer<GDBusObjectManagerIface.object_added_callback > object_added() {
		return this.io.getPointerField(this, 5);
	}
	/**
	 * Signals<br>
	 * C type : object_added_callback*
	 */
	@Field(5) 
	public GDBusObjectManagerIface object_added(Pointer<GDBusObjectManagerIface.object_added_callback > object_added) {
		this.io.setPointerField(this, 5, object_added);
		return this;
	}
	/** C type : object_removed_callback* */
	@Field(6) 
	public Pointer<GDBusObjectManagerIface.object_removed_callback > object_removed() {
		return this.io.getPointerField(this, 6);
	}
	/** C type : object_removed_callback* */
	@Field(6) 
	public GDBusObjectManagerIface object_removed(Pointer<GDBusObjectManagerIface.object_removed_callback > object_removed) {
		this.io.setPointerField(this, 6, object_removed);
		return this;
	}
	/** C type : interface_added_callback* */
	@Field(7) 
	public Pointer<GDBusObjectManagerIface.interface_added_callback > interface_added() {
		return this.io.getPointerField(this, 7);
	}
	/** C type : interface_added_callback* */
	@Field(7) 
	public GDBusObjectManagerIface interface_added(Pointer<GDBusObjectManagerIface.interface_added_callback > interface_added) {
		this.io.setPointerField(this, 7, interface_added);
		return this;
	}
	/** C type : interface_removed_callback* */
	@Field(8) 
	public Pointer<GDBusObjectManagerIface.interface_removed_callback > interface_removed() {
		return this.io.getPointerField(this, 8);
	}
	/** C type : interface_removed_callback* */
	@Field(8) 
	public GDBusObjectManagerIface interface_removed(Pointer<GDBusObjectManagerIface.interface_removed_callback > interface_removed) {
		this.io.setPointerField(this, 8, interface_removed);
		return this;
	}
	/** <i>native declaration : glib-2.0/gio/gdbusobjectmanager.h:28</i> */
	public static abstract class get_object_path_callback extends Callback<get_object_path_callback > {
		public final Pointer<Byte > apply(Pointer<GDBusObjectManager > manager) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(manager)), Byte.class);
		}
		@Ptr 
		public abstract long apply(@Ptr long manager);
	};
	/** <i>native declaration : glib-2.0/gio/gdbusobjectmanager.h:29</i> */
	public static abstract class get_objects_callback extends Callback<get_objects_callback > {
		public final Pointer apply(Pointer<GDBusObjectManager > manager) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(manager)));
		}
		@Ptr 
		public abstract long apply(@Ptr long manager);
	};
	/** <i>native declaration : glib-2.0/gio/gdbusobjectmanager.h:30</i> */
	public static abstract class get_object_callback extends Callback<get_object_callback > {
		public final Pointer<GDBusObject > apply(Pointer<GDBusObjectManager > manager, Pointer<Byte > object_path) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(manager), Pointer.getPeer(object_path)), GDBusObject.class);
		}
		@Ptr 
		public abstract long apply(@Ptr long manager, @Ptr long object_path);
	};
	/** <i>native declaration : glib-2.0/gio/gdbusobjectmanager.h:31</i> */
	public static abstract class get_interface_callback extends Callback<get_interface_callback > {
		public final Pointer<GDBusInterface > apply(Pointer<GDBusObjectManager > manager, Pointer<Byte > object_path, Pointer<Byte > interface_name) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(manager), Pointer.getPeer(object_path), Pointer.getPeer(interface_name)), GDBusInterface.class);
		}
		@Ptr 
		public abstract long apply(@Ptr long manager, @Ptr long object_path, @Ptr long interface_name);
	};
	/** <i>native declaration : glib-2.0/gio/gdbusobjectmanager.h:32</i> */
	public static abstract class object_added_callback extends Callback<object_added_callback > {
		public final void apply(Pointer<GDBusObjectManager > manager, Pointer<GDBusObject > object) {
			apply(Pointer.getPeer(manager), Pointer.getPeer(object));
		}
		public abstract void apply(@Ptr long manager, @Ptr long object);
	};
	/** <i>native declaration : glib-2.0/gio/gdbusobjectmanager.h:33</i> */
	public static abstract class object_removed_callback extends Callback<object_removed_callback > {
		public final void apply(Pointer<GDBusObjectManager > manager, Pointer<GDBusObject > object) {
			apply(Pointer.getPeer(manager), Pointer.getPeer(object));
		}
		public abstract void apply(@Ptr long manager, @Ptr long object);
	};
	/** <i>native declaration : glib-2.0/gio/gdbusobjectmanager.h:34</i> */
	public static abstract class interface_added_callback extends Callback<interface_added_callback > {
		public final void apply(Pointer<GDBusObjectManager > manager, Pointer<GDBusObject > object, Pointer<GDBusInterface > interface_) {
			apply(Pointer.getPeer(manager), Pointer.getPeer(object), Pointer.getPeer(interface_));
		}
		public abstract void apply(@Ptr long manager, @Ptr long object, @Ptr long interface_);
	};
	/** <i>native declaration : glib-2.0/gio/gdbusobjectmanager.h:35</i> */
	public static abstract class interface_removed_callback extends Callback<interface_removed_callback > {
		public final void apply(Pointer<GDBusObjectManager > manager, Pointer<GDBusObject > object, Pointer<GDBusInterface > interface_) {
			apply(Pointer.getPeer(manager), Pointer.getPeer(object), Pointer.getPeer(interface_));
		}
		public abstract void apply(@Ptr long manager, @Ptr long object, @Ptr long interface_);
	};
}
