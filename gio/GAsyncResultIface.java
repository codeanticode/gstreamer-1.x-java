package gio;
import gio.GIOLibrary.GAsyncResult;
import gio.GIOLibrary.gpointer;
import org.bridj.BridJ;
import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
import org.bridj.cpp.CPPObject;
/**
 * GAsyncResultIface:<br>
 * @g_iface: The parent interface.<br>
 * @get_user_data: Gets the user data passed to the callback.<br>
 * @get_source_object: Gets the source object that issued the asynchronous operation.<br>
 * @is_tagged: Checks if a result is tagged with a particular source.<br>
 * * Interface definition for #GAsyncResult.<br>
 * <i>native declaration : glib-2.0/gio/gasyncresult.h:25</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GIO") 
public abstract class GAsyncResultIface extends CPPObject {
	static {
		BridJ.register();
	}
	/** Conversion Error : GTypeInterface (Unsupported type) */
	/** C type : get_source_object_callback* */
	@Field(1) 
	public Pointer<GAsyncResultIface.get_source_object_callback > get_source_object() {
		return this.io.getPointerField(this, 1);
	}
	/** C type : get_source_object_callback* */
	@Field(1) 
	public GAsyncResultIface get_source_object(Pointer<GAsyncResultIface.get_source_object_callback > get_source_object) {
		this.io.setPointerField(this, 1, get_source_object);
		return this;
	}
	/** <i>native declaration : glib-2.0/gio/gasyncresult.h:22</i> */
	public static abstract class gpointer_callback extends Callback<gpointer_callback > {
		public final void apply(Pointer<GAsyncResult > res) {
			apply(Pointer.getPeer(res));
		}
		public abstract void apply(@Ptr long res);
	};
	/** <i>native declaration : glib-2.0/gio/gasyncresult.h:23</i> */
	public static abstract class get_source_object_callback extends Callback<get_source_object_callback > {
		public final Pointer apply(Pointer<GAsyncResult > res) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(res)));
		}
		@Ptr 
		public abstract long apply(@Ptr long res);
	};
	/** <i>native declaration : glib-2.0/gio/gasyncresult.h:24</i> */
	public static abstract class gboolean_callback extends Callback<gboolean_callback > {
		public final void apply(Pointer<GAsyncResult > res, gpointer source_tag) {
			apply(Pointer.getPeer(res), source_tag);
		}
		public abstract void apply(@Ptr long res, gpointer source_tag);
	};
}
