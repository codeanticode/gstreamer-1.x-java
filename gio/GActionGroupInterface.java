package gio;
import gio.GIOLibrary.GActionGroup;
import gio.GIOLibrary.GVariant;
import gio.GIOLibrary.GVariantType;
import gio.GIOLibrary.gboolean;
import org.bridj.BridJ;
import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
import org.bridj.cpp.CPPObject;
import org.bridj.util.DefaultParameterizedType;
/**
 * <i>native declaration : glib-2.0/gio/gactiongroup.h:39</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GIO") 
public abstract class GActionGroupInterface extends CPPObject {
	static {
		BridJ.register();
	}
	/** Conversion Error : GTypeInterface (Unsupported type) */
	/** C type : list_actions_callback* */
	@Field(1) 
	public Pointer<GActionGroupInterface.list_actions_callback > list_actions() {
		return this.io.getPointerField(this, 1);
	}
	/** C type : list_actions_callback* */
	@Field(1) 
	public GActionGroupInterface list_actions(Pointer<GActionGroupInterface.list_actions_callback > list_actions) {
		this.io.setPointerField(this, 1, list_actions);
		return this;
	}
	/** C type : get_action_parameter_type_callback* */
	@Field(2) 
	public Pointer<GActionGroupInterface.get_action_parameter_type_callback > get_action_parameter_type() {
		return this.io.getPointerField(this, 2);
	}
	/** C type : get_action_parameter_type_callback* */
	@Field(2) 
	public GActionGroupInterface get_action_parameter_type(Pointer<GActionGroupInterface.get_action_parameter_type_callback > get_action_parameter_type) {
		this.io.setPointerField(this, 2, get_action_parameter_type);
		return this;
	}
	/** C type : get_action_state_type_callback* */
	@Field(3) 
	public Pointer<GActionGroupInterface.get_action_state_type_callback > get_action_state_type() {
		return this.io.getPointerField(this, 3);
	}
	/** C type : get_action_state_type_callback* */
	@Field(3) 
	public GActionGroupInterface get_action_state_type(Pointer<GActionGroupInterface.get_action_state_type_callback > get_action_state_type) {
		this.io.setPointerField(this, 3, get_action_state_type);
		return this;
	}
	/** C type : get_action_state_hint_callback* */
	@Field(4) 
	public Pointer<GActionGroupInterface.get_action_state_hint_callback > get_action_state_hint() {
		return this.io.getPointerField(this, 4);
	}
	/** C type : get_action_state_hint_callback* */
	@Field(4) 
	public GActionGroupInterface get_action_state_hint(Pointer<GActionGroupInterface.get_action_state_hint_callback > get_action_state_hint) {
		this.io.setPointerField(this, 4, get_action_state_hint);
		return this;
	}
	/** C type : get_action_state_callback* */
	@Field(5) 
	public Pointer<GActionGroupInterface.get_action_state_callback > get_action_state() {
		return this.io.getPointerField(this, 5);
	}
	/** C type : get_action_state_callback* */
	@Field(5) 
	public GActionGroupInterface get_action_state(Pointer<GActionGroupInterface.get_action_state_callback > get_action_state) {
		this.io.setPointerField(this, 5, get_action_state);
		return this;
	}
	/** C type : change_action_state_callback* */
	@Field(6) 
	public Pointer<GActionGroupInterface.change_action_state_callback > change_action_state() {
		return this.io.getPointerField(this, 6);
	}
	/** C type : change_action_state_callback* */
	@Field(6) 
	public GActionGroupInterface change_action_state(Pointer<GActionGroupInterface.change_action_state_callback > change_action_state) {
		this.io.setPointerField(this, 6, change_action_state);
		return this;
	}
	/** C type : activate_action_callback* */
	@Field(7) 
	public Pointer<GActionGroupInterface.activate_action_callback > activate_action() {
		return this.io.getPointerField(this, 7);
	}
	/** C type : activate_action_callback* */
	@Field(7) 
	public GActionGroupInterface activate_action(Pointer<GActionGroupInterface.activate_action_callback > activate_action) {
		this.io.setPointerField(this, 7, activate_action);
		return this;
	}
	/**
	 * signals<br>
	 * C type : action_added_callback*
	 */
	@Field(8) 
	public Pointer<GActionGroupInterface.action_added_callback > action_added() {
		return this.io.getPointerField(this, 8);
	}
	/**
	 * signals<br>
	 * C type : action_added_callback*
	 */
	@Field(8) 
	public GActionGroupInterface action_added(Pointer<GActionGroupInterface.action_added_callback > action_added) {
		this.io.setPointerField(this, 8, action_added);
		return this;
	}
	/** C type : action_removed_callback* */
	@Field(9) 
	public Pointer<GActionGroupInterface.action_removed_callback > action_removed() {
		return this.io.getPointerField(this, 9);
	}
	/** C type : action_removed_callback* */
	@Field(9) 
	public GActionGroupInterface action_removed(Pointer<GActionGroupInterface.action_removed_callback > action_removed) {
		this.io.setPointerField(this, 9, action_removed);
		return this;
	}
	/** C type : action_enabled_changed_callback* */
	@Field(10) 
	public Pointer<GActionGroupInterface.action_enabled_changed_callback > action_enabled_changed() {
		return this.io.getPointerField(this, 10);
	}
	/** C type : action_enabled_changed_callback* */
	@Field(10) 
	public GActionGroupInterface action_enabled_changed(Pointer<GActionGroupInterface.action_enabled_changed_callback > action_enabled_changed) {
		this.io.setPointerField(this, 10, action_enabled_changed);
		return this;
	}
	/** C type : action_state_changed_callback* */
	@Field(11) 
	public Pointer<GActionGroupInterface.action_state_changed_callback > action_state_changed() {
		return this.io.getPointerField(this, 11);
	}
	/** C type : action_state_changed_callback* */
	@Field(11) 
	public GActionGroupInterface action_state_changed(Pointer<GActionGroupInterface.action_state_changed_callback > action_state_changed) {
		this.io.setPointerField(this, 11, action_state_changed);
		return this;
	}
	/**
	 * more virtual functions<br>
	 * C type : query_action_callback*
	 */
	@Field(12) 
	public Pointer<GActionGroupInterface.query_action_callback > query_action() {
		return this.io.getPointerField(this, 12);
	}
	/**
	 * more virtual functions<br>
	 * C type : query_action_callback*
	 */
	@Field(12) 
	public GActionGroupInterface query_action(Pointer<GActionGroupInterface.query_action_callback > query_action) {
		this.io.setPointerField(this, 12, query_action);
		return this;
	}
	/** <i>native declaration : glib-2.0/gio/gactiongroup.h:25</i> */
	public static abstract class gboolean_callback extends Callback<gboolean_callback > {
		public final void apply(Pointer<GActionGroup > action_group, Pointer<Byte > action_name) {
			apply(Pointer.getPeer(action_group), Pointer.getPeer(action_name));
		}
		public abstract void apply(@Ptr long action_group, @Ptr long action_name);
	};
	/** <i>native declaration : glib-2.0/gio/gactiongroup.h:26</i> */
	public static abstract class list_actions_callback extends Callback<list_actions_callback > {
		public final Pointer<Pointer<Byte > > apply(Pointer<GActionGroup > action_group) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(action_group)), DefaultParameterizedType.paramType(Pointer.class, Byte.class));
		}
		@Ptr 
		public abstract long apply(@Ptr long action_group);
	};
	/** <i>native declaration : glib-2.0/gio/gactiongroup.h:27</i> */
	public static abstract class gboolean_callback2 extends Callback<gboolean_callback2 > {
		public final void apply(Pointer<GActionGroup > action_group, Pointer<Byte > action_name) {
			apply(Pointer.getPeer(action_group), Pointer.getPeer(action_name));
		}
		public abstract void apply(@Ptr long action_group, @Ptr long action_name);
	};
	/** <i>native declaration : glib-2.0/gio/gactiongroup.h:28</i> */
	public static abstract class get_action_parameter_type_callback extends Callback<get_action_parameter_type_callback > {
		public final Pointer<GVariantType > apply(Pointer<GActionGroup > action_group, Pointer<Byte > action_name) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(action_group), Pointer.getPeer(action_name)), GVariantType.class);
		}
		@Ptr 
		public abstract long apply(@Ptr long action_group, @Ptr long action_name);
	};
	/** <i>native declaration : glib-2.0/gio/gactiongroup.h:29</i> */
	public static abstract class get_action_state_type_callback extends Callback<get_action_state_type_callback > {
		public final Pointer<GVariantType > apply(Pointer<GActionGroup > action_group, Pointer<Byte > action_name) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(action_group), Pointer.getPeer(action_name)), GVariantType.class);
		}
		@Ptr 
		public abstract long apply(@Ptr long action_group, @Ptr long action_name);
	};
	/** <i>native declaration : glib-2.0/gio/gactiongroup.h:30</i> */
	public static abstract class get_action_state_hint_callback extends Callback<get_action_state_hint_callback > {
		public final Pointer<GVariant > apply(Pointer<GActionGroup > action_group, Pointer<Byte > action_name) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(action_group), Pointer.getPeer(action_name)), GVariant.class);
		}
		@Ptr 
		public abstract long apply(@Ptr long action_group, @Ptr long action_name);
	};
	/** <i>native declaration : glib-2.0/gio/gactiongroup.h:31</i> */
	public static abstract class get_action_state_callback extends Callback<get_action_state_callback > {
		public final Pointer<GVariant > apply(Pointer<GActionGroup > action_group, Pointer<Byte > action_name) {
			return Pointer.pointerToAddress(apply(Pointer.getPeer(action_group), Pointer.getPeer(action_name)), GVariant.class);
		}
		@Ptr 
		public abstract long apply(@Ptr long action_group, @Ptr long action_name);
	};
	/** <i>native declaration : glib-2.0/gio/gactiongroup.h:32</i> */
	public static abstract class change_action_state_callback extends Callback<change_action_state_callback > {
		public final void apply(Pointer<GActionGroup > action_group, Pointer<Byte > action_name, Pointer<GVariant > value) {
			apply(Pointer.getPeer(action_group), Pointer.getPeer(action_name), Pointer.getPeer(value));
		}
		public abstract void apply(@Ptr long action_group, @Ptr long action_name, @Ptr long value);
	};
	/** <i>native declaration : glib-2.0/gio/gactiongroup.h:33</i> */
	public static abstract class activate_action_callback extends Callback<activate_action_callback > {
		public final void apply(Pointer<GActionGroup > action_group, Pointer<Byte > action_name, Pointer<GVariant > parameter) {
			apply(Pointer.getPeer(action_group), Pointer.getPeer(action_name), Pointer.getPeer(parameter));
		}
		public abstract void apply(@Ptr long action_group, @Ptr long action_name, @Ptr long parameter);
	};
	/** <i>native declaration : glib-2.0/gio/gactiongroup.h:34</i> */
	public static abstract class action_added_callback extends Callback<action_added_callback > {
		public final void apply(Pointer<GActionGroup > action_group, Pointer<Byte > action_name) {
			apply(Pointer.getPeer(action_group), Pointer.getPeer(action_name));
		}
		public abstract void apply(@Ptr long action_group, @Ptr long action_name);
	};
	/** <i>native declaration : glib-2.0/gio/gactiongroup.h:35</i> */
	public static abstract class action_removed_callback extends Callback<action_removed_callback > {
		public final void apply(Pointer<GActionGroup > action_group, Pointer<Byte > action_name) {
			apply(Pointer.getPeer(action_group), Pointer.getPeer(action_name));
		}
		public abstract void apply(@Ptr long action_group, @Ptr long action_name);
	};
	/** <i>native declaration : glib-2.0/gio/gactiongroup.h:36</i> */
	public static abstract class action_enabled_changed_callback extends Callback<action_enabled_changed_callback > {
		public final void apply(Pointer<GActionGroup > action_group, Pointer<Byte > action_name, gboolean enabled) {
			apply(Pointer.getPeer(action_group), Pointer.getPeer(action_name), enabled);
		}
		public abstract void apply(@Ptr long action_group, @Ptr long action_name, gboolean enabled);
	};
	/** <i>native declaration : glib-2.0/gio/gactiongroup.h:37</i> */
	public static abstract class action_state_changed_callback extends Callback<action_state_changed_callback > {
		public final void apply(Pointer<GActionGroup > action_group, Pointer<Byte > action_name, Pointer<GVariant > state) {
			apply(Pointer.getPeer(action_group), Pointer.getPeer(action_name), Pointer.getPeer(state));
		}
		public abstract void apply(@Ptr long action_group, @Ptr long action_name, @Ptr long state);
	};
	/** <i>native declaration : glib-2.0/gio/gactiongroup.h:38</i> */
	public static abstract class query_action_callback extends Callback<query_action_callback > {
		public final gboolean apply(Pointer<GActionGroup > action_group, Pointer<Byte > action_name, Pointer<gboolean > enabled, Pointer<Pointer<GVariantType > > parameter_type, Pointer<Pointer<GVariantType > > state_type, Pointer<Pointer<GVariant > > state_hint, Pointer<Pointer<GVariant > > state) {
			return apply(Pointer.getPeer(action_group), Pointer.getPeer(action_name), Pointer.getPeer(enabled), Pointer.getPeer(parameter_type), Pointer.getPeer(state_type), Pointer.getPeer(state_hint), Pointer.getPeer(state));
		}
		public abstract gboolean apply(@Ptr long action_group, @Ptr long action_name, @Ptr long enabled, @Ptr long parameter_type, @Ptr long state_type, @Ptr long state_hint, @Ptr long state);
	};
}
