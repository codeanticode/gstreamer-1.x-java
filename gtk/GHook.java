package gtk;
import gtk.GtkLibrary.GDestroyNotify;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.CLong;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : glib-2.0/glib/ghook.h:35</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("Gtk") 
public abstract class GHook extends StructObject {
	static {
		BridJ.register();
	}
	/** Conversion Error : gpointer (Unsupported type) */
	/** C type : GHook* */
	@Field(1) 
	public Pointer<GHook > next() {
		return this.io.getPointerField(this, 1);
	}
	/** C type : GHook* */
	@Field(1) 
	public GHook next(Pointer<GHook > next) {
		this.io.setPointerField(this, 1, next);
		return this;
	}
	/** C type : GHook* */
	@Field(2) 
	public Pointer<GHook > prev() {
		return this.io.getPointerField(this, 2);
	}
	/** C type : GHook* */
	@Field(2) 
	public GHook prev(Pointer<GHook > prev) {
		this.io.setPointerField(this, 2, prev);
		return this;
	}
	/** C type : guint */
	@Field(3) 
	public int ref_count() {
		return this.io.getIntField(this, 3);
	}
	/** C type : guint */
	@Field(3) 
	public GHook ref_count(int ref_count) {
		this.io.setIntField(this, 3, ref_count);
		return this;
	}
	/** C type : gulong */
	@CLong 
	@Field(4) 
	public long hook_id() {
		return this.io.getCLongField(this, 4);
	}
	/** C type : gulong */
	@CLong 
	@Field(4) 
	public GHook hook_id(long hook_id) {
		this.io.setCLongField(this, 4, hook_id);
		return this;
	}
	/** C type : guint */
	@Field(5) 
	public int flags() {
		return this.io.getIntField(this, 5);
	}
	/** C type : guint */
	@Field(5) 
	public GHook flags(int flags) {
		this.io.setIntField(this, 5, flags);
		return this;
	}
	/** Conversion Error : gpointer (Unsupported type) */
	/** C type : GDestroyNotify */
	@Field(7) 
	public Pointer<GDestroyNotify > destroy() {
		return this.io.getPointerField(this, 7);
	}
	/** C type : GDestroyNotify */
	@Field(7) 
	public GHook destroy(Pointer<GDestroyNotify > destroy) {
		this.io.setPointerField(this, 7, destroy);
		return this;
	}
}
