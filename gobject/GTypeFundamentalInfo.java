package gobject;
import gobject.GObjectLibrary.GTypeFundamentalFlags;
import org.bridj.BridJ;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * GTypeFundamentalInfo:<br>
 * @type_flags: #GTypeFundamentalFlags describing the characteristics of the fundamental type<br>
 * <br>
 * A structure that provides information to the type system which is<br>
 * used specifically for managing fundamental types.<br>
 * <i>native declaration : glib-2.0/gobject/gtype.h:425</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GObject") 
public class GTypeFundamentalInfo extends StructObject {
	static {
		BridJ.register();
	}
	/** C type : GTypeFundamentalFlags */
	@Field(0) 
	public IntValuedEnum<GTypeFundamentalFlags > type_flags() {
		return this.io.getEnumField(this, 0);
	}
	/** C type : GTypeFundamentalFlags */
	@Field(0) 
	public GTypeFundamentalInfo type_flags(IntValuedEnum<GTypeFundamentalFlags > type_flags) {
		this.io.setEnumField(this, 0, type_flags);
		return this;
	}
	public GTypeFundamentalInfo() {
		super();
	}
	public GTypeFundamentalInfo(Pointer pointer) {
		super(pointer);
	}
}
