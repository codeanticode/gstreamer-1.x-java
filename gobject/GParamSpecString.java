package gobject;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Bits;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * GParamSpecString:<br>
 * @parent_instance: private #GParamSpec portion<br>
 * @default_value: default value for the property specified<br>
 * @cset_first: a string containing the allowed values for the first byte<br>
 * @cset_nth: a string containing the allowed values for the subsequent bytes<br>
 * @substitutor: the replacement byte for bytes which don't match @cset_first or @cset_nth.<br>
 * @null_fold_if_empty: replace empty string by %NULL<br>
 * @ensure_non_null: replace %NULL strings by an empty string<br>
 * <br>
 * A #GParamSpec derived structure that contains the meta data for string<br>
 * properties.<br>
 * <i>native declaration : glib-2.0/gobject/gparamspecs.h:252</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GObject") 
public class GParamSpecString extends StructObject {
	static {
		BridJ.register();
	}
	/** C type : GParamSpec */
	@Field(0) 
	public GParamSpec parent_instance() {
		return this.io.getNativeObjectField(this, 0);
	}
	/** C type : GParamSpec */
	@Field(0) 
	public GParamSpecString parent_instance(GParamSpec parent_instance) {
		this.io.setNativeObjectField(this, 0, parent_instance);
		return this;
	}
	/** C type : gchar* */
	@Field(1) 
	public Pointer<Byte > default_value() {
		return this.io.getPointerField(this, 1);
	}
	/** C type : gchar* */
	@Field(1) 
	public GParamSpecString default_value(Pointer<Byte > default_value) {
		this.io.setPointerField(this, 1, default_value);
		return this;
	}
	/** C type : gchar* */
	@Field(2) 
	public Pointer<Byte > cset_first() {
		return this.io.getPointerField(this, 2);
	}
	/** C type : gchar* */
	@Field(2) 
	public GParamSpecString cset_first(Pointer<Byte > cset_first) {
		this.io.setPointerField(this, 2, cset_first);
		return this;
	}
	/** C type : gchar* */
	@Field(3) 
	public Pointer<Byte > cset_nth() {
		return this.io.getPointerField(this, 3);
	}
	/** C type : gchar* */
	@Field(3) 
	public GParamSpecString cset_nth(Pointer<Byte > cset_nth) {
		this.io.setPointerField(this, 3, cset_nth);
		return this;
	}
	/** C type : gchar */
	@Field(4) 
	public byte substitutor() {
		return this.io.getByteField(this, 4);
	}
	/** C type : gchar */
	@Field(4) 
	public GParamSpecString substitutor(byte substitutor) {
		this.io.setByteField(this, 4, substitutor);
		return this;
	}
	/** C type : guint */
	@Field(5) 
	@Bits(1) 
	public int null_fold_if_empty() {
		return this.io.getIntField(this, 5);
	}
	/** C type : guint */
	@Field(5) 
	@Bits(1) 
	public GParamSpecString null_fold_if_empty(int null_fold_if_empty) {
		this.io.setIntField(this, 5, null_fold_if_empty);
		return this;
	}
	/** C type : guint */
	@Field(6) 
	@Bits(1) 
	public int ensure_non_null() {
		return this.io.getIntField(this, 6);
	}
	/** C type : guint */
	@Field(6) 
	@Bits(1) 
	public GParamSpecString ensure_non_null(int ensure_non_null) {
		this.io.setIntField(this, 6, ensure_non_null);
		return this;
	}
	public GParamSpecString() {
		super();
	}
	public GParamSpecString(Pointer pointer) {
		super(pointer);
	}
}
