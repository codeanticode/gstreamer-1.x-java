package gobject;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.CLong;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * GTypeQuery:<br>
 * @type: the #GType value of the type.<br>
 * @type_name: the name of the type.<br>
 * @class_size: the size of the class structure.<br>
 * @instance_size: the size of the instance structure.<br>
 * <br>
 * A structure holding information for a specific type. It is<br>
 * filled in by the g_type_query() function.<br>
 * <i>native declaration : glib-2.0/gobject/gtype.h:56</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GObject") 
public class GTypeQuery extends StructObject {
	static {
		BridJ.register();
	}
	/** C type : GType */
	@CLong 
	@Field(0) 
	public long type() {
		return this.io.getCLongField(this, 0);
	}
	/** C type : GType */
	@CLong 
	@Field(0) 
	public GTypeQuery type(long type) {
		this.io.setCLongField(this, 0, type);
		return this;
	}
	/** C type : const gchar* */
	@Field(1) 
	public Pointer<Byte > type_name() {
		return this.io.getPointerField(this, 1);
	}
	/** C type : const gchar* */
	@Field(1) 
	public GTypeQuery type_name(Pointer<Byte > type_name) {
		this.io.setPointerField(this, 1, type_name);
		return this;
	}
	/** C type : guint */
	@Field(2) 
	public int class_size() {
		return this.io.getIntField(this, 2);
	}
	/** C type : guint */
	@Field(2) 
	public GTypeQuery class_size(int class_size) {
		this.io.setIntField(this, 2, class_size);
		return this;
	}
	/** C type : guint */
	@Field(3) 
	public int instance_size() {
		return this.io.getIntField(this, 3);
	}
	/** C type : guint */
	@Field(3) 
	public GTypeQuery instance_size(int instance_size) {
		this.io.setIntField(this, 3, instance_size);
		return this;
	}
	public GTypeQuery() {
		super();
	}
	public GTypeQuery(Pointer pointer) {
		super(pointer);
	}
}
