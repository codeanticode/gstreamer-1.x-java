package gobject;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * GParamSpecOverride:<br>
 * <br>
 * This is a type of #GParamSpec type that simply redirects operations to<br>
 * another paramspec.  All operations other than getting or<br>
 * setting the value are redirected, including accessing the nick and<br>
 * blurb, validating a value, and so forth. See<br>
 * g_param_spec_get_redirect_target() for retrieving the overidden<br>
 * property. #GParamSpecOverride is used in implementing<br>
 * g_object_class_override_property(), and will not be directly useful<br>
 * unless you are implementing a new base type similar to GObject.<br>
 * <br>
 * Since: 2.4<br>
 * <i>native declaration : glib-2.0/gobject/gparamspecs.h:321</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GObject") 
public class GParamSpecOverride extends StructObject {
	static {
		BridJ.register();
	}
	/**
	 * < private ><br>
	 * C type : GParamSpec
	 */
	@Field(0) 
	public GParamSpec parent_instance() {
		return this.io.getNativeObjectField(this, 0);
	}
	/**
	 * < private ><br>
	 * C type : GParamSpec
	 */
	@Field(0) 
	public GParamSpecOverride parent_instance(GParamSpec parent_instance) {
		this.io.setNativeObjectField(this, 0, parent_instance);
		return this;
	}
	/** C type : GParamSpec* */
	@Field(1) 
	public Pointer<GParamSpec > overridden() {
		return this.io.getPointerField(this, 1);
	}
	/** C type : GParamSpec* */
	@Field(1) 
	public GParamSpecOverride overridden(Pointer<GParamSpec > overridden) {
		this.io.setPointerField(this, 1, overridden);
		return this;
	}
	public GParamSpecOverride() {
		super();
	}
	public GParamSpecOverride(Pointer pointer) {
		super(pointer);
	}
}
