package gobject;
import gobject.GObjectLibrary.GSignalFlags;
import org.bridj.BridJ;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * GSignalInvocationHint:<br>
 * @signal_id: The signal id of the signal invoking the callback<br>
 * @detail: The detail passed on for this emission<br>
 * @run_type: The stage the signal emission is currently in, this<br>
 *  field will contain one of %G_SIGNAL_RUN_FIRST,<br>
 *  %G_SIGNAL_RUN_LAST or %G_SIGNAL_RUN_CLEANUP.<br>
 * <br>
 * The #GSignalInvocationHint structure is used to pass on additional information<br>
 * to callbacks during a signal emission.<br>
 * <i>native declaration : glib-2.0/gobject/gsignal.h:149</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GObject") 
public class GSignalInvocationHint extends StructObject {
	static {
		BridJ.register();
	}
	/** C type : guint */
	@Field(0) 
	public int signal_id() {
		return this.io.getIntField(this, 0);
	}
	/** C type : guint */
	@Field(0) 
	public GSignalInvocationHint signal_id(int signal_id) {
		this.io.setIntField(this, 0, signal_id);
		return this;
	}
	/** C type : GQuark */
	@Field(1) 
	public int detail() {
		return this.io.getIntField(this, 1);
	}
	/** C type : GQuark */
	@Field(1) 
	public GSignalInvocationHint detail(int detail) {
		this.io.setIntField(this, 1, detail);
		return this;
	}
	/** C type : GSignalFlags */
	@Field(2) 
	public IntValuedEnum<GSignalFlags > run_type() {
		return this.io.getEnumField(this, 2);
	}
	/** C type : GSignalFlags */
	@Field(2) 
	public GSignalInvocationHint run_type(IntValuedEnum<GSignalFlags > run_type) {
		this.io.setEnumField(this, 2, run_type);
		return this;
	}
	public GSignalInvocationHint() {
		super();
	}
	public GSignalInvocationHint(Pointer pointer) {
		super(pointer);
	}
}
