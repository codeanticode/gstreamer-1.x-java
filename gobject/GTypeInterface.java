package gobject;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.CLong;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * GTypeInterface:<br>
 * <br>
 * An opaque structure used as the base of all interface types.<br>
 * <i>native declaration : glib-2.0/gobject/gtype.h:40</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GObject") 
public class GTypeInterface extends StructObject {
	static {
		BridJ.register();
	}
	/**
	 * < private ><br>
	 * iface type<br>
	 * C type : GType
	 */
	@CLong 
	@Field(0) 
	public long g_type() {
		return this.io.getCLongField(this, 0);
	}
	/**
	 * < private ><br>
	 * iface type<br>
	 * C type : GType
	 */
	@CLong 
	@Field(0) 
	public GTypeInterface g_type(long g_type) {
		this.io.setCLongField(this, 0, g_type);
		return this;
	}
	/** C type : GType */
	@CLong 
	@Field(1) 
	public long g_instance_type() {
		return this.io.getCLongField(this, 1);
	}
	/** C type : GType */
	@CLong 
	@Field(1) 
	public GTypeInterface g_instance_type(long g_instance_type) {
		this.io.setCLongField(this, 1, g_instance_type);
		return this;
	}
	public GTypeInterface() {
		super();
	}
	public GTypeInterface(Pointer pointer) {
		super(pointer);
	}
}
