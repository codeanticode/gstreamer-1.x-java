package glib;
import glib.GLibLibrary.GHookFinalizeFunc;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Bits;
import org.bridj.ann.CLong;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * --- structures ---<br>
 * <i>native declaration : glib-2.0/glib/ghook.h:25</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GLib") 
public abstract class GHookList extends StructObject {
	static {
		BridJ.register();
	}
	/** C type : gulong */
	@CLong 
	@Field(0) 
	public long seq_id() {
		return this.io.getCLongField(this, 0);
	}
	/** C type : gulong */
	@CLong 
	@Field(0) 
	public GHookList seq_id(long seq_id) {
		this.io.setCLongField(this, 0, seq_id);
		return this;
	}
	/** C type : guint */
	@Field(1) 
	@Bits(16) 
	public int hook_size() {
		return this.io.getIntField(this, 1);
	}
	/** C type : guint */
	@Field(1) 
	@Bits(16) 
	public GHookList hook_size(int hook_size) {
		this.io.setIntField(this, 1, hook_size);
		return this;
	}
	/** C type : guint */
	@Field(2) 
	@Bits(1) 
	public int is_setup() {
		return this.io.getIntField(this, 2);
	}
	/** C type : guint */
	@Field(2) 
	@Bits(1) 
	public GHookList is_setup(int is_setup) {
		this.io.setIntField(this, 2, is_setup);
		return this;
	}
	/** C type : GHook* */
	@Field(3) 
	public Pointer<GHook > hooks() {
		return this.io.getPointerField(this, 3);
	}
	/** C type : GHook* */
	@Field(3) 
	public GHookList hooks(Pointer<GHook > hooks) {
		this.io.setPointerField(this, 3, hooks);
		return this;
	}
	/** Conversion Error : gpointer (Unsupported type) */
	/** C type : GHookFinalizeFunc */
	@Field(5) 
	public Pointer<GHookFinalizeFunc > finalize_hook() {
		return this.io.getPointerField(this, 5);
	}
	/** C type : GHookFinalizeFunc */
	@Field(5) 
	public GHookList finalize_hook(Pointer<GHookFinalizeFunc > finalize_hook) {
		this.io.setPointerField(this, 5, finalize_hook);
		return this;
	}
	/**
	 * Failed to convert value dummy of type gpointer[2]<br>
	 * C type : gpointer[2]
	 */
}
