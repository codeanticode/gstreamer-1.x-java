package glib;
import glib.GLibLibrary.GTestLogType;
import org.bridj.BridJ;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : glib-2.0/glib/gtestutils.h:163</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GLib") 
public class GTestLogMsg extends StructObject {
	static {
		BridJ.register();
	}
	/** C type : GTestLogType */
	@Field(0) 
	public IntValuedEnum<GTestLogType > log_type() {
		return this.io.getEnumField(this, 0);
	}
	/** C type : GTestLogType */
	@Field(0) 
	public GTestLogMsg log_type(IntValuedEnum<GTestLogType > log_type) {
		this.io.setEnumField(this, 0, log_type);
		return this;
	}
	/** C type : guint */
	@Field(1) 
	public int n_strings() {
		return this.io.getIntField(this, 1);
	}
	/** C type : guint */
	@Field(1) 
	public GTestLogMsg n_strings(int n_strings) {
		this.io.setIntField(this, 1, n_strings);
		return this;
	}
	/**
	 * NULL terminated<br>
	 * C type : gchar**
	 */
	@Field(2) 
	public Pointer<Pointer<Byte > > strings() {
		return this.io.getPointerField(this, 2);
	}
	/**
	 * NULL terminated<br>
	 * C type : gchar**
	 */
	@Field(2) 
	public GTestLogMsg strings(Pointer<Pointer<Byte > > strings) {
		this.io.setPointerField(this, 2, strings);
		return this;
	}
	/** C type : guint */
	@Field(3) 
	public int n_nums() {
		return this.io.getIntField(this, 3);
	}
	/** C type : guint */
	@Field(3) 
	public GTestLogMsg n_nums(int n_nums) {
		this.io.setIntField(this, 3, n_nums);
		return this;
	}
	/** C type : long double* */
	@Field(4) 
	public Pointer<Double > nums() {
		return this.io.getPointerField(this, 4);
	}
	/** C type : long double* */
	@Field(4) 
	public GTestLogMsg nums(Pointer<Double > nums) {
		this.io.setPointerField(this, 4, nums);
		return this;
	}
	public GTestLogMsg() {
		super();
	}
	public GTestLogMsg(Pointer pointer) {
		super(pointer);
	}
}
