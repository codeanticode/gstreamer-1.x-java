package glib;
import glib.GLibLibrary.GScannerMsgFunc;
import glib.GLibLibrary.GTokenType;
import org.bridj.BridJ;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : glib-2.0/glib/gscanner.h:125</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("GLib") 
public abstract class GScanner extends StructObject {
	static {
		BridJ.register();
	}
	/** Conversion Error : gpointer (Unsupported type) */
	/** C type : guint */
	@Field(1) 
	public int max_parse_errors() {
		return this.io.getIntField(this, 1);
	}
	/** C type : guint */
	@Field(1) 
	public GScanner max_parse_errors(int max_parse_errors) {
		this.io.setIntField(this, 1, max_parse_errors);
		return this;
	}
	/**
	 * g_scanner_error() increments this field<br>
	 * C type : guint
	 */
	@Field(2) 
	public int parse_errors() {
		return this.io.getIntField(this, 2);
	}
	/**
	 * g_scanner_error() increments this field<br>
	 * C type : guint
	 */
	@Field(2) 
	public GScanner parse_errors(int parse_errors) {
		this.io.setIntField(this, 2, parse_errors);
		return this;
	}
	/**
	 * name of input stream, featured by the default message handler<br>
	 * C type : const gchar*
	 */
	@Field(3) 
	public Pointer<Byte > input_name() {
		return this.io.getPointerField(this, 3);
	}
	/**
	 * name of input stream, featured by the default message handler<br>
	 * C type : const gchar*
	 */
	@Field(3) 
	public GScanner input_name(Pointer<Byte > input_name) {
		this.io.setPointerField(this, 3, input_name);
		return this;
	}
	/** Conversion Error : GData* (failed to convert type to Java (undefined type)) */
	/**
	 * link into the scanner configuration<br>
	 * C type : GScannerConfig*
	 */
	@Field(5) 
	public Pointer<GScannerConfig > config() {
		return this.io.getPointerField(this, 5);
	}
	/**
	 * link into the scanner configuration<br>
	 * C type : GScannerConfig*
	 */
	@Field(5) 
	public GScanner config(Pointer<GScannerConfig > config) {
		this.io.setPointerField(this, 5, config);
		return this;
	}
	/**
	 * fields filled in after g_scanner_get_next_token()<br>
	 * C type : GTokenType
	 */
	@Field(6) 
	public IntValuedEnum<GTokenType > token() {
		return this.io.getEnumField(this, 6);
	}
	/**
	 * fields filled in after g_scanner_get_next_token()<br>
	 * C type : GTokenType
	 */
	@Field(6) 
	public GScanner token(IntValuedEnum<GTokenType > token) {
		this.io.setEnumField(this, 6, token);
		return this;
	}
	/** C type : GTokenValue */
	@Field(7) 
	public GTokenValue value() {
		return this.io.getNativeObjectField(this, 7);
	}
	/** C type : GTokenValue */
	@Field(7) 
	public GScanner value(GTokenValue value) {
		this.io.setNativeObjectField(this, 7, value);
		return this;
	}
	/** C type : guint */
	@Field(8) 
	public int line() {
		return this.io.getIntField(this, 8);
	}
	/** C type : guint */
	@Field(8) 
	public GScanner line(int line) {
		this.io.setIntField(this, 8, line);
		return this;
	}
	/** C type : guint */
	@Field(9) 
	public int position() {
		return this.io.getIntField(this, 9);
	}
	/** C type : guint */
	@Field(9) 
	public GScanner position(int position) {
		this.io.setIntField(this, 9, position);
		return this;
	}
	/**
	 * fields filled in after g_scanner_peek_next_token()<br>
	 * C type : GTokenType
	 */
	@Field(10) 
	public IntValuedEnum<GTokenType > next_token() {
		return this.io.getEnumField(this, 10);
	}
	/**
	 * fields filled in after g_scanner_peek_next_token()<br>
	 * C type : GTokenType
	 */
	@Field(10) 
	public GScanner next_token(IntValuedEnum<GTokenType > next_token) {
		this.io.setEnumField(this, 10, next_token);
		return this;
	}
	/** C type : GTokenValue */
	@Field(11) 
	public GTokenValue next_value() {
		return this.io.getNativeObjectField(this, 11);
	}
	/** C type : GTokenValue */
	@Field(11) 
	public GScanner next_value(GTokenValue next_value) {
		this.io.setNativeObjectField(this, 11, next_value);
		return this;
	}
	/** C type : guint */
	@Field(12) 
	public int next_line() {
		return this.io.getIntField(this, 12);
	}
	/** C type : guint */
	@Field(12) 
	public GScanner next_line(int next_line) {
		this.io.setIntField(this, 12, next_line);
		return this;
	}
	/** C type : guint */
	@Field(13) 
	public int next_position() {
		return this.io.getIntField(this, 13);
	}
	/** C type : guint */
	@Field(13) 
	public GScanner next_position(int next_position) {
		this.io.setIntField(this, 13, next_position);
		return this;
	}
	/** Conversion Error : GHashTable* (failed to convert type to Java (undefined type)) */
	/** C type : gint */
	@Field(15) 
	public int input_fd() {
		return this.io.getIntField(this, 15);
	}
	/** C type : gint */
	@Field(15) 
	public GScanner input_fd(int input_fd) {
		this.io.setIntField(this, 15, input_fd);
		return this;
	}
	/** C type : const gchar* */
	@Field(16) 
	public Pointer<Byte > text() {
		return this.io.getPointerField(this, 16);
	}
	/** C type : const gchar* */
	@Field(16) 
	public GScanner text(Pointer<Byte > text) {
		this.io.setPointerField(this, 16, text);
		return this;
	}
	/** C type : const gchar* */
	@Field(17) 
	public Pointer<Byte > text_end() {
		return this.io.getPointerField(this, 17);
	}
	/** C type : const gchar* */
	@Field(17) 
	public GScanner text_end(Pointer<Byte > text_end) {
		this.io.setPointerField(this, 17, text_end);
		return this;
	}
	/** C type : gchar* */
	@Field(18) 
	public Pointer<Byte > buffer() {
		return this.io.getPointerField(this, 18);
	}
	/** C type : gchar* */
	@Field(18) 
	public GScanner buffer(Pointer<Byte > buffer) {
		this.io.setPointerField(this, 18, buffer);
		return this;
	}
	/** C type : guint */
	@Field(19) 
	public int scope_id() {
		return this.io.getIntField(this, 19);
	}
	/** C type : guint */
	@Field(19) 
	public GScanner scope_id(int scope_id) {
		this.io.setIntField(this, 19, scope_id);
		return this;
	}
	/**
	 * handler function for _warn and _error<br>
	 * C type : GScannerMsgFunc
	 */
	@Field(20) 
	public Pointer<GScannerMsgFunc > msg_handler() {
		return this.io.getPointerField(this, 20);
	}
	/**
	 * handler function for _warn and _error<br>
	 * C type : GScannerMsgFunc
	 */
	@Field(20) 
	public GScanner msg_handler(Pointer<GScannerMsgFunc > msg_handler) {
		this.io.setPointerField(this, 20, msg_handler);
		return this;
	}
}
