/*
Gstreamer 1.0 JNAeration

comments are basically from JNAerator doc
http://code.google.com/p/jnaerator/wiki/CommandLineOptionsAndEnvironmentVariables

*/
-library java_gst
-I/usr/lib/x86_64-linux-gnu/glib-2.0/include
-I/usr/lib/gcc/x86_64-linux-gnu/4.8/include
-I/usr/include/gstreamer-1.0/
-Ilibxml2/include
-Iglib
-Iglib/glib

-DTEST=1

glib/gobject/gobject.h
gstreamer/gst/gst.h

// Generate getters and setters for struct fields (JNA & JNAerator runtimes only) 
-beautifyNames

// JNAerate libraries that use JNA's faster direct call convention 
-direct

// Force the overwrite of existing files 
-f

// Show minimalist progression GUI 
//-gui

/*
-mode <mode: 'Jar' : JAR with bindings only | 'StandaloneJar' : JAR with bindings and runtime dependencies | 'Directory' : Bindings sources in simple file hierarchy | 'Maven' : Bindings sources in Maven project ready to build | 'AutoGeneratedMaven' : Maven project that automatically regenerates its bindings>

Choose the output mode of JNAerator 
*/
-mode Directory

// Set artifact id of the generated Maven project 
-mavenArtifactId com.googlecode.gstreamer-java

// Set group id of the generated Maven project
-mavenGroupId gstreamer1_0-java

// Set version of the generated Maven project 
-mavenVersion 1.7-SNAPSHOT

// Automatically create OO shortcuts for functions that look like methods (typedPtr.someFunc() for someFunc(typedPtr)
//-reification

// Output directory for all artifacts
-o build

//  Set the Java package in which all the output will reside (by default, set to the library name). 
-package org.gstreamer.lowlevel

/* Choose target runtime library between JNA, JNAerator (based on JNA), BridJ (faster runtime that supports C++) (default: BridJ (faster runtime that supports C++)).  */
-runtime JNA

/* Splits the pre-processor output into multiple smaller parts and parse them separately (in theory everything should be parsed in one chunk, but in practice this means errors are not isolated from the rest of the parsing) */
-parseChunks

// Generate synchronized native methods 
-synchronized

// Verbose output (both console and files) 
-v

